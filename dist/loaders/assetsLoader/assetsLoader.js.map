{"version":3,"file":"assetsLoader.js","names":["_nodePath","_interopRequireDefault","require","_nodeUtil","_index","_convertToRemoteAssets","_extractAssets","_inlineAssets","_options","_utils","e","__esModule","default","raw","exports","testXml","testMP4","testImages","testFonts","repackAssetsLoader","assetData","cacheable","callback","async","logger","getLogger","options","getOptions","isDev","_compiler","devServer","platform","name","readDirAsync","util","promisify","fs","readdir","readFileAsync","readFile","debug","resourcePath","scalableAssetExtensions","SCALABLE_ASSETS","scalableAssetResolutions","SCALABLE_RESOLUTIONS","pathSeparatorRegexp","RegExp","path","sep","resourceAbsoluteDirname","dirname","resourceDirname","relative","rootContext","replace","resourceExtensionType","extname","suffixPattern","resourceFilename","basename","resourceNormalizedFilename","length","toLowerCase","assetsDirname","remoteAssetsDirname","scales","collectScales","scaleKeys","Object","keys","sort","a","b","getScaleNumber","scaleKey","assetPath","addDependency","remoteAssetPathOption","remote","enabled","remoteAssetResource","filename","assets","Promise","all","map","isLoaded","content","destination","test","indexOf","Error","join","scale","dimensions","getAssetDimensions","resourceData","resourceScale","data","JSON","stringify","asset","result","inline","inlineAssets","emitFile","convertToRemoteAssets","remotePublicPath","publicPath","extractAssets","error"],"sources":["../../../src/loaders/assetsLoader/assetsLoader.ts"],"sourcesContent":["import type fs from 'node:fs';\nimport path from 'node:path';\nimport util from 'node:util';\nimport { SCALABLE_ASSETS, SCALABLE_RESOLUTIONS } from '../../utils/index.js';\nimport { convertToRemoteAssets } from './convertToRemoteAssets.js';\nimport { extractAssets } from './extractAssets.js';\nimport { inlineAssets } from './inlineAssets.js';\nimport { type AssetLoaderContext, getOptions } from './options.js';\nimport type { Asset } from './types.js';\nimport { collectScales, getAssetDimensions, getScaleNumber } from './utils.js';\n\ntype AsyncFS = (typeof fs)['promises'];\n\nexport const raw = true;\n\nconst testXml = /\\.(xml)$/;\nconst testMP4 = /\\.(mp4)$/;\nconst testImages = /\\.(png|jpg|gif|webp)$/;\nconst testFonts = /\\.(ttf|otf|ttc)$/;\n\nexport default async function repackAssetsLoader(\n  this: AssetLoaderContext,\n  assetData: Buffer\n) {\n  this.cacheable();\n  const callback = this.async();\n  const logger = this.getLogger('repackAssetsLoader');\n  const options = getOptions(this);\n\n  const isDev = !!this._compiler.options.devServer;\n  const platform = options.platform ?? (this._compiler.options.name as string);\n\n  const readDirAsync: AsyncFS['readdir'] = util.promisify(this.fs.readdir);\n  const readFileAsync: AsyncFS['readFile'] = util.promisify(this.fs.readFile);\n\n  logger.debug(`Processing asset ${this.resourcePath}`);\n\n  try {\n    // defaults\n    const scalableAssetExtensions =\n      options.scalableAssetExtensions ?? SCALABLE_ASSETS;\n    const scalableAssetResolutions =\n      options.scalableAssetResolutions ?? SCALABLE_RESOLUTIONS;\n\n    const pathSeparatorRegexp = new RegExp(`\\\\${path.sep}`, 'g');\n    const resourcePath = this.resourcePath;\n    const resourceAbsoluteDirname = path.dirname(resourcePath);\n    // Relative path to rootContext without any ../ due to https://github.com/callstack/haul/issues/474\n    // Assets from from outside of rootContext, should still be placed inside bundle output directory.\n    // Example:\n    //   resourcePath    = <abs>/monorepo/node_modules/my-module/image.png\n    //   dirname         = <abs>/monorepo/node_modules/my-module\n    //   rootContext     = <abs>/monorepo/packages/my-app/\n    //   resourceDirname = ../../node_modules/my-module (original)\n    // So when we calculate destination for the asset for iOS (assetsDirname + resourceDirname + filename),\n    // it will end up outside of `assets` directory, so we have to make sure it's:\n    //   resourceDirname = node_modules/my-module (tweaked)\n    const resourceDirname = path\n      .relative(this.rootContext, resourceAbsoluteDirname)\n      .replace(new RegExp(`^[\\\\.\\\\${path.sep}]+`), '');\n    const resourceExtensionType = path.extname(resourcePath).replace(/^\\./, '');\n    const suffixPattern = `(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${platform}|native))?\\\\.${resourceExtensionType}$`;\n    const resourceFilename = path\n      .basename(resourcePath)\n      .replace(new RegExp(suffixPattern), '');\n    // Name with embedded resourceDirname eg `node_modules_reactnative_libraries_newappscreen_components_logo.png`\n    const resourceNormalizedFilename = `${(resourceDirname.length === 0\n      ? resourceFilename\n      : `${resourceDirname.replace(\n          pathSeparatorRegexp,\n          '_'\n        )}_${resourceFilename}`\n    )\n      .toLowerCase()\n      .replace(/[^a-z0-9_]/g, '')}.${resourceExtensionType}`;\n\n    const assetsDirname = 'assets';\n    const remoteAssetsDirname = 'remote-assets';\n\n    const scales = await collectScales(\n      resourceAbsoluteDirname,\n      resourceFilename,\n      resourceExtensionType,\n      scalableAssetExtensions,\n      scalableAssetResolutions,\n      platform,\n      readDirAsync\n    );\n\n    const scaleKeys = Object.keys(scales).sort(\n      (a, b) => getScaleNumber(a) - getScaleNumber(b)\n    );\n\n    for (const scaleKey of scaleKeys) {\n      const assetPath = scales[scaleKey];\n      this.addDependency(assetPath);\n    }\n\n    const remoteAssetPathOption =\n      options.remote?.enabled && options.remote?.assetPath\n        ? options.remote?.assetPath({\n            resourcePath,\n            resourceFilename,\n            resourceDirname,\n            resourceExtensionType,\n          })\n        : null;\n\n    const remoteAssetResource = remoteAssetPathOption\n      ? {\n          filename: path.basename(\n            remoteAssetPathOption,\n            `.${resourceExtensionType}`\n          ),\n          path: path.dirname(remoteAssetPathOption),\n        }\n      : null;\n\n    // assets are sorted by scale, in ascending order\n    const assets = await Promise.all<Asset>(\n      scaleKeys.map(async (scaleKey) => {\n        const assetPath = scales[scaleKey];\n        const isLoaded = assetPath === resourcePath;\n        // use raw Buffer passed to loader to avoid unnecessary read\n        const content = isLoaded ? assetData : await readFileAsync(assetPath);\n\n        let destination: string;\n\n        if (!isDev && !options.remote?.enabled && platform === 'android') {\n          // found font family\n          if (\n            testXml.test(resourceNormalizedFilename) &&\n            content?.indexOf('font-family') !== -1\n          ) {\n            destination = 'font';\n          } else if (testFonts.test(resourceNormalizedFilename)) {\n            // font extensions\n            destination = 'font';\n          } else if (testMP4.test(resourceNormalizedFilename)) {\n            // video files extensions\n            destination = 'raw';\n          } else if (\n            testImages.test(resourceNormalizedFilename) ||\n            testXml.test(resourceNormalizedFilename)\n          ) {\n            // images extensions\n            switch (scaleKey) {\n              case '@0.75x':\n                destination = 'drawable-ldpi';\n                break;\n              case '@1x':\n                destination = 'drawable-mdpi';\n                break;\n              case '@1.5x':\n                destination = 'drawable-hdpi';\n                break;\n              case '@2x':\n                destination = 'drawable-xhdpi';\n                break;\n              case '@3x':\n                destination = 'drawable-xxhdpi';\n                break;\n              case '@4x':\n                destination = 'drawable-xxxhdpi';\n                break;\n              default:\n                throw new Error(`Unknown scale ${scaleKey} for ${assetPath}`);\n            }\n          } else {\n            // everything else is going to RAW\n            destination = 'raw';\n          }\n\n          destination = path.join(destination, resourceNormalizedFilename);\n        } else {\n          const name = `${remoteAssetResource?.filename ?? resourceFilename}${\n            scaleKey === '@1x' ? '' : scaleKey\n          }.${resourceExtensionType}`;\n\n          if (options.remote?.enabled) {\n            destination = path.join(\n              remoteAssetsDirname,\n              assetsDirname,\n              remoteAssetResource?.path ?? resourceDirname,\n              name\n            );\n          } else {\n            destination = path.join(assetsDirname, resourceDirname, name);\n          }\n        }\n\n        const scale = getScaleNumber(scaleKey);\n        const dimensions = getAssetDimensions({\n          resourceData: content,\n          resourceScale: scale,\n        });\n\n        return {\n          data: content,\n          dimensions,\n          filename: destination,\n          scale,\n        };\n      })\n    );\n\n    logger.debug(\n      `Resolved request ${this.resourcePath}`,\n      JSON.stringify({\n        platform,\n        rootContext: this.rootContext,\n        resourceNormalizedFilename,\n        resourceFilename,\n        resourceDirname,\n        resourceAbsoluteDirname,\n        resourceExtensionType,\n        scales,\n        assets: assets.map((asset) => ({\n          ...asset,\n          content: `size=${asset.data.length} type=${typeof asset.data}`,\n        })),\n      })\n    );\n\n    let result: string;\n    if (options.inline) {\n      logger.debug(`Inlining assets for request ${resourcePath}`);\n      result = inlineAssets({ assets, resourcePath });\n    } else {\n      for (const asset of assets) {\n        const { data, filename } = asset;\n        logger.debug(`Emitting asset ${filename} for request ${resourcePath}`);\n\n        // Assets are emitted relatively to `output.path`.\n        this.emitFile(filename, data ?? '');\n      }\n\n      if (options.remote?.enabled) {\n        result = convertToRemoteAssets({\n          assets,\n          assetsDirname,\n          remotePublicPath: options.remote.publicPath,\n          resourceDirname: remoteAssetResource?.path ?? resourceDirname,\n          resourceExtensionType,\n          resourceFilename: remoteAssetResource?.filename ?? resourceFilename,\n          resourcePath,\n          suffixPattern,\n          pathSeparatorRegexp,\n        });\n      } else {\n        result = extractAssets(\n          {\n            resourcePath,\n            resourceDirname,\n            resourceFilename,\n            resourceExtensionType,\n            assets,\n            suffixPattern,\n            assetsDirname,\n            pathSeparatorRegexp,\n            publicPath: options.publicPath,\n            isDev,\n          },\n          logger\n        );\n      }\n    }\n    callback?.(null, result);\n  } catch (error) {\n    callback?.(error as Error);\n  }\n}\n"],"mappings":";;;;;;;AACA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,sBAAA,GAAAH,OAAA;AACA,IAAAI,cAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AACA,IAAAM,QAAA,GAAAN,OAAA;AAEA,IAAAO,MAAA,GAAAP,OAAA;AAA+E,SAAAD,uBAAAS,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAIxE,MAAMG,GAAG,GAAAC,OAAA,CAAAD,GAAA,GAAG,IAAI;AAEvB,MAAME,OAAO,GAAG,UAAU;AAC1B,MAAMC,OAAO,GAAG,UAAU;AAC1B,MAAMC,UAAU,GAAG,uBAAuB;AAC1C,MAAMC,SAAS,GAAG,kBAAkB;AAErB,eAAeC,kBAAkBA,CAE9CC,SAAiB,EACjB;EACA,IAAI,CAACC,SAAS,CAAC,CAAC;EAChB,MAAMC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;EAC7B,MAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,oBAAoB,CAAC;EACnD,MAAMC,OAAO,GAAG,IAAAC,mBAAU,EAAC,IAAI,CAAC;EAEhC,MAAMC,KAAK,GAAG,CAAC,CAAC,IAAI,CAACC,SAAS,CAACH,OAAO,CAACI,SAAS;EAChD,MAAMC,QAAQ,GAAGL,OAAO,CAACK,QAAQ,IAAK,IAAI,CAACF,SAAS,CAACH,OAAO,CAACM,IAAe;EAE5E,MAAMC,YAAgC,GAAGC,iBAAI,CAACC,SAAS,CAAC,IAAI,CAACC,EAAE,CAACC,OAAO,CAAC;EACxE,MAAMC,aAAkC,GAAGJ,iBAAI,CAACC,SAAS,CAAC,IAAI,CAACC,EAAE,CAACG,QAAQ,CAAC;EAE3Ef,MAAM,CAACgB,KAAK,CAAC,oBAAoB,IAAI,CAACC,YAAY,EAAE,CAAC;EAErD,IAAI;IACF;IACA,MAAMC,uBAAuB,GAC3BhB,OAAO,CAACgB,uBAAuB,IAAIC,sBAAe;IACpD,MAAMC,wBAAwB,GAC5BlB,OAAO,CAACkB,wBAAwB,IAAIC,2BAAoB;IAE1D,MAAMC,mBAAmB,GAAG,IAAIC,MAAM,CAAC,KAAKC,iBAAI,CAACC,GAAG,EAAE,EAAE,GAAG,CAAC;IAC5D,MAAMR,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMS,uBAAuB,GAAGF,iBAAI,CAACG,OAAO,CAACV,YAAY,CAAC;IAC1D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMW,eAAe,GAAGJ,iBAAI,CACzBK,QAAQ,CAAC,IAAI,CAACC,WAAW,EAAEJ,uBAAuB,CAAC,CACnDK,OAAO,CAAC,IAAIR,MAAM,CAAC,UAAUC,iBAAI,CAACC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;IAClD,MAAMO,qBAAqB,GAAGR,iBAAI,CAACS,OAAO,CAAChB,YAAY,CAAC,CAACc,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAC3E,MAAMG,aAAa,GAAG,2BAA2B3B,QAAQ,gBAAgByB,qBAAqB,GAAG;IACjG,MAAMG,gBAAgB,GAAGX,iBAAI,CAC1BY,QAAQ,CAACnB,YAAY,CAAC,CACtBc,OAAO,CAAC,IAAIR,MAAM,CAACW,aAAa,CAAC,EAAE,EAAE,CAAC;IACzC;IACA,MAAMG,0BAA0B,GAAG,GAAG,CAACT,eAAe,CAACU,MAAM,KAAK,CAAC,GAC/DH,gBAAgB,GAChB,GAAGP,eAAe,CAACG,OAAO,CACxBT,mBAAmB,EACnB,GACF,CAAC,IAAIa,gBAAgB,EAAE,EAExBI,WAAW,CAAC,CAAC,CACbR,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,IAAIC,qBAAqB,EAAE;IAExD,MAAMQ,aAAa,GAAG,QAAQ;IAC9B,MAAMC,mBAAmB,GAAG,eAAe;IAE3C,MAAMC,MAAM,GAAG,MAAM,IAAAC,oBAAa,EAChCjB,uBAAuB,EACvBS,gBAAgB,EAChBH,qBAAqB,EACrBd,uBAAuB,EACvBE,wBAAwB,EACxBb,QAAQ,EACRE,YACF,CAAC;IAED,MAAMmC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,IAAI,CACxC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAAC,qBAAc,EAACF,CAAC,CAAC,GAAG,IAAAE,qBAAc,EAACD,CAAC,CAChD,CAAC;IAED,KAAK,MAAME,QAAQ,IAAIP,SAAS,EAAE;MAChC,MAAMQ,SAAS,GAAGV,MAAM,CAACS,QAAQ,CAAC;MAClC,IAAI,CAACE,aAAa,CAACD,SAAS,CAAC;IAC/B;IAEA,MAAME,qBAAqB,GACzBpD,OAAO,CAACqD,MAAM,EAAEC,OAAO,IAAItD,OAAO,CAACqD,MAAM,EAAEH,SAAS,GAChDlD,OAAO,CAACqD,MAAM,EAAEH,SAAS,CAAC;MACxBnC,YAAY;MACZkB,gBAAgB;MAChBP,eAAe;MACfI;IACF,CAAC,CAAC,GACF,IAAI;IAEV,MAAMyB,mBAAmB,GAAGH,qBAAqB,GAC7C;MACEI,QAAQ,EAAElC,iBAAI,CAACY,QAAQ,CACrBkB,qBAAqB,EACrB,IAAItB,qBAAqB,EAC3B,CAAC;MACDR,IAAI,EAAEA,iBAAI,CAACG,OAAO,CAAC2B,qBAAqB;IAC1C,CAAC,GACD,IAAI;;IAER;IACA,MAAMK,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC9BjB,SAAS,CAACkB,GAAG,CAAC,MAAOX,QAAQ,IAAK;MAChC,MAAMC,SAAS,GAAGV,MAAM,CAACS,QAAQ,CAAC;MAClC,MAAMY,QAAQ,GAAGX,SAAS,KAAKnC,YAAY;MAC3C;MACA,MAAM+C,OAAO,GAAGD,QAAQ,GAAGnE,SAAS,GAAG,MAAMkB,aAAa,CAACsC,SAAS,CAAC;MAErE,IAAIa,WAAmB;MAEvB,IAAI,CAAC7D,KAAK,IAAI,CAACF,OAAO,CAACqD,MAAM,EAAEC,OAAO,IAAIjD,QAAQ,KAAK,SAAS,EAAE;QAChE;QACA,IACEhB,OAAO,CAAC2E,IAAI,CAAC7B,0BAA0B,CAAC,IACxC2B,OAAO,EAAEG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EACtC;UACAF,WAAW,GAAG,MAAM;QACtB,CAAC,MAAM,IAAIvE,SAAS,CAACwE,IAAI,CAAC7B,0BAA0B,CAAC,EAAE;UACrD;UACA4B,WAAW,GAAG,MAAM;QACtB,CAAC,MAAM,IAAIzE,OAAO,CAAC0E,IAAI,CAAC7B,0BAA0B,CAAC,EAAE;UACnD;UACA4B,WAAW,GAAG,KAAK;QACrB,CAAC,MAAM,IACLxE,UAAU,CAACyE,IAAI,CAAC7B,0BAA0B,CAAC,IAC3C9C,OAAO,CAAC2E,IAAI,CAAC7B,0BAA0B,CAAC,EACxC;UACA;UACA,QAAQc,QAAQ;YACd,KAAK,QAAQ;cACXc,WAAW,GAAG,eAAe;cAC7B;YACF,KAAK,KAAK;cACRA,WAAW,GAAG,eAAe;cAC7B;YACF,KAAK,OAAO;cACVA,WAAW,GAAG,eAAe;cAC7B;YACF,KAAK,KAAK;cACRA,WAAW,GAAG,gBAAgB;cAC9B;YACF,KAAK,KAAK;cACRA,WAAW,GAAG,iBAAiB;cAC/B;YACF,KAAK,KAAK;cACRA,WAAW,GAAG,kBAAkB;cAChC;YACF;cACE,MAAM,IAAIG,KAAK,CAAC,iBAAiBjB,QAAQ,QAAQC,SAAS,EAAE,CAAC;UACjE;QACF,CAAC,MAAM;UACL;UACAa,WAAW,GAAG,KAAK;QACrB;QAEAA,WAAW,GAAGzC,iBAAI,CAAC6C,IAAI,CAACJ,WAAW,EAAE5B,0BAA0B,CAAC;MAClE,CAAC,MAAM;QACL,MAAM7B,IAAI,GAAG,GAAGiD,mBAAmB,EAAEC,QAAQ,IAAIvB,gBAAgB,GAC/DgB,QAAQ,KAAK,KAAK,GAAG,EAAE,GAAGA,QAAQ,IAChCnB,qBAAqB,EAAE;QAE3B,IAAI9B,OAAO,CAACqD,MAAM,EAAEC,OAAO,EAAE;UAC3BS,WAAW,GAAGzC,iBAAI,CAAC6C,IAAI,CACrB5B,mBAAmB,EACnBD,aAAa,EACbiB,mBAAmB,EAAEjC,IAAI,IAAII,eAAe,EAC5CpB,IACF,CAAC;QACH,CAAC,MAAM;UACLyD,WAAW,GAAGzC,iBAAI,CAAC6C,IAAI,CAAC7B,aAAa,EAAEZ,eAAe,EAAEpB,IAAI,CAAC;QAC/D;MACF;MAEA,MAAM8D,KAAK,GAAG,IAAApB,qBAAc,EAACC,QAAQ,CAAC;MACtC,MAAMoB,UAAU,GAAG,IAAAC,yBAAkB,EAAC;QACpCC,YAAY,EAAET,OAAO;QACrBU,aAAa,EAAEJ;MACjB,CAAC,CAAC;MAEF,OAAO;QACLK,IAAI,EAAEX,OAAO;QACbO,UAAU;QACVb,QAAQ,EAAEO,WAAW;QACrBK;MACF,CAAC;IACH,CAAC,CACH,CAAC;IAEDtE,MAAM,CAACgB,KAAK,CACV,oBAAoB,IAAI,CAACC,YAAY,EAAE,EACvC2D,IAAI,CAACC,SAAS,CAAC;MACbtE,QAAQ;MACRuB,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BO,0BAA0B;MAC1BF,gBAAgB;MAChBP,eAAe;MACfF,uBAAuB;MACvBM,qBAAqB;MACrBU,MAAM;MACNiB,MAAM,EAAEA,MAAM,CAACG,GAAG,CAAEgB,KAAK,KAAM;QAC7B,GAAGA,KAAK;QACRd,OAAO,EAAE,QAAQc,KAAK,CAACH,IAAI,CAACrC,MAAM,SAAS,OAAOwC,KAAK,CAACH,IAAI;MAC9D,CAAC,CAAC;IACJ,CAAC,CACH,CAAC;IAED,IAAII,MAAc;IAClB,IAAI7E,OAAO,CAAC8E,MAAM,EAAE;MAClBhF,MAAM,CAACgB,KAAK,CAAC,+BAA+BC,YAAY,EAAE,CAAC;MAC3D8D,MAAM,GAAG,IAAAE,0BAAY,EAAC;QAAEtB,MAAM;QAAE1C;MAAa,CAAC,CAAC;IACjD,CAAC,MAAM;MACL,KAAK,MAAM6D,KAAK,IAAInB,MAAM,EAAE;QAC1B,MAAM;UAAEgB,IAAI;UAAEjB;QAAS,CAAC,GAAGoB,KAAK;QAChC9E,MAAM,CAACgB,KAAK,CAAC,kBAAkB0C,QAAQ,gBAAgBzC,YAAY,EAAE,CAAC;;QAEtE;QACA,IAAI,CAACiE,QAAQ,CAACxB,QAAQ,EAAEiB,IAAI,IAAI,EAAE,CAAC;MACrC;MAEA,IAAIzE,OAAO,CAACqD,MAAM,EAAEC,OAAO,EAAE;QAC3BuB,MAAM,GAAG,IAAAI,4CAAqB,EAAC;UAC7BxB,MAAM;UACNnB,aAAa;UACb4C,gBAAgB,EAAElF,OAAO,CAACqD,MAAM,CAAC8B,UAAU;UAC3CzD,eAAe,EAAE6B,mBAAmB,EAAEjC,IAAI,IAAII,eAAe;UAC7DI,qBAAqB;UACrBG,gBAAgB,EAAEsB,mBAAmB,EAAEC,QAAQ,IAAIvB,gBAAgB;UACnElB,YAAY;UACZiB,aAAa;UACbZ;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLyD,MAAM,GAAG,IAAAO,4BAAa,EACpB;UACErE,YAAY;UACZW,eAAe;UACfO,gBAAgB;UAChBH,qBAAqB;UACrB2B,MAAM;UACNzB,aAAa;UACbM,aAAa;UACblB,mBAAmB;UACnB+D,UAAU,EAAEnF,OAAO,CAACmF,UAAU;UAC9BjF;QACF,CAAC,EACDJ,MACF,CAAC;MACH;IACF;IACAF,QAAQ,GAAG,IAAI,EAAEiF,MAAM,CAAC;EAC1B,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdzF,QAAQ,GAAGyF,KAAc,CAAC;EAC5B;AACF","ignoreList":[]}