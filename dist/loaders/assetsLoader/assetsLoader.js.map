{"version":3,"file":"assetsLoader.js","names":["_nodePath","_interopRequireDefault","require","_nodeUtil","_utils","_convertToRemoteAssets","_extractAssets","_inlineAssets","_options","_utils2","e","__esModule","default","raw","exports","testXml","testMP4","testImages","testFonts","repackAssetsLoader","assetData","cacheable","callback","async","logger","getLogger","readDirAsync","util","promisify","fs","readdir","readFileAsync","readFile","debug","resourcePath","options","getOptions","scalableAssetExtensions","SCALABLE_ASSETS","scalableAssetResolutions","SCALABLE_RESOLUTIONS","pathSeparatorRegexp","RegExp","path","sep","resourceAbsoluteDirname","dirname","resourceDirname","relative","rootContext","replace","resourceExtensionType","extname","suffixPattern","platform","resourceFilename","basename","resourceNormalizedFilename","length","toLowerCase","assetsDirname","remoteAssetsDirname","scales","collectScales","scaleKeys","Object","keys","sort","a","b","getScaleNumber","scaleKey","assetPath","addDependency","remoteAssetPathOption","remote","enabled","remoteAssetResource","filename","assets","Promise","all","map","isDefault","content","destination","devServerEnabled","test","indexOf","Error","join","name","scale","dimensions","getAssetDimensions","resourceData","resourceScale","data","JSON","stringify","asset","result","inline","inlineAssets","emitFile","convertToRemoteAssets","remotePublicPath","publicPath","extractAssets","error"],"sources":["../../../src/loaders/assetsLoader/assetsLoader.ts"],"sourcesContent":["import type fs from 'node:fs';\nimport path from 'node:path';\nimport util from 'node:util';\nimport { SCALABLE_ASSETS, SCALABLE_RESOLUTIONS } from '../../utils';\nimport { convertToRemoteAssets } from './convertToRemoteAssets';\nimport { extractAssets } from './extractAssets';\nimport { inlineAssets } from './inlineAssets';\nimport { type AssetLoaderContext, getOptions } from './options';\nimport type { Asset } from './types';\nimport { collectScales, getAssetDimensions, getScaleNumber } from './utils';\n\ntype AsyncFS = (typeof fs)['promises'];\n\nexport const raw = true;\n\nconst testXml = /\\.(xml)$/;\nconst testMP4 = /\\.(mp4)$/;\nconst testImages = /\\.(png|jpg|gif|webp)$/;\nconst testFonts = /\\.(ttf|otf|ttc)$/;\n\nexport default async function repackAssetsLoader(\n  this: AssetLoaderContext,\n  assetData: Buffer\n) {\n  this.cacheable();\n  const callback = this.async();\n  const logger = this.getLogger('repackAssetsLoader');\n\n  const readDirAsync: AsyncFS['readdir'] = util.promisify(this.fs.readdir);\n  const readFileAsync: AsyncFS['readFile'] = util.promisify(this.fs.readFile);\n\n  logger.debug(`Processing asset ${this.resourcePath}`);\n\n  try {\n    const options = getOptions(this);\n\n    // defaults\n    const scalableAssetExtensions =\n      options.scalableAssetExtensions ?? SCALABLE_ASSETS;\n    const scalableAssetResolutions =\n      options.scalableAssetResolutions ?? SCALABLE_RESOLUTIONS;\n\n    const pathSeparatorRegexp = new RegExp(`\\\\${path.sep}`, 'g');\n    const resourcePath = this.resourcePath;\n    const resourceAbsoluteDirname = path.dirname(resourcePath);\n    // Relative path to rootContext without any ../ due to https://github.com/callstack/haul/issues/474\n    // Assets from from outside of rootContext, should still be placed inside bundle output directory.\n    // Example:\n    //   resourcePath    = <abs>/monorepo/node_modules/my-module/image.png\n    //   dirname         = <abs>/monorepo/node_modules/my-module\n    //   rootContext     = <abs>/monorepo/packages/my-app/\n    //   resourceDirname = ../../node_modules/my-module (original)\n    // So when we calculate destination for the asset for iOS (assetsDirname + resourceDirname + filename),\n    // it will end up outside of `assets` directory, so we have to make sure it's:\n    //   resourceDirname = node_modules/my-module (tweaked)\n    const resourceDirname = path\n      .relative(this.rootContext, resourceAbsoluteDirname)\n      .replace(new RegExp(`^[\\\\.\\\\${path.sep}]+`), '');\n    const resourceExtensionType = path.extname(resourcePath).replace(/^\\./, '');\n    const suffixPattern = `(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${options.platform}|native))?\\\\.${resourceExtensionType}$`;\n    const resourceFilename = path\n      .basename(resourcePath)\n      .replace(new RegExp(suffixPattern), '');\n    // Name with embedded resourceDirname eg `node_modules_reactnative_libraries_newappscreen_components_logo.png`\n    const resourceNormalizedFilename = `${(resourceDirname.length === 0\n      ? resourceFilename\n      : `${resourceDirname.replace(\n          pathSeparatorRegexp,\n          '_'\n        )}_${resourceFilename}`\n    )\n      .toLowerCase()\n      .replace(/[^a-z0-9_]/g, '')}.${resourceExtensionType}`;\n\n    const assetsDirname = 'assets';\n    const remoteAssetsDirname = 'remote-assets';\n\n    const scales = await collectScales(\n      resourceAbsoluteDirname,\n      resourceFilename,\n      resourceExtensionType,\n      scalableAssetExtensions,\n      scalableAssetResolutions,\n      readDirAsync\n    );\n\n    const scaleKeys = Object.keys(scales).sort(\n      (a, b) => getScaleNumber(a) - getScaleNumber(b)\n    );\n\n    for (const scaleKey of scaleKeys) {\n      const assetPath = scales[scaleKey];\n      this.addDependency(assetPath);\n    }\n\n    const remoteAssetPathOption =\n      options.remote?.enabled && options.remote?.assetPath\n        ? options.remote?.assetPath({\n            resourcePath,\n            resourceFilename,\n            resourceDirname,\n            resourceExtensionType,\n          })\n        : null;\n\n    const remoteAssetResource = remoteAssetPathOption\n      ? {\n          filename: path.basename(\n            remoteAssetPathOption,\n            `.${resourceExtensionType}`\n          ),\n          path: path.dirname(remoteAssetPathOption),\n        }\n      : null;\n\n    const assets = await Promise.all<Asset>(\n      scaleKeys.map(async (scaleKey) => {\n        const assetPath = scales[scaleKey];\n        const isDefault = assetPath === resourcePath;\n        // use raw Buffer passed to loader to avoid unnecessary read\n        const content = isDefault ? assetData : await readFileAsync(assetPath);\n\n        let destination: string;\n\n        if (\n          !options.devServerEnabled &&\n          !options.remote?.enabled &&\n          options.platform === 'android'\n        ) {\n          // found font family\n          if (\n            testXml.test(resourceNormalizedFilename) &&\n            content?.indexOf('font-family') !== -1\n          ) {\n            destination = 'font';\n          } else if (testFonts.test(resourceNormalizedFilename)) {\n            // font extensions\n            destination = 'font';\n          } else if (testMP4.test(resourceNormalizedFilename)) {\n            // video files extensions\n            destination = 'raw';\n          } else if (\n            testImages.test(resourceNormalizedFilename) ||\n            testXml.test(resourceNormalizedFilename)\n          ) {\n            // images extensions\n            switch (scaleKey) {\n              case '@0.75x':\n                destination = 'drawable-ldpi';\n                break;\n              case '@1x':\n                destination = 'drawable-mdpi';\n                break;\n              case '@1.5x':\n                destination = 'drawable-hdpi';\n                break;\n              case '@2x':\n                destination = 'drawable-xhdpi';\n                break;\n              case '@3x':\n                destination = 'drawable-xxhdpi';\n                break;\n              case '@4x':\n                destination = 'drawable-xxxhdpi';\n                break;\n              default:\n                throw new Error(`Unknown scale ${scaleKey} for ${assetPath}`);\n            }\n          } else {\n            // everything else is going to RAW\n            destination = 'raw';\n          }\n\n          destination = path.join(destination, resourceNormalizedFilename);\n        } else {\n          const name = `${remoteAssetResource?.filename ?? resourceFilename}${\n            scaleKey === '@1x' ? '' : scaleKey\n          }.${resourceExtensionType}`;\n\n          if (options.remote?.enabled) {\n            destination = path.join(\n              remoteAssetsDirname,\n              assetsDirname,\n              remoteAssetResource?.path ?? resourceDirname,\n              name\n            );\n          } else {\n            destination = path.join(assetsDirname, resourceDirname, name);\n          }\n        }\n\n        const scale = getScaleNumber(scaleKey);\n        const dimensions = getAssetDimensions({\n          resourceData: content,\n          resourceScale: scale,\n        });\n\n        return {\n          data: content,\n          default: isDefault,\n          dimensions,\n          filename: destination,\n          scale,\n        };\n      })\n    );\n\n    logger.debug(\n      `Resolved request ${this.resourcePath}`,\n      JSON.stringify({\n        platform: options.platform,\n        rootContext: this.rootContext,\n        resourceNormalizedFilename,\n        resourceFilename,\n        resourceDirname,\n        resourceAbsoluteDirname,\n        resourceExtensionType,\n        scales,\n        assets: assets.map((asset) => ({\n          ...asset,\n          content: `size=${asset.data.length} type=${typeof asset.data}`,\n        })),\n      })\n    );\n\n    let result: string;\n    if (options.inline) {\n      logger.debug(`Inlining assets for request ${resourcePath}`);\n      result = inlineAssets({ assets, resourcePath });\n    } else {\n      for (const asset of assets) {\n        const { data, filename } = asset;\n        logger.debug(`Emitting asset ${filename} for request ${resourcePath}`);\n\n        // Assets are emitted relatively to `output.path`.\n        this.emitFile(filename, data ?? '');\n      }\n\n      if (options.remote?.enabled) {\n        result = convertToRemoteAssets({\n          assets,\n          assetsDirname,\n          remotePublicPath: options.remote.publicPath,\n          resourceDirname: remoteAssetResource?.path ?? resourceDirname,\n          resourceExtensionType,\n          resourceFilename: remoteAssetResource?.filename ?? resourceFilename,\n          resourcePath,\n          suffixPattern,\n          pathSeparatorRegexp,\n        });\n      } else {\n        result = extractAssets(\n          {\n            resourcePath,\n            resourceDirname,\n            resourceFilename,\n            resourceExtensionType,\n            assets,\n            suffixPattern,\n            assetsDirname,\n            pathSeparatorRegexp,\n            publicPath: options.publicPath,\n            devServerEnabled: options.devServerEnabled,\n          },\n          logger\n        );\n      }\n    }\n    callback?.(null, result);\n  } catch (error) {\n    callback?.(error as Error);\n  }\n}\n"],"mappings":"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","ignoreList":[]}