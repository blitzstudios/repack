{"version":3,"file":"convertToRemoteAssets.js","names":["_nodePath","_interopRequireDefault","require","_dedent","_utils","e","__esModule","default","convertToRemoteAssets","assets","assetsDirname","remotePublicPath","resourceDirname","resourceExtensionType","resourceFilename","pathSeparatorRegexp","assetPath","path","join","replace","publicPathURL","URL","size","getAssetSize","asset","JSON","stringify","name","type","httpServerLocation","href","scales","map","scale","height","width","dedent"],"sources":["../../../src/loaders/assetsLoader/convertToRemoteAssets.ts"],"sourcesContent":["import path from 'node:path';\nimport dedent from 'dedent';\nimport type { Asset } from './types.js';\nimport { getAssetSize } from './utils.js';\n\nexport function convertToRemoteAssets({\n  assets,\n  assetsDirname,\n  remotePublicPath,\n  resourceDirname,\n  resourceExtensionType,\n  resourceFilename,\n  pathSeparatorRegexp,\n}: {\n  assets: Asset[];\n  assetsDirname: string;\n  remotePublicPath: string;\n  resourceDirname: string;\n  resourceExtensionType: string;\n  resourceFilename: string;\n  resourcePath: string;\n  suffixPattern: string;\n  pathSeparatorRegexp: RegExp;\n}) {\n  const assetPath = path\n    .join(assetsDirname, resourceDirname)\n    .replace(pathSeparatorRegexp, '/');\n\n  // works on both unix & windows\n  const publicPathURL = new URL(path.join(remotePublicPath, assetPath));\n\n  const size = getAssetSize(assets);\n\n  const asset = JSON.stringify({\n    name: resourceFilename,\n    type: resourceExtensionType,\n    httpServerLocation: publicPathURL.href,\n    scales: assets.map((asset) => asset.scale),\n    height: size?.height,\n    width: size?.width,\n  });\n\n  return dedent`\n    var AssetSourceResolver = require('react-native/Libraries/Image/AssetSourceResolver');\n    var resolver = new AssetSourceResolver(undefined, undefined, ${asset});\n\n    module.exports = resolver.scaledAssetPath();\n  `;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,MAAA,GAAAF,OAAA;AAA0C,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEnC,SAASG,qBAAqBA,CAAC;EACpCC,MAAM;EACNC,aAAa;EACbC,gBAAgB;EAChBC,eAAe;EACfC,qBAAqB;EACrBC,gBAAgB;EAChBC;AAWF,CAAC,EAAE;EACD,MAAMC,SAAS,GAAGC,iBAAI,CACnBC,IAAI,CAACR,aAAa,EAAEE,eAAe,CAAC,CACpCO,OAAO,CAACJ,mBAAmB,EAAE,GAAG,CAAC;;EAEpC;EACA,MAAMK,aAAa,GAAG,IAAIC,GAAG,CAACJ,iBAAI,CAACC,IAAI,CAACP,gBAAgB,EAAEK,SAAS,CAAC,CAAC;EAErE,MAAMM,IAAI,GAAG,IAAAC,mBAAY,EAACd,MAAM,CAAC;EAEjC,MAAMe,KAAK,GAAGC,IAAI,CAACC,SAAS,CAAC;IAC3BC,IAAI,EAAEb,gBAAgB;IACtBc,IAAI,EAAEf,qBAAqB;IAC3BgB,kBAAkB,EAAET,aAAa,CAACU,IAAI;IACtCC,MAAM,EAAEtB,MAAM,CAACuB,GAAG,CAAER,KAAK,IAAKA,KAAK,CAACS,KAAK,CAAC;IAC1CC,MAAM,EAAEZ,IAAI,EAAEY,MAAM;IACpBC,KAAK,EAAEb,IAAI,EAAEa;EACf,CAAC,CAAC;EAEF,OAAO,IAAAC,eAAM;AACf;AACA,mEAAmEZ,KAAK;AACxE;AACA;AACA,GAAG;AACH","ignoreList":[]}