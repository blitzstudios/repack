{"version":3,"file":"options.js","names":["_schemaUtils","require","optionsSchema","exports","type","required","properties","all","ignoreUninitializedFields","pretty","getOptions","loaderContext","options","validate","name"],"sources":["../../../src/loaders/flowLoader/options.ts"],"sourcesContent":["import type { LoaderContext } from '@rspack/core';\nimport { validate } from 'schema-utils';\n\nexport interface FlowLoaderOptions {\n  all?: boolean;\n  ignoreUninitializedFields?: boolean;\n  pretty?: true;\n}\n\ntype Schema = Parameters<typeof validate>[0];\n\nexport const optionsSchema: Schema = {\n  type: 'object',\n  required: [],\n  properties: {\n    all: { type: 'boolean' },\n    ignoreUninitializedFields: { type: 'boolean' },\n    pretty: { type: 'boolean' },\n  },\n};\n\nexport function getOptions(\n  loaderContext: LoaderContext<FlowLoaderOptions>\n): FlowLoaderOptions {\n  const options = loaderContext.getOptions(loaderContext) || {};\n\n  validate(optionsSchema, options, { name: 'repackFlowLoader' });\n\n  return options;\n}\n"],"mappings":";;;;;;;AACA,IAAAA,YAAA,GAAAC,OAAA;AAUO,MAAMC,aAAqB,GAAAC,OAAA,CAAAD,aAAA,GAAG;EACnCE,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE;IACVC,GAAG,EAAE;MAAEH,IAAI,EAAE;IAAU,CAAC;IACxBI,yBAAyB,EAAE;MAAEJ,IAAI,EAAE;IAAU,CAAC;IAC9CK,MAAM,EAAE;MAAEL,IAAI,EAAE;IAAU;EAC5B;AACF,CAAC;AAEM,SAASM,UAAUA,CACxBC,aAA+C,EAC5B;EACnB,MAAMC,OAAO,GAAGD,aAAa,CAACD,UAAU,CAACC,aAAa,CAAC,IAAI,CAAC,CAAC;EAE7D,IAAAE,qBAAQ,EAACX,aAAa,EAAEU,OAAO,EAAE;IAAEE,IAAI,EAAE;EAAmB,CAAC,CAAC;EAE9D,OAAOF,OAAO;AAChB","ignoreList":[]}