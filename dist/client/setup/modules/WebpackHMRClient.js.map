{"version":3,"sources":["../../../../src/client/setup/modules/WebpackHMRClient.ts"],"names":["HMRClient","constructor","app","url","hostname","__PUBLIC_PORT__","socket","WebSocket","console","log","onopen","onclose","onerror","event","onmessage","processMessage","JSON","parse","data","toString","error","warn","upToDate","hash","lastHash","__webpack_hash__","message","action","LoadingView","showMessage","name","body","time","errors","length","forEach","hide","warnings","warning","applyUpdate","update","module","hot","Error","status","checkUpdates","updatedModules","check","reload","renewedModules","apply","ignoreDeclined","ignoreUnaccepted","ignoreErrored","onDeclined","chain","unacceptedModules","filter","moduleId","indexOf","dismissErrors","__DEV__","DevSettings","Platform","require","OS","NativeRedBox","default","dismiss","NativeExceptionsManager","dismissRedbox","LogBoxData","clear"],"mappings":"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","sourcesContent":["/* eslint-env browser */\n/* globals __webpack_hash__ __DEV__, __PUBLIC_PORT__ */\n\nimport type { HMRMessage, HMRMessageBody } from '../../../types';\nimport { getDevServerLocation } from '../utils/getDevServerLocation';\n\nclass HMRClient {\n  url: string;\n  socket: WebSocket;\n  lastHash = '';\n\n  constructor(\n    private app: {\n      reload: () => void;\n      dismissErrors: () => void;\n      LoadingView: {\n        showMessage(text: string, type: 'load' | 'refresh'): void;\n        hide(): void;\n      };\n    }\n  ) {\n    this.url = `ws://${\n      getDevServerLocation().hostname\n    }:${__PUBLIC_PORT__}/__hmr`;\n    this.socket = new WebSocket(this.url);\n\n    console.log('[HMRClient] Connecting...', {\n      url: this.url,\n    });\n\n    this.socket.onopen = () => {\n      console.log('[HMRClient] Connected');\n    };\n\n    this.socket.onclose = () => {\n      console.log('[HMRClient] Disconnected');\n    };\n\n    this.socket.onerror = (event) => {\n      console.log('[HMRClient] Error', event);\n    };\n\n    this.socket.onmessage = (event) => {\n      try {\n        this.processMessage(JSON.parse(event.data.toString()));\n      } catch (error) {\n        console.warn('[HMRClient] Invalid HMR message', { event, error });\n      }\n    };\n  }\n\n  upToDate(hash?: string) {\n    if (hash) {\n      this.lastHash = hash;\n    }\n    return this.lastHash === __webpack_hash__;\n  }\n\n  processMessage(message: HMRMessage) {\n    switch (message.action) {\n      case 'building':\n        this.app.LoadingView.showMessage('Rebuilding...', 'refresh');\n        console.log('[HMRClient] Bundle rebuilding', {\n          name: message.body?.name,\n        });\n        break;\n      case 'built':\n        console.log('[HMRClient] Bundle rebuilt', {\n          name: message.body?.name,\n          time: message.body?.time,\n        });\n      // Fall through\n      case 'sync':\n        if (!message.body) {\n          console.warn('[HMRClient] HMR message body is empty');\n          return;\n        }\n\n        if (message.body.errors?.length) {\n          message.body.errors.forEach((error) => {\n            console.error('Cannot apply update due to error:', error);\n          });\n          this.app.LoadingView.hide();\n          return;\n        }\n\n        if (message.body.warnings?.length) {\n          message.body.warnings.forEach((warning) => {\n            console.warn('[HMRClient] Bundle contains warnings:', warning);\n          });\n        }\n\n        this.applyUpdate(message.body);\n    }\n  }\n\n  applyUpdate(update: HMRMessageBody) {\n    if (!module.hot) {\n      throw new Error('[HMRClient] Hot Module Replacement is disabled.');\n    }\n\n    if (!this.upToDate(update.hash) && module.hot.status() === 'idle') {\n      console.log('[HMRClient] Checking for updates on the server...');\n      this.checkUpdates(update);\n    }\n  }\n\n  async checkUpdates(update: HMRMessageBody) {\n    try {\n      this.app.LoadingView.showMessage('Refreshing...', 'refresh');\n      const updatedModules = await module.hot?.check(false);\n      if (!updatedModules) {\n        console.warn('[HMRClient] Cannot find update - full reload needed');\n        this.app.reload();\n        return;\n      }\n\n      const renewedModules = await module.hot?.apply({\n        ignoreDeclined: true,\n        ignoreUnaccepted: false,\n        ignoreErrored: false,\n        onDeclined: (data) => {\n          // This module declined update, no need to do anything\n          console.warn('[HMRClient] Ignored an update due to declined module', {\n            chain: data.chain,\n          });\n        },\n      });\n\n      if (!this.upToDate()) {\n        this.checkUpdates(update);\n      }\n\n      // Double check to make sure all updated modules were accepted (renewed)\n      const unacceptedModules = updatedModules.filter((moduleId) => {\n        return renewedModules && renewedModules.indexOf(moduleId) < 0;\n      });\n\n      if (unacceptedModules.length) {\n        console.warn(\n          '[HMRClient] Not every module was accepted - full reload needed',\n          { unacceptedModules }\n        );\n        this.app.reload();\n      } else {\n        console.log('[HMRClient] Renewed modules - app is up to date', {\n          renewedModules,\n        });\n        this.app.dismissErrors();\n      }\n    } catch (error) {\n      if (module.hot?.status() === 'fail' || module.hot?.status() === 'abort') {\n        console.warn(\n          '[HMRClient] Cannot check for update - full reload needed'\n        );\n        console.warn('[HMRClient]', error);\n        this.app.reload();\n      } else {\n        console.warn('[HMRClient] Update check failed', { error });\n      }\n    } finally {\n      this.app.LoadingView.hide();\n    }\n  }\n}\n\nif (__DEV__ && module.hot) {\n  const { DevSettings, Platform } = require('react-native');\n  const LoadingView = require('react-native/Libraries/Utilities/LoadingView');\n\n  const reload = () => DevSettings.reload();\n  const dismissErrors = () => {\n    if (Platform.OS === 'ios') {\n      const NativeRedBox =\n        require('react-native/Libraries/NativeModules/specs/NativeRedBox').default;\n      NativeRedBox?.dismiss?.();\n    } else {\n      const NativeExceptionsManager =\n        require('react-native/Libraries/Core/NativeExceptionsManager').default;\n      NativeExceptionsManager?.dismissRedbox();\n    }\n\n    const LogBoxData = require('react-native/Libraries/LogBox/Data/LogBoxData');\n    LogBoxData.clear();\n  };\n\n  new HMRClient({ reload, dismissErrors, LoadingView });\n}\n"],"file":"WebpackHMRClient.js"}