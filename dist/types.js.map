{"version":3,"file":"types.js","names":[],"sources":["../src/types.ts"],"sourcesContent":["export type Rule = string | RegExp;\n\n/**\n * Development server configuration options.\n */\nexport interface DevServerOptions {\n  /**\n   * Hostname or IP address under which to run the development server.\n   *\n   * See: {@link DEFAULT_HOSTNAME}.\n   */\n  host?: string;\n\n  /**\n   * Port under which to run the development server.\n   *\n   * See: {@link DEFAULT_PORT}.\n   */\n  port?: number;\n\n  /**\n   * HTTPS options.\n   * If specified, the server will use HTTPS, otherwise HTTP.\n   */\n  https?: {\n    /** Path to certificate when running server on HTTPS. */\n    cert?: string;\n\n    /** Path to certificate key when running server on HTTPS. */\n    key?: string;\n  };\n\n  /** Whether to enable Hot Module Replacement. */\n  hmr?: boolean;\n}\n\n/**\n * Represents all relevant options that are passed to Webpack config function,\n * needed to create a valid Webpack configuration and configure all plugins.\n *\n * This is the return type of {@link parseCliOptions}.\n */\nexport interface EnvOptions {\n  /** Compilation mode. */\n  mode?: 'production' | 'development';\n\n  /** Target application platform. */\n  platform?: string;\n\n  /** Context in which all resolution happens. Usually it's project root directory. */\n  context?: string;\n\n  /** Input filename - entry point of the bundle. */\n  entry?: string;\n\n  /** Bundle output filename - name under which generated bundle will be saved. */\n  bundleFilename?: string;\n\n  /**\n   * Source map filename - name under which generated source map (for the main bundle) will be saved.\n   */\n  sourceMapFilename?: string;\n\n  /** Assets output path - directory where generated static assets will be saved. */\n  assetsPath?: string;\n\n  /** Whether to minimize the final bundle. */\n  minimize?: boolean;\n\n  /** Path to React Native dependency. Usually points to `node_modules/react-native`. */\n  reactNativePath?: string;\n\n  /**\n   * Development server configuration options.\n   * Used to configure `@callstack/repack-dev-server`.\n   *\n   * If `undefined`, then development server should not be run.\n   */\n  devServer?: DevServerOptions;\n}\n\nexport interface HMRMessage {\n  action: 'compiling' | 'hash' | 'ok';\n  body: { name: string; hash?: string };\n}\n\nexport interface Logger {\n  debug: (...message: string[]) => void;\n  info: (...message: string[]) => void;\n  warn: (...message: string[]) => void;\n  error: (...message: string[]) => void;\n}\n"],"mappings":"","ignoreList":[]}