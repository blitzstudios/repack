{"version":3,"file":"getEnvOptions.js","names":["_nodePath","_interopRequireDefault","require","_consts","e","__esModule","default","getEnvOptions","opts","env","context","rootDir","reactNativePath","command","bundleArgs","args","mode","dev","platform","minimize","minify","entryFile","entry","path","isAbsolute","startsWith","bundleFilename","bundleOutput","sourceMapFilename","sourcemapOutput","assetsPath","assetsDest","startArgs","devServer","port","DEFAULT_PORT","host","DEFAULT_HOSTNAME","https","cert","key","undefined","hmr"],"sources":["../../../../src/commands/common/config/getEnvOptions.ts"],"sourcesContent":["import path from 'node:path';\nimport type { EnvOptions } from '../../../types.js';\nimport { DEFAULT_HOSTNAME, DEFAULT_PORT } from '../../consts.js';\nimport type { BundleArguments, StartArguments } from '../../types.js';\n\ninterface GetEnvOptionsOptions {\n  args: StartArguments | BundleArguments;\n  command: 'start' | 'bundle';\n  rootDir: string;\n  reactNativePath: string;\n}\n\nexport function getEnvOptions(opts: GetEnvOptionsOptions): EnvOptions {\n  const env: EnvOptions = {\n    context: opts.rootDir,\n    reactNativePath: opts.reactNativePath,\n  };\n\n  if (opts.command === 'bundle') {\n    const bundleArgs = opts.args as BundleArguments;\n    env.mode = bundleArgs.dev ? 'development' : 'production';\n    env.platform = bundleArgs.platform;\n    env.minimize = bundleArgs.minify ?? env.mode === 'production';\n\n    const { entryFile } = bundleArgs;\n    if (entryFile) {\n      env.entry =\n        path.isAbsolute(entryFile) || entryFile.startsWith('./')\n          ? entryFile\n          : `./${entryFile}`;\n    }\n\n    env.bundleFilename = bundleArgs.bundleOutput;\n    env.sourceMapFilename = bundleArgs.sourcemapOutput;\n    env.assetsPath = bundleArgs.assetsDest;\n  } else {\n    const startArgs = opts.args as StartArguments;\n    env.mode = 'development';\n    env.devServer = {\n      port: startArgs.port ?? DEFAULT_PORT,\n      host: startArgs.host || DEFAULT_HOSTNAME,\n      https: startArgs.https\n        ? {\n            cert: startArgs.cert,\n            key: startArgs.key,\n          }\n        : undefined,\n      hmr: true,\n    };\n  }\n\n  return env;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AAAiE,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAU1D,SAASG,aAAaA,CAACC,IAA0B,EAAc;EACpE,MAAMC,GAAe,GAAG;IACtBC,OAAO,EAAEF,IAAI,CAACG,OAAO;IACrBC,eAAe,EAAEJ,IAAI,CAACI;EACxB,CAAC;EAED,IAAIJ,IAAI,CAACK,OAAO,KAAK,QAAQ,EAAE;IAC7B,MAAMC,UAAU,GAAGN,IAAI,CAACO,IAAuB;IAC/CN,GAAG,CAACO,IAAI,GAAGF,UAAU,CAACG,GAAG,GAAG,aAAa,GAAG,YAAY;IACxDR,GAAG,CAACS,QAAQ,GAAGJ,UAAU,CAACI,QAAQ;IAClCT,GAAG,CAACU,QAAQ,GAAGL,UAAU,CAACM,MAAM,IAAIX,GAAG,CAACO,IAAI,KAAK,YAAY;IAE7D,MAAM;MAAEK;IAAU,CAAC,GAAGP,UAAU;IAChC,IAAIO,SAAS,EAAE;MACbZ,GAAG,CAACa,KAAK,GACPC,iBAAI,CAACC,UAAU,CAACH,SAAS,CAAC,IAAIA,SAAS,CAACI,UAAU,CAAC,IAAI,CAAC,GACpDJ,SAAS,GACT,KAAKA,SAAS,EAAE;IACxB;IAEAZ,GAAG,CAACiB,cAAc,GAAGZ,UAAU,CAACa,YAAY;IAC5ClB,GAAG,CAACmB,iBAAiB,GAAGd,UAAU,CAACe,eAAe;IAClDpB,GAAG,CAACqB,UAAU,GAAGhB,UAAU,CAACiB,UAAU;EACxC,CAAC,MAAM;IACL,MAAMC,SAAS,GAAGxB,IAAI,CAACO,IAAsB;IAC7CN,GAAG,CAACO,IAAI,GAAG,aAAa;IACxBP,GAAG,CAACwB,SAAS,GAAG;MACdC,IAAI,EAAEF,SAAS,CAACE,IAAI,IAAIC,oBAAY;MACpCC,IAAI,EAAEJ,SAAS,CAACI,IAAI,IAAIC,wBAAgB;MACxCC,KAAK,EAAEN,SAAS,CAACM,KAAK,GAClB;QACEC,IAAI,EAAEP,SAAS,CAACO,IAAI;QACpBC,GAAG,EAAER,SAAS,CAACQ;MACjB,CAAC,GACDC,SAAS;MACbC,GAAG,EAAE;IACP,CAAC;EACH;EAEA,OAAOjC,GAAG;AACZ","ignoreList":[]}