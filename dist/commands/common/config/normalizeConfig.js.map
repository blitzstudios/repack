{"version":3,"file":"normalizeConfig.js","names":["_webpackMerge","require","normalizeDevServerHost","host","normalizeOutputPath","outputPath","context","platform","replaceAll","normalizePublicPath","publicPath","port","normalizeResolveExtensions","extensions","map","ext","normalizeConfig","config","normalizedConfig","name","devServer","output","path","process","cwd","resolve","mergeWithCustomize","customizeArray"],"sources":["../../../../src/commands/common/config/normalizeConfig.ts"],"sourcesContent":["import { customizeArray, mergeWithCustomize } from 'webpack-merge';\nimport type { ConfigurationObject } from '../../types.js';\n\nfunction normalizeDevServerHost(host?: string): string | undefined {\n  switch (host) {\n    case 'local-ip':\n      return 'localhost';\n    case 'local-ipv4':\n      return '127.0.0.1';\n    case 'local-ipv6':\n      return '::1';\n    default:\n      return host;\n  }\n}\n\nfunction normalizeOutputPath(\n  outputPath: string,\n  context: string,\n  platform: string\n): string {\n  return outputPath\n    .replaceAll('[context]', context)\n    .replaceAll('[platform]', platform);\n}\n\nfunction normalizePublicPath(\n  publicPath: string,\n  platform: string,\n  host?: string,\n  port?: number\n): string {\n  /* set public path to noop if it's using the deprecated `getPublicPath` function */\n  if (publicPath === 'DEPRECATED_GET_PUBLIC_PATH') {\n    return 'noop:///';\n  }\n\n  if (publicPath === 'DEV_SERVER_PUBLIC_PATH') {\n    return `http://${host}:${port}/${platform}/`;\n  }\n\n  return publicPath.replaceAll('[platform]', platform);\n}\n\nfunction normalizeResolveExtensions(\n  extensions: string[],\n  platform: string\n): string[] {\n  return extensions.map((ext) => ext.replaceAll('[platform]', platform));\n}\n\nexport function normalizeConfig<C extends ConfigurationObject>(\n  config: C,\n  platform: string\n): C {\n  const normalizedConfig = {} as C;\n\n  /* normalize compiler name to be equal to platform */\n  normalizedConfig.name = platform;\n\n  /* normalize dev server host by resolving special values */\n  if (config.devServer) {\n    normalizedConfig.devServer = {\n      ...normalizedConfig.devServer,\n      host: normalizeDevServerHost(config.devServer.host),\n    };\n  }\n\n  /* normalize output path by resolving [platform] & [context] placeholders */\n  if (config.output?.path) {\n    normalizedConfig.output = {\n      ...normalizedConfig.output,\n      path: normalizeOutputPath(\n        config.output.path,\n        config.context ?? process.cwd(),\n        platform\n      ),\n    };\n  }\n\n  /* normalize public path by resolving [platform] placeholder */\n  if (config.output?.publicPath) {\n    normalizedConfig.output = {\n      ...normalizedConfig.output,\n      publicPath: normalizePublicPath(\n        config.output.publicPath,\n        platform,\n        normalizedConfig.devServer?.host ?? config.devServer?.host,\n        normalizedConfig.devServer?.port ?? config.devServer?.port\n      ),\n    };\n  }\n\n  /* normalize resolve extensions by resolving [platform] placeholder */\n  if (config.resolve?.extensions) {\n    normalizedConfig.resolve = {\n      ...normalizedConfig.resolve,\n      extensions: normalizeResolveExtensions(\n        config.resolve.extensions,\n        platform\n      ),\n    };\n  }\n\n  /* return the normalized config object */\n  return mergeWithCustomize({\n    customizeArray: customizeArray({\n      'resolve.extensions': 'replace',\n    }),\n  })(config, normalizedConfig) as C;\n}\n"],"mappings":"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","ignoreList":[]}