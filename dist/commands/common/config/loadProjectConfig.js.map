{"version":3,"file":"loadProjectConfig.js","names":["_nodeFs","_interopRequireDefault","require","_nodePath","_nodeUrl","e","__esModule","default","readPackageUp","cwd","currentDir","path","resolve","packageJsonPath","join","fs","existsSync","parentDir","dirname","packageJson","readFileSync","JSON","parse","isEsmFile","filePath","endsWith","type","loadProjectConfig","configFilePath","config","href","fileUrl","url","pathToFileURL"],"sources":["../../../../src/commands/common/config/loadProjectConfig.ts"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\nimport url from 'node:url';\nimport type { Configuration, ConfigurationObject } from '../../types.js';\n\n// logic based on crossImport from `rspack-cli`\n// reference: https://github.com/web-infra-dev/rspack/blob/b16a723d974231eb5a39fcbfd3258b283be8b3c9/packages/rspack-cli/src/utils/crossImport.ts\n\nconst readPackageUp = (cwd: string) => {\n  let currentDir = path.resolve(cwd);\n  let packageJsonPath = path.join(currentDir, 'package.json');\n\n  while (!fs.existsSync(packageJsonPath)) {\n    const parentDir = path.dirname(currentDir);\n    if (parentDir === currentDir) return null;\n    currentDir = parentDir;\n    packageJsonPath = path.join(currentDir, 'package.json');\n  }\n\n  try {\n    const packageJson = fs.readFileSync(packageJsonPath, 'utf8');\n    return JSON.parse(packageJson) as { type?: 'module' };\n  } catch {\n    return null;\n  }\n};\n\nconst isEsmFile = (filePath: string) => {\n  if (filePath.endsWith('.mjs')) return true;\n  if (filePath.endsWith('.cjs')) return false;\n  const packageJson = readPackageUp(path.dirname(filePath));\n  return packageJson?.type === 'module';\n};\n\nexport async function loadProjectConfig<C extends ConfigurationObject>(\n  configFilePath: string\n): Promise<Configuration<C>> {\n  let config: Configuration<C>;\n\n  if (isEsmFile(configFilePath)) {\n    const { href: fileUrl } = url.pathToFileURL(configFilePath);\n    config = await import(fileUrl);\n  } else {\n    config = require(configFilePath);\n  }\n\n  if ('default' in config) {\n    config = config.default as Configuration<C>;\n  }\n\n  return config;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,QAAA,GAAAH,sBAAA,CAAAC,OAAA;AAA2B,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAG3B;AACA;;AAEA,MAAMG,aAAa,GAAIC,GAAW,IAAK;EACrC,IAAIC,UAAU,GAAGC,iBAAI,CAACC,OAAO,CAACH,GAAG,CAAC;EAClC,IAAII,eAAe,GAAGF,iBAAI,CAACG,IAAI,CAACJ,UAAU,EAAE,cAAc,CAAC;EAE3D,OAAO,CAACK,eAAE,CAACC,UAAU,CAACH,eAAe,CAAC,EAAE;IACtC,MAAMI,SAAS,GAAGN,iBAAI,CAACO,OAAO,CAACR,UAAU,CAAC;IAC1C,IAAIO,SAAS,KAAKP,UAAU,EAAE,OAAO,IAAI;IACzCA,UAAU,GAAGO,SAAS;IACtBJ,eAAe,GAAGF,iBAAI,CAACG,IAAI,CAACJ,UAAU,EAAE,cAAc,CAAC;EACzD;EAEA,IAAI;IACF,MAAMS,WAAW,GAAGJ,eAAE,CAACK,YAAY,CAACP,eAAe,EAAE,MAAM,CAAC;IAC5D,OAAOQ,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC;EAChC,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAMI,SAAS,GAAIC,QAAgB,IAAK;EACtC,IAAIA,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,IAAI;EAC1C,IAAID,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE,OAAO,KAAK;EAC3C,MAAMN,WAAW,GAAGX,aAAa,CAACG,iBAAI,CAACO,OAAO,CAACM,QAAQ,CAAC,CAAC;EACzD,OAAOL,WAAW,EAAEO,IAAI,KAAK,QAAQ;AACvC,CAAC;AAEM,eAAeC,iBAAiBA,CACrCC,cAAsB,EACK;EAC3B,IAAIC,MAAwB;EAE5B,IAAIN,SAAS,CAACK,cAAc,CAAC,EAAE;IAC7B,MAAM;MAAEE,IAAI,EAAEC;IAAQ,CAAC,GAAGC,gBAAG,CAACC,aAAa,CAACL,cAAc,CAAC;IAC3DC,MAAM,GAAG,MAAM,MAAM,CAACE,OAAO,CAAC;EAChC,CAAC,MAAM;IACLF,MAAM,GAAG3B,OAAO,CAAC0B,cAAc,CAAC;EAClC;EAEA,IAAI,SAAS,IAAIC,MAAM,EAAE;IACvBA,MAAM,GAAGA,MAAM,CAACtB,OAA2B;EAC7C;EAEA,OAAOsB,MAAM;AACf","ignoreList":[]}