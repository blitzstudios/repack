{"version":3,"file":"loadConfig.js","names":["loadConfig","configFilePath","env","config","require","default"],"sources":["../../../src/commands/common/loadConfig.ts"],"sourcesContent":["import type { EnvOptions } from '../../types';\n\ntype Configuration<T> =\n  | T\n  | ((env: EnvOptions, argv: Record<string, any>) => T | Promise<T>);\n\nexport async function loadConfig<C extends Record<string, any>>(\n  configFilePath: string,\n  env: EnvOptions\n): Promise<C> {\n  let config: Configuration<C>;\n\n  try {\n    config = require(configFilePath);\n  } catch {\n    config = await import(configFilePath);\n  }\n\n  if ('default' in config) {\n    config = config.default as Configuration<C>;\n  }\n\n  if (typeof config === 'function') {\n    return await config(env, {});\n  }\n\n  return config;\n}\n"],"mappings":";;;;;;AAMO,eAAeA,UAAUA,CAC9BC,cAAsB,EACtBC,GAAe,EACH;EACZ,IAAIC,MAAwB;EAE5B,IAAI;IACFA,MAAM,GAAGC,OAAO,CAACH,cAAc,CAAC;EAClC,CAAC,CAAC,MAAM;IACNE,MAAM,GAAG,MAAM,MAAM,CAACF,cAAc,CAAC;EACvC;EAEA,IAAI,SAAS,IAAIE,MAAM,EAAE;IACvBA,MAAM,GAAGA,MAAM,CAACE,OAA2B;EAC7C;EAEA,IAAI,OAAOF,MAAM,KAAK,UAAU,EAAE;IAChC,OAAO,MAAMA,MAAM,CAACD,GAAG,EAAE,CAAC,CAAC,CAAC;EAC9B;EAEA,OAAOC,MAAM;AACf","ignoreList":[]}