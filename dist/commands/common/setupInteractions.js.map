{"version":3,"file":"setupInteractions.js","names":["_nodeReadline","_interopRequireDefault","require","colorette","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","setupInteractions","handlers","options","logger","console","process","global","readline","nodeReadline","stdin","setRawMode","warn","emitKeypressEvents","on","_key","data","ctrl","name","exit","emit","interaction","plainInteractions","action","postPerformMessage","helpName","actionUnsupportedExplanation","undefined","info","onReload","d","onOpenDevMenu","j","onOpenDevTools","onAdbReverse","key","entries","isSupported","text","bold","yellow","stdout","write","italic"],"sources":["../../../src/commands/common/setupInteractions.ts"],"sourcesContent":["import nodeReadline from 'node:readline';\nimport * as colorette from 'colorette';\nimport type { Logger } from '../../types.js';\n\ntype Interaction = {\n  // The function to be executed when this interaction's keystroke is sent.\n  action?: () => void;\n\n  // The message to be displayed when the action is performed.\n  postPerformMessage: string;\n\n  // The name of this interaction.\n  helpName: string;\n\n  // The explanation why this action is not supported at runtime; will be displayed in help listing of interactions if provided.\n  actionUnsupportedExplanation?: string;\n};\n\nexport function setupInteractions(\n  handlers: {\n    onReload?: () => void;\n    onOpenDevMenu?: () => void;\n    onOpenDevTools?: () => void;\n    onAdbReverse?: () => void;\n  },\n  options?: {\n    logger?: Logger;\n    process?: NodeJS.Process;\n    readline?: typeof nodeReadline;\n  }\n) {\n  const logger = options?.logger ?? console;\n  const process = options?.process ?? global.process;\n  const readline = options?.readline ?? nodeReadline;\n\n  if (!process.stdin.setRawMode) {\n    logger.warn('Interactive mode is not supported in this environment');\n    return;\n  }\n\n  readline.emitKeypressEvents(process.stdin);\n  process.stdin.setRawMode(true);\n\n  process.stdin.on('keypress', (_key, data) => {\n    const { ctrl, name } = data;\n    if (ctrl === true) {\n      switch (name) {\n        case 'c':\n          process.exit();\n          break;\n\n        case 'z':\n          process.emit('SIGTSTP', 'SIGTSTP');\n          break;\n      }\n    } else {\n      const interaction = plainInteractions[name];\n\n      if (interaction) {\n        const {\n          action,\n          postPerformMessage,\n          helpName,\n          actionUnsupportedExplanation,\n        } = interaction;\n\n        if (action && actionUnsupportedExplanation === undefined) {\n          logger.info(postPerformMessage);\n\n          action();\n        } else {\n          logger.warn(\n            `${helpName} is not supported ${actionUnsupportedExplanation ?? 'by the used bundler'}`\n          );\n        }\n      }\n    }\n  });\n\n  const plainInteractions: Record<string, Interaction | undefined> = {\n    r: {\n      action: handlers.onReload,\n      postPerformMessage: 'Reloading app',\n      helpName: 'Reload app',\n    },\n    d: {\n      action: handlers.onOpenDevMenu,\n      postPerformMessage: 'Opening developer menu',\n      helpName: 'Open developer menu',\n    },\n    j: {\n      action: handlers.onOpenDevTools,\n      postPerformMessage: 'Opening debugger',\n      helpName: 'Open debugger',\n    },\n    a: {\n      action: handlers.onAdbReverse,\n      postPerformMessage: 'Running adb reverse',\n      helpName: 'Run adb reverse',\n    },\n  };\n\n  // use process.stdout for sync output at startup\n  for (const [key, interaction] of Object.entries(plainInteractions)) {\n    const isSupported =\n      interaction?.actionUnsupportedExplanation === undefined &&\n      interaction?.action !== undefined;\n    const text = ` ${colorette.bold(key)}: ${interaction?.helpName}${isSupported ? '' : colorette.yellow(` (unsupported${interaction?.actionUnsupportedExplanation ? `, ${interaction.actionUnsupportedExplanation}` : ' by the current bundler'})`)}\\n`;\n\n    process.stdout.write(isSupported ? text : colorette.italic(text));\n  }\n  process.stdout.write('\\nPress Ctrl+c or Ctrl+z to quit the dev server\\n\\n');\n}\n"],"mappings":"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","ignoreList":[]}