{"version":3,"file":"start.js","names":["_path","_interopRequireDefault","require","colorette","_interopRequireWildcard","_package","_logging","_common","_consts","_Compiler","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","start","_","config","args","webpackConfigPath","getWebpackConfigFilePath","root","webpackConfig","reversePort","reversePortArg","sendEvents","sendEventsArg","restArgs","cliOptions","platforms","keys","bundlerConfigPath","reactNativePath","command","arguments","platform","includes","Error","process","argv","isSilent","silent","isVerbose","verbose","showHttpRequests","logRequests","reporter","composeReporters","ConsoleReporter","asJson","json","level","logFile","FileReporter","filename","undefined","filter","Boolean","version","packageJson","stdout","write","bold","cyan","compiler","Compiler","serverHost","host","DEFAULT_HOSTNAME","serverPort","port","DEFAULT_PORT","serverURL","https","createServer","stop","options","rootDir","cert","key","experiments","experimentalDebugger","delegate","ctx","interactive","setupInteractions","onReload","broadcastToMessageClients","method","onOpenDevMenu","onOpenDevTools","fetch","log","runAdbReverse","lastStats","on","console","notifyBuildStart","broadcastToHmrClients","action","stats","notifyBuildEnd","body","createHmrBody","getAsset","sendProgress","parsedUrl","parseFileUrl","getSource","getMimeType","inferPlatform","uri","symbolicator","fileUrl","getSourceMap","shouldIncludeFrame","frame","test","file","hmr","getUriPath","onClientConnected","clientId","messages","getHello","getStatus","logger","onMessage","logEntry","makeLogEntryFromFastifyLog","issuer","api","getPlatforms","Promise","resolve","workers","getAssets","entries","assetsCache","map","name","asset","size","getCompilationStats","statsCache","sendEventsStop","sendEventsPath","path","join","time","hash","warnings","errors"],"sources":["../../../src/commands/webpack/start.ts"],"sourcesContent":["import path from 'path';\nimport type { Server } from '@callstack/repack-dev-server';\nimport type { Config } from '@react-native-community/cli-types';\nimport * as colorette from 'colorette';\nimport type webpack from 'webpack';\nimport packageJson from '../../../package.json';\nimport {\n  ConsoleReporter,\n  FileReporter,\n  type Reporter,\n  composeReporters,\n  makeLogEntryFromFastifyLog,\n} from '../../logging';\nimport {\n  getMimeType,\n  getWebpackConfigFilePath,\n  parseFileUrl,\n  runAdbReverse,\n  setupInteractions,\n} from '../common';\nimport { DEFAULT_HOSTNAME, DEFAULT_PORT } from '../consts';\nimport type { StartArguments, StartCliOptions } from '../types';\nimport { Compiler } from './Compiler';\nimport type { HMRMessageBody } from './types';\n\n/**\n * Start command for React Native Community CLI.\n * It runs `@callstack/repack-dev-server` to provide Development Server functionality to React Native apps\n * in development mode.\n *\n * @param _ Original, non-parsed arguments that were provided when running this command.\n * @param config React Native Community CLI configuration object.\n * @param args Parsed command line arguments.\n *\n * @internal\n * @category CLI command\n */\nexport async function start(_: string[], config: Config, args: StartArguments) {\n  const webpackConfigPath = getWebpackConfigFilePath(\n    config.root,\n    args.webpackConfig\n  );\n  const { reversePort: reversePortArg, sendEvents: sendEventsArg, ...restArgs } = args;\n  const cliOptions: StartCliOptions = {\n    config: {\n      root: config.root,\n      platforms: Object.keys(config.platforms),\n      bundlerConfigPath: webpackConfigPath,\n      reactNativePath: config.reactNativePath,\n    },\n    command: 'start',\n    arguments: { start: { ...restArgs } },\n  };\n\n  if (args.platform && !cliOptions.config.platforms.includes(args.platform)) {\n    throw new Error('Unrecognized platform: ' + args.platform);\n  }\n\n  const reversePort = reversePortArg ?? process.argv.includes('--reverse-port');\n  const isSilent = args.silent;\n  const isVerbose = isSilent\n    ? false\n    : // TODO fix in a separate PR (jbroma)\n      // biome-ignore format: fix in a separate PR\n      args.verbose ?? process.argv.includes('--verbose');\n\n  const showHttpRequests = isVerbose || args.logRequests;\n  const reporter = composeReporters(\n    [\n      new ConsoleReporter({\n        asJson: args.json,\n        level: isSilent ? 'silent' : isVerbose ? 'verbose' : 'normal',\n      }),\n      args.logFile ? new FileReporter({ filename: args.logFile }) : undefined,\n    ].filter(Boolean) as Reporter[]\n  );\n\n  if (!isSilent) {\n    const version = packageJson.version;\n    process.stdout.write(\n      colorette.bold(colorette.cyan('ðŸ“¦ Re.Pack ' + version + '\\n\\n'))\n    );\n  }\n\n  const compiler = new Compiler(cliOptions, reporter, isVerbose);\n\n  const serverHost = args.host || DEFAULT_HOSTNAME;\n  const serverPort = args.port ?? DEFAULT_PORT;\n  const serverURL = `${args.https === true ? 'https' : 'http'}://${serverHost}:${serverPort}`;\n\n  const { createServer } = await import('@callstack/repack-dev-server');\n  const { start, stop } = await createServer({\n    options: {\n      rootDir: cliOptions.config.root,\n      host: serverHost,\n      port: serverPort,\n      https: args.https\n        ? {\n            cert: args.cert,\n            key: args.key,\n          }\n        : undefined,\n      logRequests: showHttpRequests,\n    },\n    experiments: {\n      experimentalDebugger: args.experimentalDebugger,\n    },\n    delegate: (ctx): Server.Delegate => {\n      if (args.interactive) {\n        setupInteractions(\n          {\n            onReload() {\n              ctx.broadcastToMessageClients({ method: 'reload' });\n            },\n            onOpenDevMenu() {\n              ctx.broadcastToMessageClients({ method: 'devMenu' });\n            },\n            onOpenDevTools() {\n              void fetch(`${serverURL}/open-debugger`, {\n                method: 'POST',\n              });\n            },\n          },\n          ctx.log\n        );\n      }\n\n      if (reversePort && args.port) {\n        void runAdbReverse(args.port, ctx.log);\n      }\n\n      const lastStats: Record<string, webpack.StatsCompilation> = {};\n\n      compiler.on('watchRun', ({ platform }) => {\n        console.log('[CompilerPlugin] hook: watchRun');\n        ctx.notifyBuildStart(platform);\n        if (platform === 'android') {\n          void runAdbReverse(args.port ?? DEFAULT_PORT, ctx.log);\n        }\n      });\n\n      compiler.on('invalid', ({ platform }) => {\n        console.log('[CompilerPlugin] hook: invalid');\n        ctx.notifyBuildStart(platform);\n        ctx.broadcastToHmrClients({ action: 'building' }, platform);\n      });\n\n      compiler.on(\n        'done',\n        ({\n          platform,\n          stats,\n        }: {\n          platform: string;\n          stats: webpack.StatsCompilation;\n        }) => {\n          console.log('[CompilerPlugin] hook: done');\n          ctx.notifyBuildEnd(platform);\n          lastStats[platform] = stats;\n          ctx.broadcastToHmrClients(\n            { action: 'built', body: createHmrBody(stats) },\n            platform\n          );\n        }\n      );\n\n      return {\n        compiler: {\n          getAsset: (filename, platform, sendProgress) => {\n            const parsedUrl = parseFileUrl(filename, 'file:///');\n            return compiler.getSource(\n              parsedUrl.filename,\n              platform,\n              sendProgress\n            );\n          },\n          getMimeType: (filename) => getMimeType(filename),\n          inferPlatform: (uri) => {\n            const { platform } = parseFileUrl(uri, 'file:///');\n            return platform;\n          },\n        },\n        symbolicator: {\n          getSource: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSource(filename, platform);\n          },\n          getSourceMap: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSourceMap(filename, platform);\n          },\n          shouldIncludeFrame: (frame) => {\n            // If the frame points to internal bootstrap/module system logic, skip the code frame.\n            return !/webpack[/\\\\]runtime[/\\\\].+\\s/.test(frame.file);\n          },\n        },\n        hmr: {\n          getUriPath: () => '/__hmr',\n          onClientConnected: (platform, clientId) => {\n            ctx.broadcastToHmrClients(\n              { action: 'sync', body: createHmrBody(lastStats[platform]) },\n              platform,\n              [clientId]\n            );\n          },\n        },\n        messages: {\n          getHello: () => 'React Native packager is running',\n          getStatus: () => 'packager-status:running',\n        },\n        logger: {\n          onMessage: (log) => {\n            const logEntry = makeLogEntryFromFastifyLog(log);\n            logEntry.issuer = 'DevServer';\n            reporter.process(logEntry);\n          },\n        },\n        api: {\n          getPlatforms: () => Promise.resolve(Object.keys(compiler.workers)),\n          getAssets: (platform) =>\n            Promise.resolve(\n              Object.entries(compiler.assetsCache[platform] ?? {}).map(\n                ([name, asset]) => ({ name, size: asset.size })\n              )\n            ),\n          getCompilationStats: (platform) =>\n            Promise.resolve(compiler.statsCache[platform] ?? null),\n        },\n      };\n    },\n  });\n\n  await start();\n\n  let sendEventsStop = () => {};\n  if (sendEventsArg) {\n    const sendEventsPath = path.join(config.root, sendEventsArg);\n    const { default: sendEvents } = await import(sendEventsPath);\n    sendEventsStop = await sendEvents(config.root);\n  }\n\n  return {\n    stop: async () => {\n      reporter.stop();\n      sendEventsStop();\n      await stop();\n    },\n  };\n}\n\nfunction createHmrBody(\n  stats?: webpack.StatsCompilation\n): HMRMessageBody | null {\n  if (!stats) {\n    return null;\n  }\n\n  return {\n    name: stats.name ?? '',\n    time: stats.time ?? 0,\n    hash: stats.hash ?? '',\n    warnings: stats.warnings || [],\n    errors: stats.errors || [],\n  };\n}\n"],"mappings":"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","ignoreList":[]}