{"version":3,"file":"start.js","names":["_path","_interopRequireDefault","require","colorette","_interopRequireWildcard","_package","_env","_logging","_common","_consts","_Compiler","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","start","_","config","args","webpackConfigPath","getWebpackConfigFilePath","root","webpackConfig","reversePort","sendEvents","sendEventsArg","restArgs","cliOptions","platforms","keys","bundlerConfigPath","reactNativePath","command","arguments","platform","includes","Error","verbose","process","env","VERBOSE_ENV_KEY","reporter","composeReporters","ConsoleReporter","asJson","json","isVerbose","logFile","FileReporter","filename","undefined","filter","Boolean","version","packageJson","stdout","write","bold","cyan","compiler","Compiler","serverHost","host","DEFAULT_HOSTNAME","serverPort","port","DEFAULT_PORT","serverURL","https","showHttpRequests","logRequests","createServer","stop","options","rootDir","cert","key","delegate","ctx","interactive","setupInteractions","onReload","broadcastToMessageClients","method","onOpenDevMenu","onOpenDevTools","fetch","logger","log","runAdbReverse","lastStats","on","console","notifyBuildStart","broadcastToHmrClients","action","stats","notifyBuildEnd","body","createHmrBody","getAsset","sendProgress","parsedUrl","parseFileUrl","getSource","getMimeType","inferPlatform","uri","symbolicator","fileUrl","getSourceMap","shouldIncludeFrame","frame","test","file","hmr","getUriPath","onClientConnected","clientId","messages","getHello","getStatus","onMessage","logEntry","makeLogEntryFromFastifyLog","issuer","api","getPlatforms","Promise","resolve","workers","getAssets","entries","assetsCache","map","name","asset","size","getCompilationStats","statsCache","sendEventsStop","sendEventsPath","path","join","time","hash","warnings","errors"],"sources":["../../../src/commands/webpack/start.ts"],"sourcesContent":["import path from 'path';\nimport type { Server } from '@callstack/repack-dev-server';\nimport type { Config } from '@react-native-community/cli-types';\nimport * as colorette from 'colorette';\nimport type webpack from 'webpack';\nimport packageJson from '../../../package.json';\nimport { VERBOSE_ENV_KEY } from '../../env';\nimport {\n  ConsoleReporter,\n  FileReporter,\n  type Reporter,\n  composeReporters,\n  makeLogEntryFromFastifyLog,\n} from '../../logging';\nimport {\n  getMimeType,\n  getWebpackConfigFilePath,\n  parseFileUrl,\n  runAdbReverse,\n  setupInteractions,\n} from '../common';\nimport { DEFAULT_HOSTNAME, DEFAULT_PORT } from '../consts';\nimport type { StartArguments, StartCliOptions } from '../types';\nimport { Compiler } from './Compiler';\nimport type { HMRMessageBody } from './types';\n\n/**\n * Start command for React Native Community CLI.\n * It runs `@callstack/repack-dev-server` to provide Development Server functionality to React Native apps\n * in development mode.\n *\n * @param _ Original, non-parsed arguments that were provided when running this command.\n * @param config React Native Community CLI configuration object.\n * @param args Parsed command line arguments.\n *\n * @internal\n * @category CLI command\n */\nexport async function start(_: string[], config: Config, args: StartArguments) {\n  const webpackConfigPath = getWebpackConfigFilePath(\n    config.root,\n    args.config ?? args.webpackConfig\n  );\n  const { reversePort, sendEvents: sendEventsArg, ...restArgs } = args;\n  const cliOptions: StartCliOptions = {\n    config: {\n      root: config.root,\n      platforms: Object.keys(config.platforms),\n      bundlerConfigPath: webpackConfigPath,\n      reactNativePath: config.reactNativePath,\n    },\n    command: 'start',\n    arguments: { start: { ...restArgs } },\n  };\n\n  if (args.platform && !cliOptions.config.platforms.includes(args.platform)) {\n    throw new Error('Unrecognized platform: ' + args.platform);\n  }\n\n  if (args.verbose) {\n    process.env[VERBOSE_ENV_KEY] = '1';\n  }\n\n  const reporter = composeReporters(\n    [\n      new ConsoleReporter({ asJson: args.json, isVerbose: args.verbose }),\n      args.logFile ? new FileReporter({ filename: args.logFile }) : undefined,\n    ].filter(Boolean) as Reporter[]\n  );\n\n  const version = packageJson.version;\n  process.stdout.write(\n    colorette.bold(colorette.cyan('ðŸ“¦ Re.Pack ' + version + '\\n\\n'))\n  );\n\n  const compiler = new Compiler(cliOptions, reporter);\n\n  const serverHost = args.host || DEFAULT_HOSTNAME;\n  const serverPort = args.port ?? DEFAULT_PORT;\n  const serverURL = `${args.https === true ? 'https' : 'http'}://${serverHost}:${serverPort}`;\n  const showHttpRequests = args.verbose || args.logRequests;\n\n  const { createServer } = await import('@callstack/repack-dev-server');\n  const { start, stop } = await createServer({\n    options: {\n      rootDir: cliOptions.config.root,\n      host: serverHost,\n      port: serverPort,\n      https: args.https\n        ? {\n            cert: args.cert,\n            key: args.key,\n          }\n        : undefined,\n      logRequests: showHttpRequests,\n    },\n    delegate: (ctx): Server.Delegate => {\n      if (args.interactive) {\n        setupInteractions(\n          {\n            onReload() {\n              ctx.broadcastToMessageClients({ method: 'reload' });\n            },\n            onOpenDevMenu() {\n              ctx.broadcastToMessageClients({ method: 'devMenu' });\n            },\n            onOpenDevTools() {\n              void fetch(`${serverURL}/open-debugger`, {\n                method: 'POST',\n              });\n            },\n          },\n          { logger: ctx.log }\n        );\n      }\n\n      if (reversePort && args.port) {\n        void runAdbReverse(args.port, ctx.log);\n      }\n\n      const lastStats: Record<string, webpack.StatsCompilation> = {};\n\n      compiler.on('watchRun', ({ platform }) => {\n        console.log('[CompilerPlugin] hook: watchRun');\n        ctx.notifyBuildStart(platform);\n        if (platform === 'android') {\n          void runAdbReverse(args.port ?? DEFAULT_PORT, ctx.log);\n        }\n      });\n\n      compiler.on('invalid', ({ platform }) => {\n        console.log('[CompilerPlugin] hook: invalid');\n        ctx.notifyBuildStart(platform);\n        ctx.broadcastToHmrClients({ action: 'building' }, platform);\n      });\n\n      compiler.on(\n        'done',\n        ({\n          platform,\n          stats,\n        }: {\n          platform: string;\n          stats: webpack.StatsCompilation;\n        }) => {\n          console.log('[CompilerPlugin] hook: done');\n          ctx.notifyBuildEnd(platform);\n          lastStats[platform] = stats;\n          ctx.broadcastToHmrClients(\n            { action: 'built', body: createHmrBody(stats) },\n            platform\n          );\n        }\n      );\n\n      return {\n        compiler: {\n          getAsset: (filename, platform, sendProgress) => {\n            const parsedUrl = parseFileUrl(filename, 'file:///');\n            return compiler.getSource(\n              parsedUrl.filename,\n              platform,\n              sendProgress\n            );\n          },\n          getMimeType: (filename) => getMimeType(filename),\n          inferPlatform: (uri) => {\n            const { platform } = parseFileUrl(uri, 'file:///');\n            return platform;\n          },\n        },\n        symbolicator: {\n          getSource: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSource(filename, platform);\n          },\n          getSourceMap: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSourceMap(filename, platform);\n          },\n          shouldIncludeFrame: (frame) => {\n            // If the frame points to internal bootstrap/module system logic, skip the code frame.\n            return !/webpack[/\\\\]runtime[/\\\\].+\\s/.test(frame.file);\n          },\n        },\n        hmr: {\n          getUriPath: () => '/__hmr',\n          onClientConnected: (platform, clientId) => {\n            ctx.broadcastToHmrClients(\n              { action: 'sync', body: createHmrBody(lastStats[platform]) },\n              platform,\n              [clientId]\n            );\n          },\n        },\n        messages: {\n          getHello: () => 'React Native packager is running',\n          getStatus: () => 'packager-status:running',\n        },\n        logger: {\n          onMessage: (log) => {\n            const logEntry = makeLogEntryFromFastifyLog(log);\n            logEntry.issuer = 'DevServer';\n            reporter.process(logEntry);\n          },\n        },\n        api: {\n          getPlatforms: () => Promise.resolve(Object.keys(compiler.workers)),\n          getAssets: (platform) =>\n            Promise.resolve(\n              Object.entries(compiler.assetsCache[platform] ?? {}).map(\n                ([name, asset]) => ({ name, size: asset.size })\n              )\n            ),\n          getCompilationStats: (platform) =>\n            Promise.resolve(compiler.statsCache[platform] ?? null),\n        },\n      };\n    },\n  });\n\n  await start();\n\n  let sendEventsStop = () => {};\n  if (sendEventsArg) {\n    const sendEventsPath = path.join(config.root, sendEventsArg);\n    const { default: sendEvents } = await import(sendEventsPath);\n    sendEventsStop = await sendEvents(config.root);\n  }\n\n  return {\n    stop: async () => {\n      reporter.stop();\n      sendEventsStop();\n      await stop();\n    },\n  };\n}\n\nfunction createHmrBody(\n  stats?: webpack.StatsCompilation\n): HMRMessageBody | null {\n  if (!stats) {\n    return null;\n  }\n\n  return {\n    name: stats.name ?? '',\n    time: stats.time ?? 0,\n    hash: stats.hash ?? '',\n    warnings: stats.warnings || [],\n    errors: stats.errors || [],\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAAC,SAAA,GAAAC,uBAAA,CAAAF,OAAA;AAEA,IAAAG,QAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,IAAA,GAAAJ,OAAA;AACA,IAAAK,QAAA,GAAAL,OAAA;AAOA,IAAAM,OAAA,GAAAN,OAAA;AAOA,IAAAO,OAAA,GAAAP,OAAA;AAEA,IAAAQ,SAAA,GAAAR,OAAA;AAAsC,SAAAS,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAR,wBAAAQ,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA,SAAAnB,uBAAAW,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAI,UAAA,GAAAJ,CAAA,KAAAK,OAAA,EAAAL,CAAA;AAGtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemB,KAAKA,CAACC,CAAW,EAAEC,MAAc,EAAEC,IAAoB,EAAE;EAC7E,MAAMC,iBAAiB,GAAG,IAAAC,gCAAwB,EAChDH,MAAM,CAACI,IAAI,EACXH,IAAI,CAACD,MAAM,IAAIC,IAAI,CAACI,aACtB,CAAC;EACD,MAAM;IAAEC,WAAW;IAAEC,UAAU,EAAEC,aAAa;IAAE,GAAGC;EAAS,CAAC,GAAGR,IAAI;EACpE,MAAMS,UAA2B,GAAG;IAClCV,MAAM,EAAE;MACNI,IAAI,EAAEJ,MAAM,CAACI,IAAI;MACjBO,SAAS,EAAErB,MAAM,CAACsB,IAAI,CAACZ,MAAM,CAACW,SAAS,CAAC;MACxCE,iBAAiB,EAAEX,iBAAiB;MACpCY,eAAe,EAAEd,MAAM,CAACc;IAC1B,CAAC;IACDC,OAAO,EAAE,OAAO;IAChBC,SAAS,EAAE;MAAElB,KAAK,EAAE;QAAE,GAAGW;MAAS;IAAE;EACtC,CAAC;EAED,IAAIR,IAAI,CAACgB,QAAQ,IAAI,CAACP,UAAU,CAACV,MAAM,CAACW,SAAS,CAACO,QAAQ,CAACjB,IAAI,CAACgB,QAAQ,CAAC,EAAE;IACzE,MAAM,IAAIE,KAAK,CAAC,yBAAyB,GAAGlB,IAAI,CAACgB,QAAQ,CAAC;EAC5D;EAEA,IAAIhB,IAAI,CAACmB,OAAO,EAAE;IAChBC,OAAO,CAACC,GAAG,CAACC,oBAAe,CAAC,GAAG,GAAG;EACpC;EAEA,MAAMC,QAAQ,GAAG,IAAAC,yBAAgB,EAC/B,CACE,IAAIC,wBAAe,CAAC;IAAEC,MAAM,EAAE1B,IAAI,CAAC2B,IAAI;IAAEC,SAAS,EAAE5B,IAAI,CAACmB;EAAQ,CAAC,CAAC,EACnEnB,IAAI,CAAC6B,OAAO,GAAG,IAAIC,qBAAY,CAAC;IAAEC,QAAQ,EAAE/B,IAAI,CAAC6B;EAAQ,CAAC,CAAC,GAAGG,SAAS,CACxE,CAACC,MAAM,CAACC,OAAO,CAClB,CAAC;EAED,MAAMC,OAAO,GAAGC,gBAAW,CAACD,OAAO;EACnCf,OAAO,CAACiB,MAAM,CAACC,KAAK,CAClBrE,SAAS,CAACsE,IAAI,CAACtE,SAAS,CAACuE,IAAI,CAAC,aAAa,GAAGL,OAAO,GAAG,MAAM,CAAC,CACjE,CAAC;EAED,MAAMM,QAAQ,GAAG,IAAIC,kBAAQ,CAACjC,UAAU,EAAEc,QAAQ,CAAC;EAEnD,MAAMoB,UAAU,GAAG3C,IAAI,CAAC4C,IAAI,IAAIC,wBAAgB;EAChD,MAAMC,UAAU,GAAG9C,IAAI,CAAC+C,IAAI,IAAIC,oBAAY;EAC5C,MAAMC,SAAS,GAAG,GAAGjD,IAAI,CAACkD,KAAK,KAAK,IAAI,GAAG,OAAO,GAAG,MAAM,MAAMP,UAAU,IAAIG,UAAU,EAAE;EAC3F,MAAMK,gBAAgB,GAAGnD,IAAI,CAACmB,OAAO,IAAInB,IAAI,CAACoD,WAAW;EAEzD,MAAM;IAAEC;EAAa,CAAC,GAAG,MAAM,MAAM,CAAC,8BAA8B,CAAC;EACrE,MAAM;IAAExD,KAAK;IAAEyD;EAAK,CAAC,GAAG,MAAMD,YAAY,CAAC;IACzCE,OAAO,EAAE;MACPC,OAAO,EAAE/C,UAAU,CAACV,MAAM,CAACI,IAAI;MAC/ByC,IAAI,EAAED,UAAU;MAChBI,IAAI,EAAED,UAAU;MAChBI,KAAK,EAAElD,IAAI,CAACkD,KAAK,GACb;QACEO,IAAI,EAAEzD,IAAI,CAACyD,IAAI;QACfC,GAAG,EAAE1D,IAAI,CAAC0D;MACZ,CAAC,GACD1B,SAAS;MACboB,WAAW,EAAED;IACf,CAAC;IACDQ,QAAQ,EAAGC,GAAG,IAAsB;MAClC,IAAI5D,IAAI,CAAC6D,WAAW,EAAE;QACpB,IAAAC,yBAAiB,EACf;UACEC,QAAQA,CAAA,EAAG;YACTH,GAAG,CAACI,yBAAyB,CAAC;cAAEC,MAAM,EAAE;YAAS,CAAC,CAAC;UACrD,CAAC;UACDC,aAAaA,CAAA,EAAG;YACdN,GAAG,CAACI,yBAAyB,CAAC;cAAEC,MAAM,EAAE;YAAU,CAAC,CAAC;UACtD,CAAC;UACDE,cAAcA,CAAA,EAAG;YACf,KAAKC,KAAK,CAAC,GAAGnB,SAAS,gBAAgB,EAAE;cACvCgB,MAAM,EAAE;YACV,CAAC,CAAC;UACJ;QACF,CAAC,EACD;UAAEI,MAAM,EAAET,GAAG,CAACU;QAAI,CACpB,CAAC;MACH;MAEA,IAAIjE,WAAW,IAAIL,IAAI,CAAC+C,IAAI,EAAE;QAC5B,KAAK,IAAAwB,qBAAa,EAACvE,IAAI,CAAC+C,IAAI,EAAEa,GAAG,CAACU,GAAG,CAAC;MACxC;MAEA,MAAME,SAAmD,GAAG,CAAC,CAAC;MAE9D/B,QAAQ,CAACgC,EAAE,CAAC,UAAU,EAAE,CAAC;QAAEzD;MAAS,CAAC,KAAK;QACxC0D,OAAO,CAACJ,GAAG,CAAC,iCAAiC,CAAC;QAC9CV,GAAG,CAACe,gBAAgB,CAAC3D,QAAQ,CAAC;QAC9B,IAAIA,QAAQ,KAAK,SAAS,EAAE;UAC1B,KAAK,IAAAuD,qBAAa,EAACvE,IAAI,CAAC+C,IAAI,IAAIC,oBAAY,EAAEY,GAAG,CAACU,GAAG,CAAC;QACxD;MACF,CAAC,CAAC;MAEF7B,QAAQ,CAACgC,EAAE,CAAC,SAAS,EAAE,CAAC;QAAEzD;MAAS,CAAC,KAAK;QACvC0D,OAAO,CAACJ,GAAG,CAAC,gCAAgC,CAAC;QAC7CV,GAAG,CAACe,gBAAgB,CAAC3D,QAAQ,CAAC;QAC9B4C,GAAG,CAACgB,qBAAqB,CAAC;UAAEC,MAAM,EAAE;QAAW,CAAC,EAAE7D,QAAQ,CAAC;MAC7D,CAAC,CAAC;MAEFyB,QAAQ,CAACgC,EAAE,CACT,MAAM,EACN,CAAC;QACCzD,QAAQ;QACR8D;MAIF,CAAC,KAAK;QACJJ,OAAO,CAACJ,GAAG,CAAC,6BAA6B,CAAC;QAC1CV,GAAG,CAACmB,cAAc,CAAC/D,QAAQ,CAAC;QAC5BwD,SAAS,CAACxD,QAAQ,CAAC,GAAG8D,KAAK;QAC3BlB,GAAG,CAACgB,qBAAqB,CACvB;UAAEC,MAAM,EAAE,OAAO;UAAEG,IAAI,EAAEC,aAAa,CAACH,KAAK;QAAE,CAAC,EAC/C9D,QACF,CAAC;MACH,CACF,CAAC;MAED,OAAO;QACLyB,QAAQ,EAAE;UACRyC,QAAQ,EAAEA,CAACnD,QAAQ,EAAEf,QAAQ,EAAEmE,YAAY,KAAK;YAC9C,MAAMC,SAAS,GAAG,IAAAC,oBAAY,EAACtD,QAAQ,EAAE,UAAU,CAAC;YACpD,OAAOU,QAAQ,CAAC6C,SAAS,CACvBF,SAAS,CAACrD,QAAQ,EAClBf,QAAQ,EACRmE,YACF,CAAC;UACH,CAAC;UACDI,WAAW,EAAGxD,QAAQ,IAAK,IAAAwD,mBAAW,EAACxD,QAAQ,CAAC;UAChDyD,aAAa,EAAGC,GAAG,IAAK;YACtB,MAAM;cAAEzE;YAAS,CAAC,GAAG,IAAAqE,oBAAY,EAACI,GAAG,EAAE,UAAU,CAAC;YAClD,OAAOzE,QAAQ;UACjB;QACF,CAAC;QACD0E,YAAY,EAAE;UACZJ,SAAS,EAAGK,OAAO,IAAK;YACtB,MAAM;cAAE5D,QAAQ;cAAEf;YAAS,CAAC,GAAG,IAAAqE,oBAAY,EAACM,OAAO,CAAC;YACpD,OAAOlD,QAAQ,CAAC6C,SAAS,CAACvD,QAAQ,EAAEf,QAAQ,CAAC;UAC/C,CAAC;UACD4E,YAAY,EAAGD,OAAO,IAAK;YACzB,MAAM;cAAE5D,QAAQ;cAAEf;YAAS,CAAC,GAAG,IAAAqE,oBAAY,EAACM,OAAO,CAAC;YACpD,OAAOlD,QAAQ,CAACmD,YAAY,CAAC7D,QAAQ,EAAEf,QAAQ,CAAC;UAClD,CAAC;UACD6E,kBAAkB,EAAGC,KAAK,IAAK;YAC7B;YACA,OAAO,CAAC,8BAA8B,CAACC,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;UACzD;QACF,CAAC;QACDC,GAAG,EAAE;UACHC,UAAU,EAAEA,CAAA,KAAM,QAAQ;UAC1BC,iBAAiB,EAAEA,CAACnF,QAAQ,EAAEoF,QAAQ,KAAK;YACzCxC,GAAG,CAACgB,qBAAqB,CACvB;cAAEC,MAAM,EAAE,MAAM;cAAEG,IAAI,EAAEC,aAAa,CAACT,SAAS,CAACxD,QAAQ,CAAC;YAAE,CAAC,EAC5DA,QAAQ,EACR,CAACoF,QAAQ,CACX,CAAC;UACH;QACF,CAAC;QACDC,QAAQ,EAAE;UACRC,QAAQ,EAAEA,CAAA,KAAM,kCAAkC;UAClDC,SAAS,EAAEA,CAAA,KAAM;QACnB,CAAC;QACDlC,MAAM,EAAE;UACNmC,SAAS,EAAGlC,GAAG,IAAK;YAClB,MAAMmC,QAAQ,GAAG,IAAAC,mCAA0B,EAACpC,GAAG,CAAC;YAChDmC,QAAQ,CAACE,MAAM,GAAG,WAAW;YAC7BpF,QAAQ,CAACH,OAAO,CAACqF,QAAQ,CAAC;UAC5B;QACF,CAAC;QACDG,GAAG,EAAE;UACHC,YAAY,EAAEA,CAAA,KAAMC,OAAO,CAACC,OAAO,CAAC1H,MAAM,CAACsB,IAAI,CAAC8B,QAAQ,CAACuE,OAAO,CAAC,CAAC;UAClEC,SAAS,EAAGjG,QAAQ,IAClB8F,OAAO,CAACC,OAAO,CACb1H,MAAM,CAAC6H,OAAO,CAACzE,QAAQ,CAAC0E,WAAW,CAACnG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAACoG,GAAG,CACtD,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,MAAM;YAAED,IAAI;YAAEE,IAAI,EAAED,KAAK,CAACC;UAAK,CAAC,CAChD,CACF,CAAC;UACHC,mBAAmB,EAAGxG,QAAQ,IAC5B8F,OAAO,CAACC,OAAO,CAACtE,QAAQ,CAACgF,UAAU,CAACzG,QAAQ,CAAC,IAAI,IAAI;QACzD;MACF,CAAC;IACH;EACF,CAAC,CAAC;EAEF,MAAMnB,KAAK,CAAC,CAAC;EAEb,IAAI6H,cAAc,GAAGA,CAAA,KAAM,CAAC,CAAC;EAC7B,IAAInH,aAAa,EAAE;IACjB,MAAMoH,cAAc,GAAGC,aAAI,CAACC,IAAI,CAAC9H,MAAM,CAACI,IAAI,EAAEI,aAAa,CAAC;IAC5D,MAAM;MAAExB,OAAO,EAAEuB;IAAW,CAAC,GAAG,MAAM,MAAM,CAACqH,cAAc,CAAC;IAC5DD,cAAc,GAAG,MAAMpH,UAAU,CAACP,MAAM,CAACI,IAAI,CAAC;EAChD;EAEA,OAAO;IACLmD,IAAI,EAAE,MAAAA,CAAA,KAAY;MAChB/B,QAAQ,CAAC+B,IAAI,CAAC,CAAC;MACfoE,cAAc,CAAC,CAAC;MAChB,MAAMpE,IAAI,CAAC,CAAC;IACd;EACF,CAAC;AACH;AAEA,SAAS2B,aAAaA,CACpBH,KAAgC,EACT;EACvB,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,OAAO;IACLuC,IAAI,EAAEvC,KAAK,CAACuC,IAAI,IAAI,EAAE;IACtBS,IAAI,EAAEhD,KAAK,CAACgD,IAAI,IAAI,CAAC;IACrBC,IAAI,EAAEjD,KAAK,CAACiD,IAAI,IAAI,EAAE;IACtBC,QAAQ,EAAElD,KAAK,CAACkD,QAAQ,IAAI,EAAE;IAC9BC,MAAM,EAAEnD,KAAK,CAACmD,MAAM,IAAI;EAC1B,CAAC;AACH","ignoreList":[]}