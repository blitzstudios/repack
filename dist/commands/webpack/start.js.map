{"version":3,"file":"start.js","names":["_path","_interopRequireDefault","require","_package","_index","_cliError","_makeCompilerConfig","_index2","_logo","_setupEnvironment","_Compiler","e","__esModule","default","start","_","cliConfig","args","sendEvents","sendEventsArg","detectedPlatforms","Object","keys","platforms","platform","includes","CLIError","configs","makeCompilerConfig","bundler","command","rootDir","root","reactNativePath","setupEnvironment","devServerOptions","devServer","showHttpRequests","verbose","logRequests","reporter","composeReporters","ConsoleReporter","asJson","json","isVerbose","logFile","FileReporter","filename","undefined","filter","Boolean","process","stdout","write","logo","packageJson","version","compiler","Compiler","createServer","stop","options","delegate","ctx","interactive","setupInteractions","onReload","broadcastToMessageClients","method","onOpenDevMenu","onOpenDevTools","fetch","url","catch","log","warn","onAdbReverse","runAdbReverse","port","logger","reversePort","wait","on","console","notifyBuildStart","broadcastToHmrClients","action","body","name","stats","notifyBuildEnd","hash","getAsset","sendProgress","parsedUrl","parseFileUrl","getSource","getMimeType","inferPlatform","uri","symbolicator","fileUrl","getSourceMap","shouldIncludeFrame","frame","test","file","messages","getHello","getStatus","onMessage","logEntry","makeLogEntryFromFastifyLog","issuer","api","getPlatforms","Promise","resolve","workers","getAssets","entries","assetsCache","map","asset","size","getCompilationStats","statsCache","sendEventsStop","sendEventsPath","path","join"],"sources":["../../../src/commands/webpack/start.ts"],"sourcesContent":["import path from 'path';\nimport type { Server } from '@callstack/repack-dev-server';\nimport type { Configuration, StatsCompilation } from 'webpack';\nimport packageJson from '../../../package.json';\nimport {\n  ConsoleReporter,\n  FileReporter,\n  type Reporter,\n  composeReporters,\n  makeLogEntryFromFastifyLog,\n} from '../../logging/index.js';\nimport type { HMRMessage } from '../../types.js';\nimport { CLIError } from '../common/cliError.js';\nimport { makeCompilerConfig } from '../common/config/makeCompilerConfig.js';\nimport {\n  getMimeType,\n  parseFileUrl,\n  runAdbReverse,\n  setupInteractions,\n} from '../common/index.js';\nimport logo from '../common/logo.js';\nimport { setupEnvironment } from '../common/setupEnvironment.js';\nimport type { CliConfig, StartArguments } from '../types.js';\nimport { Compiler } from './Compiler.js';\n\n/**\n * Start command that runs a development server.\n * It runs `@callstack/repack-dev-server` to provide Development Server functionality\n * in development mode.\n *\n * @param _ Original, non-parsed arguments that were provided when running this command.\n * @param cliConfig Configuration object containing platform and project settings.\n * @param args Parsed command line arguments.\n */\nexport async function start(\n  _: string[],\n  cliConfig: CliConfig,\n  args: StartArguments\n) {\n  const { sendEvents: sendEventsArg } = args;\n  const detectedPlatforms = Object.keys(cliConfig.platforms);\n\n  if (args.platform && !detectedPlatforms.includes(args.platform)) {\n    throw new CLIError(`Unrecognized platform: ${args.platform}`);\n  }\n\n  const configs = await makeCompilerConfig<Configuration>({\n    args: args,\n    bundler: 'webpack',\n    command: 'start',\n    rootDir: cliConfig.root,\n    platforms: args.platform ? [args.platform] : detectedPlatforms,\n    reactNativePath: cliConfig.reactNativePath,\n  });\n\n  // expose selected args as environment variables\n  setupEnvironment(args);\n\n  const devServerOptions = configs[0].devServer ?? {};\n  const showHttpRequests = args.verbose || args.logRequests;\n\n  const reporter = composeReporters(\n    [\n      new ConsoleReporter({ asJson: args.json, isVerbose: args.verbose }),\n      args.logFile ? new FileReporter({ filename: args.logFile }) : undefined,\n    ].filter(Boolean) as Reporter[]\n  );\n\n  process.stdout.write(logo(packageJson.version, 'webpack'));\n\n  const compiler = new Compiler(\n    args,\n    reporter,\n    cliConfig.root,\n    cliConfig.reactNativePath\n  );\n\n  // const serverHost = args.host || \"0.0.0.0\";\n  const { createServer } = await import('@callstack/repack-dev-server');\n  const { start, stop } = await createServer({\n    options: {\n      ...devServerOptions,\n      rootDir: cliConfig.root,\n      logRequests: showHttpRequests,\n    },\n    delegate: (ctx): Server.Delegate => {\n      if (args.interactive) {\n        setupInteractions(\n          {\n            onReload() {\n              ctx.broadcastToMessageClients({ method: 'reload' });\n            },\n            onOpenDevMenu() {\n              ctx.broadcastToMessageClients({ method: 'devMenu' });\n            },\n            onOpenDevTools() {\n              fetch(`${ctx.options.url}/open-debugger`, {\n                method: 'POST',\n              }).catch(() => {\n                ctx.log.warn('Failed to open React Native DevTools');\n              });\n            },\n            onAdbReverse() {\n              void runAdbReverse({\n                port: ctx.options.port,\n                logger: ctx.log,\n                verbose: true,\n              });\n            },\n          },\n          { logger: ctx.log }\n        );\n      }\n\n      if (args.reversePort) {\n        void runAdbReverse({\n          logger: ctx.log,\n          port: ctx.options.port,\n          wait: true,\n        });\n      }\n\n      compiler.on('watchRun', ({ platform }) => {\n        console.log('[CompilerPlugin] hook: watchRun');\n        ctx.notifyBuildStart(platform);\n        ctx.broadcastToHmrClients<HMRMessage>({\n          action: 'compiling',\n          body: { name: platform },\n        });\n        if (platform === 'android') {\n          void runAdbReverse({\n            port: ctx.options.port,\n            logger: ctx.log,\n          });\n        }\n      });\n\n      compiler.on('invalid', ({ platform }) => {\n        console.log('[CompilerPlugin] hook: invalid');\n        ctx.notifyBuildStart(platform);\n        ctx.broadcastToHmrClients<HMRMessage>({\n          action: 'compiling',\n          body: { name: platform },\n        });\n      });\n\n      compiler.on(\n        'done',\n        ({\n          platform,\n          stats,\n        }: {\n          platform: string;\n          stats: StatsCompilation;\n        }) => {\n          console.log('[CompilerPlugin] hook: done');\n          ctx.notifyBuildEnd(platform);\n          ctx.broadcastToHmrClients<HMRMessage>({\n            action: 'hash',\n            body: { name: platform, hash: stats.hash },\n          });\n          ctx.broadcastToHmrClients<HMRMessage>({\n            action: 'ok',\n            body: { name: platform },\n          });\n        }\n      );\n\n      return {\n        compiler: {\n          getAsset: (filename, platform, sendProgress) => {\n            const parsedUrl = parseFileUrl(filename, 'file:///');\n            return compiler.getSource(\n              parsedUrl.filename,\n              platform,\n              sendProgress\n            );\n          },\n          getMimeType: (filename) => getMimeType(filename),\n          inferPlatform: (uri) => {\n            const { platform } = parseFileUrl(uri, 'file:///');\n            return platform;\n          },\n        },\n        symbolicator: {\n          getSource: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSource(filename, platform);\n          },\n          getSourceMap: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSourceMap(filename, platform);\n          },\n          shouldIncludeFrame: (frame) => {\n            // If the frame points to internal bootstrap/module system logic, skip the code frame.\n            return !/webpack[/\\\\]runtime[/\\\\].+\\s/.test(frame.file);\n          },\n        },\n        messages: {\n          getHello: () => 'React Native packager is running',\n          getStatus: () => 'packager-status:running',\n        },\n        logger: {\n          onMessage: (log) => {\n            const logEntry = makeLogEntryFromFastifyLog(log);\n            logEntry.issuer = 'DevServer';\n            reporter.process(logEntry);\n          },\n        },\n        api: {\n          getPlatforms: () => Promise.resolve(Object.keys(compiler.workers)),\n          getAssets: (platform) =>\n            Promise.resolve(\n              Object.entries(compiler.assetsCache[platform] ?? {}).map(\n                ([name, asset]) => ({ name, size: asset.size })\n              )\n            ),\n          getCompilationStats: (platform) =>\n            Promise.resolve(compiler.statsCache[platform] ?? null),\n        },\n      };\n    },\n  });\n\n  await start();\n\n  let sendEventsStop = () => {};\n  if (sendEventsArg) {\n    const sendEventsPath = path.join(cliConfig.root, sendEventsArg);\n    const { default: sendEvents } = await import(sendEventsPath);\n    sendEventsStop = await sendEvents(cliConfig.root);\n  }\n\n  return {\n    stop: async () => {\n      reporter.stop();\n      sendEventsStop();\n      await stop();\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]}