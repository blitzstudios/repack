{"version":3,"file":"types.js","names":["WorkerMessages","exports"],"sources":["../../../src/commands/webpack/types.ts"],"sourcesContent":["import type { StatsAsset, StatsCompilation } from 'webpack';\nimport type { CliOptions, RemoveRecord } from '../types';\n\nexport interface WebpackWorkerOptions {\n  cliOptions: CliOptions;\n  platform: string;\n}\n\nexport interface HMRMessageBody {\n  name: string;\n  time: number;\n  hash: string;\n  warnings: StatsCompilation['warnings'];\n  errors: StatsCompilation['errors'];\n}\n\nexport interface HMRMessage {\n  action: 'building' | 'built' | 'sync';\n  body: HMRMessageBody | null;\n}\n\ntype WebpackStatsAsset = RemoveRecord<StatsAsset>;\n\nexport interface CompilerAsset {\n  data: Buffer;\n  info: WebpackStatsAsset['info'];\n  size: number;\n}\n\nexport interface WorkerAsset {\n  data: Uint8Array;\n  info: WebpackStatsAsset['info'];\n  size: number;\n}\n\nexport namespace WorkerMessages {\n  type WorkerMessageName =\n    | 'watchRun'\n    | 'invalid'\n    | 'progress'\n    | 'error'\n    | 'done';\n\n  interface BaseWorkerMessage {\n    event: WorkerMessageName;\n  }\n\n  export interface WatchRunMessage extends BaseWorkerMessage {\n    event: 'watchRun';\n  }\n\n  export interface InvalidMessage extends BaseWorkerMessage {\n    event: 'invalid';\n  }\n\n  export interface ProgressMessage extends BaseWorkerMessage {\n    event: 'progress';\n    total: number;\n    completed: number;\n    percentage: number;\n    label: string;\n    message: string;\n  }\n\n  export interface ErrorMessage extends BaseWorkerMessage {\n    event: 'error';\n    error: Error;\n  }\n\n  export interface DoneMessage extends BaseWorkerMessage {\n    event: 'done';\n    assets: Record<string, WorkerAsset>;\n    stats: StatsCompilation;\n  }\n\n  export type WorkerMessage =\n    | WatchRunMessage\n    | InvalidMessage\n    | ProgressMessage\n    | ErrorMessage\n    | DoneMessage;\n}\n"],"mappings":";;;;;;;gCAmCiBA,cAAc,KAAAC,OAAA,CAAAD,cAAA,GAAdA,cAAc","ignoreList":[]}