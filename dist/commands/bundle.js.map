{"version":3,"file":"bundle.js","names":["bundle","_","config","args","webpackConfigPath","getWebpackConfigPath","root","webpackConfig","cliOptions","reactNativePath","command","arguments","verbose","process","argv","includes","env","VERBOSE_ENV_KEY","webpackEnvOptions","getWebpackEnvOptions","loadWebpackConfig","compiler","webpack","Promise","resolve","reject","run","error","console","exit"],"sources":["../../src/commands/bundle.ts"],"sourcesContent":["import { Config } from '@react-native-community/cli-types';\nimport webpack from 'webpack';\nimport { VERBOSE_ENV_KEY } from '../env';\nimport { BundleArguments, CliOptions } from '../types';\nimport { loadWebpackConfig } from '../webpack/loadWebpackConfig';\nimport { getWebpackEnvOptions } from '../webpack/utils';\nimport { getWebpackConfigPath } from './utils/getWebpackConfigPath';\n\n/**\n * Bundle command for React Native CLI.\n * It runs Webpack, builds bundle and saves it alongside any other assets and Source Map\n * to filesystem.\n *\n * @param _ Original, non-parsed arguments that were provided when running this command.\n * @param config React Native CLI configuration object.\n * @param args Parsed command line arguments.\n *\n * @internal\n * @category CLI command\n */\nexport async function bundle(\n  _: string[],\n  config: Config,\n  args: BundleArguments\n) {\n  const webpackConfigPath = getWebpackConfigPath(\n    config.root,\n    args.webpackConfig\n  );\n  const cliOptions = {\n    config: {\n      root: config.root,\n      reactNativePath: config.reactNativePath,\n      webpackConfigPath,\n    },\n    command: 'bundle',\n    arguments: {\n      bundle: args,\n    },\n  } as CliOptions;\n\n  if (args.verbose ?? process.argv.includes('--verbose')) {\n    process.env[VERBOSE_ENV_KEY] = '1';\n  }\n\n  const webpackEnvOptions = getWebpackEnvOptions(cliOptions);\n  const webpackConfig = await loadWebpackConfig(\n    webpackConfigPath,\n    webpackEnvOptions\n  );\n  const compiler = webpack(webpackConfig);\n\n  return new Promise<void>((resolve, reject) => {\n    compiler.run((error) => {\n      if (error) {\n        reject();\n        console.error(error);\n        process.exit(2);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n"],"mappings":";;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeA,MAAf,CACLC,CADK,EAELC,MAFK,EAGLC,IAHK,EAIL;EACA,MAAMC,iBAAiB,GAAG,IAAAC,0CAAA,EACxBH,MAAM,CAACI,IADiB,EAExBH,IAAI,CAACI,aAFmB,CAA1B;EAIA,MAAMC,UAAU,GAAG;IACjBN,MAAM,EAAE;MACNI,IAAI,EAAEJ,MAAM,CAACI,IADP;MAENG,eAAe,EAAEP,MAAM,CAACO,eAFlB;MAGNL;IAHM,CADS;IAMjBM,OAAO,EAAE,QANQ;IAOjBC,SAAS,EAAE;MACTX,MAAM,EAAEG;IADC;EAPM,CAAnB;;EAYA,IAAIA,IAAI,CAACS,OAAL,IAAgBC,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsB,WAAtB,CAApB,EAAwD;IACtDF,OAAO,CAACG,GAAR,CAAYC,oBAAZ,IAA+B,GAA/B;EACD;;EAED,MAAMC,iBAAiB,GAAG,IAAAC,2BAAA,EAAqBX,UAArB,CAA1B;EACA,MAAMD,aAAa,GAAG,MAAM,IAAAa,oCAAA,EAC1BhB,iBAD0B,EAE1Bc,iBAF0B,CAA5B;EAIA,MAAMG,QAAQ,GAAG,IAAAC,gBAAA,EAAQf,aAAR,CAAjB;EAEA,OAAO,IAAIgB,OAAJ,CAAkB,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC5CJ,QAAQ,CAACK,GAAT,CAAcC,KAAD,IAAW;MACtB,IAAIA,KAAJ,EAAW;QACTF,MAAM;QACNG,OAAO,CAACD,KAAR,CAAcA,KAAd;QACAd,OAAO,CAACgB,IAAR,CAAa,CAAb;MACD,CAJD,MAIO;QACLL,OAAO;MACR;IACF,CARD;EASD,CAVM,CAAP;AAWD"}