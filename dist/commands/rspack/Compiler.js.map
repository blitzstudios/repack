{"version":3,"file":"Compiler.js","names":["_nodeFs","_interopRequireDefault","require","_nodePath","_core","_memfs","_common","_consts","e","__esModule","default","Compiler","assetsCache","statsCache","resolvers","isCompilationInProgress","watchOptions","watching","constructor","cliOptions","reporter","arguments","start","platform","platforms","config","callPendingResolvers","error","forEach","resolver","setDevServerContext","ctx","devServerContext","init","webpackEnvOptions","getEnvOptions","configs","Promise","all","map","env","loadConfig","bundlerConfigPath","name","compiler","rspack","filesystem","memfs","createFsFromVolume","Volume","outputFileSystem","hooks","watchRun","tap","notifyBuildStart","invalid","broadcastToHmrClients","action","done","multiStats","stats","toJson","assets","children","outputPath","timings","hash","errors","warnings","childStats","filter","asset","type","reduce","acc","info","size","assetPath","path","join","data","readFileSync","adaptFilenameToPlatform","related","sourceMap","sourceMapName","Array","isArray","sourceMapPath","sourceMapData","sourceMapAsset","hotModuleReplacement","length","Object","fromEntries","entries","_","process","issuer","timestamp","Date","now","message","String","notifyBuildEnd","body","getHmrBody","watch","getAsset","filename","fileFromCache","reject","Error","resolve","concat","getSource","DEV_SERVER_ASSET_TYPES","test","filePath","root","source","fs","promises","readFile","getSourceMap","sourceMapFilename","time","exports"],"sources":["../../../src/commands/rspack/Compiler.ts"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\nimport type { Server } from '@callstack/repack-dev-server';\nimport { type Configuration, rspack } from '@rspack/core';\nimport type {\n  MultiCompiler,\n  StatsCompilation,\n  WatchOptions,\n} from '@rspack/core';\nimport memfs from 'memfs';\nimport type { Reporter } from '../../logging';\nimport type { HMRMessageBody } from '../../types';\nimport { adaptFilenameToPlatform, getEnvOptions, loadConfig } from '../common';\nimport { DEV_SERVER_ASSET_TYPES } from '../consts';\nimport type { StartCliOptions } from '../types';\nimport type { CompilerAsset, MultiWatching } from './types';\n\nexport class Compiler {\n  platforms: string[];\n  assetsCache: Record<string, Record<string, CompilerAsset> | undefined> = {};\n  statsCache: Record<string, StatsCompilation | undefined> = {};\n  resolvers: Record<string, Array<(error?: Error) => void>> = {};\n  isCompilationInProgress = false;\n  watchOptions: WatchOptions = {};\n  watching: MultiWatching | null = null;\n  // late-init\n  compiler!: MultiCompiler;\n  filesystem!: memfs.IFs;\n  devServerContext!: Server.DelegateContext;\n\n  constructor(\n    private cliOptions: StartCliOptions,\n    private reporter: Reporter\n  ) {\n    if (cliOptions.arguments.start.platform) {\n      this.platforms = [cliOptions.arguments.start.platform];\n    } else {\n      this.platforms = cliOptions.config.platforms;\n    }\n  }\n\n  private callPendingResolvers(platform: string, error?: Error) {\n    this.resolvers[platform]?.forEach((resolver) => resolver(error));\n    this.resolvers[platform] = [];\n  }\n\n  setDevServerContext(ctx: Server.DelegateContext) {\n    this.devServerContext = ctx;\n  }\n\n  async init() {\n    const webpackEnvOptions = getEnvOptions(this.cliOptions);\n    const configs = await Promise.all(\n      this.platforms.map(async (platform) => {\n        const env = { ...webpackEnvOptions, platform };\n        const config = await loadConfig<Configuration>(\n          this.cliOptions.config.bundlerConfigPath,\n          env\n        );\n\n        config.name = platform;\n        return config;\n      })\n    );\n\n    this.compiler = rspack.rspack(configs);\n    this.filesystem = memfs.createFsFromVolume(new memfs.Volume());\n    // @ts-expect-error memfs is compatible enough\n    this.compiler.outputFileSystem = this.filesystem;\n\n    this.watchOptions = configs[0].watchOptions ?? {};\n\n    this.compiler.hooks.watchRun.tap('repack:watch', () => {\n      this.isCompilationInProgress = true;\n      this.platforms.forEach((platform) => {\n        this.devServerContext.notifyBuildStart(platform);\n      });\n    });\n\n    this.compiler.hooks.invalid.tap('repack:invalid', () => {\n      this.isCompilationInProgress = true;\n      this.platforms.forEach((platform) => {\n        this.devServerContext.notifyBuildStart(platform);\n        this.devServerContext.broadcastToHmrClients(\n          { action: 'building' },\n          platform\n        );\n      });\n    });\n\n    this.compiler.hooks.done.tap('repack:done', (multiStats) => {\n      const stats = multiStats.toJson({\n        all: false,\n        assets: true,\n        children: true,\n        outputPath: true,\n        timings: true,\n        hash: true,\n        errors: true,\n        warnings: true,\n      });\n\n      try {\n        stats.children?.map((childStats) => {\n          const platform = childStats.name!;\n          this.statsCache[platform] = childStats;\n\n          const assets = this.statsCache[platform]!.assets!;\n\n          this.assetsCache[platform] = assets\n            .filter((asset) => asset.type === 'asset')\n            .reduce(\n              (acc, { name, info, size }) => {\n                const assetPath = path.join(childStats.outputPath!, name);\n                const data = this.filesystem.readFileSync(assetPath) as Buffer;\n                const asset = { data, info, size };\n\n                acc[adaptFilenameToPlatform(name)] = asset;\n\n                if (info.related?.sourceMap) {\n                  const sourceMapName = Array.isArray(info.related.sourceMap)\n                    ? info.related.sourceMap[0]\n                    : info.related.sourceMap;\n                  const sourceMapPath = path.join(\n                    childStats.outputPath!,\n                    sourceMapName\n                  );\n                  const sourceMapData = this.filesystem.readFileSync(\n                    sourceMapPath\n                  ) as Buffer;\n                  const sourceMapAsset = {\n                    data: sourceMapData,\n                    info: {\n                      hotModuleReplacement: info.hotModuleReplacement,\n                      size: sourceMapData.length,\n                    },\n                    size: sourceMapData.length,\n                  };\n\n                  acc[adaptFilenameToPlatform(sourceMapName)] = sourceMapAsset;\n                }\n\n                return acc;\n              },\n              // keep old assets, discard HMR-related ones\n              Object.fromEntries(\n                Object.entries(this.assetsCache[platform] ?? {}).filter(\n                  ([_, asset]) => !asset.info.hotModuleReplacement\n                )\n              )\n            );\n        });\n      } catch (error) {\n        this.reporter.process({\n          type: 'error',\n          issuer: 'DevServer',\n          timestamp: Date.now(),\n          message: [\n            'An error occured while processing assets from compilation:',\n            String(error),\n          ],\n        });\n      }\n\n      this.isCompilationInProgress = false;\n\n      stats.children?.forEach((childStats) => {\n        const platform = childStats.name!;\n        this.callPendingResolvers(platform);\n        this.devServerContext.notifyBuildEnd(platform);\n        this.devServerContext.broadcastToHmrClients(\n          { action: 'built', body: this.getHmrBody(platform) },\n          platform\n        );\n      });\n    });\n  }\n\n  start() {\n    this.reporter.process({\n      type: 'info',\n      issuer: 'DevServer',\n      timestamp: Date.now(),\n      message: ['Starting build for platforms:', this.platforms.join(', ')],\n    });\n\n    this.watching = this.compiler.watch(this.watchOptions, (error) => {\n      if (!error) return;\n      this.platforms.forEach((platform) => {\n        this.callPendingResolvers(platform, error);\n      });\n    });\n  }\n\n  async getAsset(filename: string, platform: string): Promise<CompilerAsset> {\n    // Return file from assetsCache if exists\n    const fileFromCache = this.assetsCache[platform]?.[filename];\n    if (fileFromCache) {\n      return fileFromCache;\n    }\n\n    if (!this.isCompilationInProgress) {\n      return Promise.reject(\n        new Error(\n          `File ${filename} for ${platform} not found in compilation assets (no compilation in progress)`\n        )\n      );\n    }\n\n    return await new Promise<CompilerAsset>((resolve, reject) => {\n      // Add new resolver to be executed when compilation is finished\n      this.resolvers[platform] = (this.resolvers[platform] ?? []).concat(\n        (error?: Error) => {\n          if (error) {\n            reject(error);\n          } else {\n            const fileFromCache = this.assetsCache[platform]?.[filename];\n            if (fileFromCache) {\n              resolve(fileFromCache);\n            } else {\n              reject(\n                new Error(\n                  `File ${filename} for ${platform} not found in compilation assets`\n                )\n              );\n            }\n          }\n        }\n      );\n    });\n  }\n\n  async getSource(\n    filename: string,\n    platform: string | undefined\n  ): Promise<string | Buffer> {\n    if (DEV_SERVER_ASSET_TYPES.test(filename)) {\n      if (!platform) {\n        throw new Error(`Cannot detect platform for ${filename}`);\n      }\n      const asset = await this.getAsset(filename, platform);\n      return asset.data;\n    }\n\n    try {\n      const filePath = path.join(this.cliOptions.config.root, filename);\n      const source = await fs.promises.readFile(filePath, 'utf8');\n      return source;\n    } catch {\n      throw new Error(`File ${filename} not found`);\n    }\n  }\n\n  async getSourceMap(\n    filename: string,\n    platform: string | undefined\n  ): Promise<string | Buffer> {\n    if (!platform) {\n      throw new Error(\n        `Cannot determine platform for source map of ${filename}`\n      );\n    }\n\n    try {\n      const { info } = await this.getAsset(filename, platform);\n      let sourceMapFilename = info.related?.sourceMap;\n\n      if (!sourceMapFilename) {\n        throw new Error(\n          `Cannot determine source map filename for ${filename} for ${platform}`\n        );\n      }\n\n      if (Array.isArray(sourceMapFilename)) {\n        sourceMapFilename = sourceMapFilename[0];\n      }\n\n      const sourceMap = await this.getAsset(sourceMapFilename, platform);\n      return sourceMap.data;\n    } catch {\n      throw new Error(`Source map for ${filename} for ${platform} is missing`);\n    }\n  }\n\n  getHmrBody(platform: string): HMRMessageBody | null {\n    const stats = this.statsCache[platform];\n    if (!stats) {\n      return null;\n    }\n\n    return {\n      name: stats.name ?? '',\n      time: stats.time ?? 0,\n      hash: stats.hash ?? '',\n      warnings: stats.warnings || [],\n      errors: stats.errors || [],\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}