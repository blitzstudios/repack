{"version":3,"file":"start.js","names":["colorette","_interopRequireWildcard","require","_package","_interopRequireDefault","_env","_logging","_common","_consts","_Compiler","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","start","_","cliConfig","args","rspackConfigPath","getRspackConfigFilePath","root","config","webpackConfig","reversePort","restArgs","cliOptions","platforms","keys","bundlerConfigPath","reactNativePath","command","arguments","platform","includes","Error","verbose","process","env","VERBOSE_ENV_KEY","reporter","composeReporters","ConsoleReporter","asJson","json","isVerbose","logFile","FileReporter","filename","undefined","filter","Boolean","version","packageJson","stdout","write","bold","cyan","compiler","Compiler","serverHost","host","DEFAULT_HOSTNAME","serverPort","port","DEFAULT_PORT","serverURL","https","showHttpRequests","logRequests","createServer","stop","options","rootDir","cert","key","delegate","ctx","interactive","setupInteractions","onReload","broadcastToMessageClients","method","onOpenDevMenu","onOpenDevTools","fetch","logger","log","runAdbReverse","setDevServerContext","getAsset","parsedUrl","parseFileUrl","getSource","getMimeType","inferPlatform","uri","symbolicator","fileUrl","getSourceMap","shouldIncludeFrame","frame","test","file","hmr","getUriPath","onClientConnected","clientId","broadcastToHmrClients","action","body","getHmrBody","messages","getHello","getStatus","onMessage","logEntry","makeLogEntryFromFastifyLog","issuer","api","getPlatforms","Promise","resolve","getAssets","entries","assetsCache","map","name","asset","size","getCompilationStats","statsCache","init"],"sources":["../../../src/commands/rspack/start.ts"],"sourcesContent":["import type { Config } from '@react-native-community/cli-types';\nimport * as colorette from 'colorette';\nimport packageJson from '../../../package.json';\nimport { VERBOSE_ENV_KEY } from '../../env';\nimport {\n  ConsoleReporter,\n  FileReporter,\n  type Reporter,\n  composeReporters,\n  makeLogEntryFromFastifyLog,\n} from '../../logging';\nimport {\n  getMimeType,\n  getRspackConfigFilePath,\n  parseFileUrl,\n  runAdbReverse,\n  setupInteractions,\n} from '../common';\nimport { DEFAULT_HOSTNAME, DEFAULT_PORT } from '../consts';\nimport type { StartArguments, StartCliOptions } from '../types';\nimport { Compiler } from './Compiler';\n\n/**\n * Start command for React Native Community CLI.\n * It runs `@callstack/repack-dev-server` to provide Development Server functionality to React Native apps\n * in development mode.\n *\n * @param _ Original, non-parsed arguments that were provided when running this command.\n * @param config React Native Community CLI configuration object.\n * @param args Parsed command line arguments.\n *\n * @internal\n * @category CLI command\n */\nexport async function start(\n  _: string[],\n  cliConfig: Config,\n  args: StartArguments\n) {\n  const rspackConfigPath = getRspackConfigFilePath(\n    cliConfig.root,\n    args.config ?? args.webpackConfig\n  );\n  const { reversePort, ...restArgs } = args;\n  const cliOptions: StartCliOptions = {\n    config: {\n      root: cliConfig.root,\n      platforms: Object.keys(cliConfig.platforms),\n      bundlerConfigPath: rspackConfigPath,\n      reactNativePath: cliConfig.reactNativePath,\n    },\n    command: 'start',\n    arguments: { start: { ...restArgs } },\n  };\n\n  if (args.platform && !cliOptions.config.platforms.includes(args.platform)) {\n    throw new Error('Unrecognized platform: ' + args.platform);\n  }\n\n  if (args.verbose) {\n    process.env[VERBOSE_ENV_KEY] = '1';\n  }\n\n  const reporter = composeReporters(\n    [\n      new ConsoleReporter({ asJson: args.json, isVerbose: args.verbose }),\n      args.logFile ? new FileReporter({ filename: args.logFile }) : undefined,\n    ].filter(Boolean) as Reporter[]\n  );\n\n  const version = packageJson.version;\n  process.stdout.write(\n    colorette.bold(colorette.cyan('ðŸ“¦ Re.Pack ' + version + '\\n\\n'))\n  );\n\n  // @ts-ignore\n  const compiler = new Compiler(cliOptions, reporter);\n\n  const serverHost = args.host || DEFAULT_HOSTNAME;\n  const serverPort = args.port ?? DEFAULT_PORT;\n  const serverURL = `${args.https === true ? 'https' : 'http'}://${serverHost}:${serverPort}`;\n  const showHttpRequests = args.verbose || args.logRequests;\n\n  const { createServer } = await import('@callstack/repack-dev-server');\n  const { start, stop } = await createServer({\n    options: {\n      rootDir: cliOptions.config.root,\n      host: serverHost,\n      port: serverPort,\n      https: args.https\n        ? {\n            cert: args.cert,\n            key: args.key,\n          }\n        : undefined,\n      logRequests: showHttpRequests,\n    },\n    delegate: (ctx) => {\n      if (args.interactive) {\n        setupInteractions(\n          {\n            onReload() {\n              ctx.broadcastToMessageClients({ method: 'reload' });\n            },\n            onOpenDevMenu() {\n              ctx.broadcastToMessageClients({ method: 'devMenu' });\n            },\n            onOpenDevTools() {\n              void fetch(`${serverURL}/open-debugger`, {\n                method: 'POST',\n              });\n            },\n          },\n          { logger: ctx.log }\n        );\n      }\n\n      if (reversePort && args.port) {\n        void runAdbReverse(args.port, ctx.log);\n      }\n\n      compiler.setDevServerContext(ctx);\n\n      return {\n        compiler: {\n          getAsset: (filename, platform) => {\n            const parsedUrl = parseFileUrl(filename, 'file:///');\n            return compiler.getSource(parsedUrl.filename, platform);\n          },\n          getMimeType: (filename) => getMimeType(filename),\n          inferPlatform: (uri) => {\n            const { platform } = parseFileUrl(uri, 'file:///');\n            return platform;\n          },\n        },\n        symbolicator: {\n          getSource: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSource(filename, platform);\n          },\n          getSourceMap: (fileUrl) => {\n            const { filename, platform } = parseFileUrl(fileUrl);\n            return compiler.getSourceMap(filename, platform);\n          },\n          shouldIncludeFrame: (frame) => {\n            // If the frame points to internal bootstrap/module system logic, skip the code frame.\n            return !/webpack[/\\\\]runtime[/\\\\].+\\s/.test(frame.file);\n          },\n        },\n        hmr: {\n          getUriPath: () => '/__hmr',\n          onClientConnected: (platform, clientId) => {\n            ctx.broadcastToHmrClients(\n              { action: 'sync', body: compiler.getHmrBody(platform) },\n              platform,\n              [clientId]\n            );\n          },\n        },\n        messages: {\n          getHello: () => 'React Native packager is running',\n          getStatus: () => 'packager-status:running',\n        },\n        logger: {\n          onMessage: (log) => {\n            const logEntry = makeLogEntryFromFastifyLog(log);\n            logEntry.issuer = 'DevServer';\n            reporter.process(logEntry);\n          },\n        },\n        api: {\n          getPlatforms: () => Promise.resolve(compiler.platforms),\n          getAssets: (platform) =>\n            Promise.resolve(\n              Object.entries(compiler.assetsCache[platform] ?? {}).map(\n                ([name, asset]) => ({ name, size: asset.size })\n              )\n            ),\n          getCompilationStats: (platform) =>\n            Promise.resolve(compiler.statsCache[platform] ?? null),\n        },\n      };\n    },\n  });\n\n  await compiler.init();\n  await start();\n\n  compiler.start();\n\n  return {\n    stop: async () => {\n      reporter.stop();\n      await stop();\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]}