{"version":3,"file":"ModuleFederationPlugin.js","names":["_ModuleFederationPluginV","require","ModuleFederationPlugin","constructor","pluginConfig","reactNativeDeepImports","config","deepImports","plugin","ModuleFederationPluginV1","apply","compiler","logger","getInfrastructureLogger","hooks","beforeCompile","tap","warn","exports"],"sources":["../../src/plugins/ModuleFederationPlugin.ts"],"sourcesContent":["import type { Compiler, RspackPluginInstance, container } from '@rspack/core';\n// biome-ignore lint/correctness/noUnusedImports: needed for jsdoc\nimport type { Federated } from '../utils/federated.js';\nimport {\n  ModuleFederationPluginV1,\n  type ModuleFederationPluginV1Config,\n} from './ModuleFederationPluginV1.js';\n\ntype MFPluginV1 = typeof container.ModuleFederationPluginV1;\ntype MFPluginV1Options = ConstructorParameters<MFPluginV1>[0];\n\n/**\n * {@link ModuleFederationPluginV1Config} configuration options.\n *\n * The fields and types are exactly the same as in `webpack.container.ModuleFederationPlugin`.\n *\n * You can check documentation for all supported options here: https://webpack.js.org/plugins/module-federation-plugin/\n */\nexport type ModuleFederationPluginConfig = ModuleFederationPluginV1Config;\n\n/**\n * Webpack plugin to configure Module Federation with platform differences\n * handled under the hood.\n *\n * Usually, you should use `Repack.plugin.ModuleFederationPlugin`\n * instead of `webpack.container.ModuleFederationPlugin`.\n *\n * `Repack.plugin.ModuleFederationPlugin` creates:\n * - default for `filename` option when `exposes` is defined\n * - default for `library` option when `exposes` is defined\n * - default for `shared` option with `react` and `react-native` dependencies\n * - converts `remotes` into `ScriptManager`-powered `promise new Promise` loaders\n *\n * You can overwrite all defaults by passing respective options.\n *\n * `remotes` will always be converted to ScriptManager`-powered `promise new Promise` loaders\n * using {@link Federated.createRemote}.\n *\n * @example Host example.\n * ```js\n * import * as Repack from '@callstack/repack';\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'host,\n * });\n * ```\n *\n * @example Host example with additional `shared` dependencies.\n * ```js\n * import * as Repack from '@callstack/repack';\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'host,\n *   shared: {\n *     react: Repack.Federated.SHARED_REACT,\n *     'react-native': Repack.Federated.SHARED_REACT,\n *     'react-native-reanimated': {\n *       singleton: true,\n *     },\n *   },\n * });\n * ```\n *\n * @example Container examples.\n * ```js\n * import * as Repack from '@callstack/repack';\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'app1',\n *   remotes: {\n *     module1: 'module1@https://example.com/module1.container.bundle',\n *   },\n * });\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'app2',\n *   remotes: {\n *     module1: 'module1@https://example.com/module1.container.bundle',\n *     module2: 'module1@dynamic',\n *   },\n * });\n * ```\n *\n * @category Webpack Plugin\n */\nexport class ModuleFederationPlugin implements RspackPluginInstance {\n  private config: MFPluginV1Options;\n  private deepImports: boolean;\n  private plugin: ModuleFederationPluginV1;\n\n  constructor(pluginConfig: ModuleFederationPluginV1Config) {\n    const { reactNativeDeepImports, ...config } = pluginConfig;\n    // exposed for compat with V1 plugin\n    this.config = config;\n    // exposed for compat with V1 plugin\n    this.deepImports = reactNativeDeepImports ?? true;\n    this.plugin = new ModuleFederationPluginV1(pluginConfig);\n  }\n\n  apply(compiler: Compiler) {\n    const logger = compiler.getInfrastructureLogger(\n      'RepackModuleFederationPlugin'\n    );\n\n    compiler.hooks.beforeCompile.tap('RepackModuleFederationPlugin', () => {\n      logger.warn(\n        'Notice: ModuleFederationPlugin currently points to ModuleFederationPluginV1. ' +\n          'Re.Pack 5 introduced ModuleFederationPluginV2, which addresses many previous limitations. ' +\n          'In the next major version of Re.Pack, ModuleFederationPlugin will point to ModuleFederationPluginV2. ' +\n          'We recommend switching to the new ModuleFederationPluginV2 by importing it directly. ' +\n          'If you want to keep using ModuleFederationPluginV1, which is no longer being iterated on, ' +\n          'you can import ModuleFederationPluginV1 directly to prevent this warning from being shown every time.'\n      );\n    });\n\n    this.plugin.apply(compiler);\n  }\n}\n"],"mappings":";;;;;;AAGA,IAAAA,wBAAA,GAAAC,OAAA;AAFA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,sBAAsB,CAAiC;EAKlEC,WAAWA,CAACC,YAA4C,EAAE;IACxD,MAAM;MAAEC,sBAAsB;MAAE,GAAGC;IAAO,CAAC,GAAGF,YAAY;IAC1D;IACA,IAAI,CAACE,MAAM,GAAGA,MAAM;IACpB;IACA,IAAI,CAACC,WAAW,GAAGF,sBAAsB,IAAI,IAAI;IACjD,IAAI,CAACG,MAAM,GAAG,IAAIC,iDAAwB,CAACL,YAAY,CAAC;EAC1D;EAEAM,KAAKA,CAACC,QAAkB,EAAE;IACxB,MAAMC,MAAM,GAAGD,QAAQ,CAACE,uBAAuB,CAC7C,8BACF,CAAC;IAEDF,QAAQ,CAACG,KAAK,CAACC,aAAa,CAACC,GAAG,CAAC,8BAA8B,EAAE,MAAM;MACrEJ,MAAM,CAACK,IAAI,CACT,+EAA+E,GAC7E,4FAA4F,GAC5F,uGAAuG,GACvG,uFAAuF,GACvF,4FAA4F,GAC5F,uGACJ,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACT,MAAM,CAACE,KAAK,CAACC,QAAQ,CAAC;EAC7B;AACF;AAACO,OAAA,CAAAhB,sBAAA,GAAAA,sBAAA","ignoreList":[]}