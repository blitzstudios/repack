{"version":3,"file":"HermesBytecodePlugin.js","names":["_nodeFs","_interopRequireDefault","require","_nodePath","_index","e","__esModule","default","HermesBytecodePlugin","constructor","config","apply","compiler","logger","getInfrastructureLogger","enabled","debug","options","output","compareBeforeEmit","reactNativePath","path","join","context","hermesCLIPath","getHermesCLIPath","hooks","assetEmitted","tapPromise","name","stage","file","outputPath","shouldTransformAsset","webpack","ModuleFilenameHelpers","matchObject","test","include","exclude","bundlePath","sourceMapPath","useSourceMaps","fs","promises","access","then","catch","sourceMap","hermesSourceMapPath","transformBundleToHermesBytecode","info","composeSourceMaps","packagerMapPath","compilerMapPath","exports"],"sources":["../../../src/plugins/HermesBytecodePlugin/HermesBytecodePlugin.ts"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\n\nimport type { Compiler, RspackPluginInstance } from '@rspack/core';\nimport type { Rule } from '../../types.js';\nimport {\n  composeSourceMaps,\n  getHermesCLIPath,\n  transformBundleToHermesBytecode,\n} from './utils/index.js';\n\n/**\n * {@link HermesBytecodePlugin} configuration options.\n */\nexport interface HermesBytecodePluginConfig {\n  /**\n   * Whether the plugin is enabled.\n   *\n   * Since hermes compilation of chunks is not necessary for every build, this\n   * option allows one to enable/disable the plugin. Normally, you would only\n   * enable this plugin for production builds.\n   */\n  enabled: boolean;\n\n  /** Matching files will be converted to Hermes bytecode. */\n  test: Rule | Rule[];\n\n  /** Include matching files in conversion to Hermes bytecode. */\n  include?: Rule | Rule[];\n\n  /** Exclude matching files from conversion to Hermes bytecode. */\n  exclude?: Rule | Rule[];\n\n  /** Path to the Hermes compiler binary. */\n  hermesCLIPath?: string;\n\n  /** Path to React-Native package inside node_modules */\n  reactNativePath?: string;\n\n  /** Force enable `compareBeforeEmit` webpack output option which this plugin disables by default. */\n  compareBeforeEmit?: boolean;\n}\n\n/**\n * Enable Hermes bytecode compilation for the given chunks.\n * This plugin is intended to be used with the `webpack-bundle` command.\n * It will transform the bundle into Hermes bytecode and replace the original bundle with the bytecode.\n * It will also compose the source maps generated by webpack and Hermes.\n *\n * Note: This plugin should only be used for production builds.\n * It is not possible to use this plugin for development builds.\n *\n * Note: You should exclude `index.bundle` from being transformed.\n * The `index.bundle` file is transformed by `react-native` after enabling Hermes in your project.\n *\n * @example ```js\n * // webpack.config.mjs\n * import * as Repack from '@callstack/repack';\n *\n * // ...\n * plugins: [\n *   new Repack.HermesBytecodePlugin({\n *    enabled: mode === 'production',\n *    test: /\\.(js)?bundle$/,\n *    exclude: /index.bundle$/,\n *   }),\n * ]\n * ```\n *\n * @category Webpack Plugin\n */\nexport class HermesBytecodePlugin implements RspackPluginInstance {\n  constructor(private config: HermesBytecodePluginConfig) {}\n\n  apply(compiler: Compiler) {\n    const logger = compiler.getInfrastructureLogger(\n      'RepackHermesBytecodePlugin'\n    );\n\n    if (!this.config.enabled) {\n      logger.debug('Skipping hermes compilation');\n      return;\n    }\n\n    /**\n     * This plugin will only transform assets that are emitted after the compilation.\n     * To ensure that asset is always emitted we disable the `compareBeforeEmit` option\n     * which is enabled by default in Webpack.\n     *\n     * `compareBeforeEmit` option is used to skip emitting assets that are identical to the\n     * ones present in build directory, which might result in transformation being\n     * skipped when there is a untransformed bundle present in the build directory.\n     */\n    compiler.options.output.compareBeforeEmit = !!this.config.compareBeforeEmit;\n\n    const reactNativePath =\n      this.config.reactNativePath ||\n      path.join(compiler.context, 'node_modules', 'react-native');\n\n    const hermesCLIPath =\n      this.config.hermesCLIPath || getHermesCLIPath(reactNativePath);\n\n    compiler.hooks.assetEmitted.tapPromise(\n      { name: 'RepackHermesBytecodePlugin', stage: 10 },\n      async (file, { outputPath }) => {\n        const shouldTransformAsset =\n          compiler.webpack.ModuleFilenameHelpers.matchObject(\n            {\n              test: this.config.test,\n              include: this.config.include,\n              exclude: this.config.exclude,\n            },\n            file\n          );\n\n        if (!shouldTransformAsset) {\n          return;\n        }\n\n        const bundlePath = path.join(outputPath, file);\n        const sourceMapPath = `${bundlePath}.map`;\n        const useSourceMaps = await fs.promises\n          .access(sourceMapPath)\n          .then(() => true)\n          .catch(() => false);\n\n        logger.debug(`Starting hermes compilation for asset: ${bundlePath}`);\n\n        const { sourceMap: hermesSourceMapPath } =\n          await transformBundleToHermesBytecode({\n            hermesCLIPath,\n            useSourceMaps,\n            bundlePath,\n          });\n\n        logger.info(`Asset transformed: ${file}`);\n\n        if (useSourceMaps) {\n          await composeSourceMaps({\n            reactNativePath,\n            packagerMapPath: sourceMapPath,\n            compilerMapPath: hermesSourceMapPath,\n          });\n\n          logger.info(`Asset sourceMap transformed: ${file}.map`);\n        }\n      }\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AAIA,IAAAE,MAAA,GAAAF,OAAA;AAI0B,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE1B;AACA;AACA;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMG,oBAAoB,CAAiC;EAChEC,WAAWA,CAASC,MAAkC,EAAE;IAAA,KAApCA,MAAkC,GAAlCA,MAAkC;EAAG;EAEzDC,KAAKA,CAACC,QAAkB,EAAE;IACxB,MAAMC,MAAM,GAAGD,QAAQ,CAACE,uBAAuB,CAC7C,4BACF,CAAC;IAED,IAAI,CAAC,IAAI,CAACJ,MAAM,CAACK,OAAO,EAAE;MACxBF,MAAM,CAACG,KAAK,CAAC,6BAA6B,CAAC;MAC3C;IACF;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIJ,QAAQ,CAACK,OAAO,CAACC,MAAM,CAACC,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAACT,MAAM,CAACS,iBAAiB;IAE3E,MAAMC,eAAe,GACnB,IAAI,CAACV,MAAM,CAACU,eAAe,IAC3BC,iBAAI,CAACC,IAAI,CAACV,QAAQ,CAACW,OAAO,EAAE,cAAc,EAAE,cAAc,CAAC;IAE7D,MAAMC,aAAa,GACjB,IAAI,CAACd,MAAM,CAACc,aAAa,IAAI,IAAAC,uBAAgB,EAACL,eAAe,CAAC;IAEhER,QAAQ,CAACc,KAAK,CAACC,YAAY,CAACC,UAAU,CACpC;MAAEC,IAAI,EAAE,4BAA4B;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjD,OAAOC,IAAI,EAAE;MAAEC;IAAW,CAAC,KAAK;MAC9B,MAAMC,oBAAoB,GACxBrB,QAAQ,CAACsB,OAAO,CAACC,qBAAqB,CAACC,WAAW,CAChD;QACEC,IAAI,EAAE,IAAI,CAAC3B,MAAM,CAAC2B,IAAI;QACtBC,OAAO,EAAE,IAAI,CAAC5B,MAAM,CAAC4B,OAAO;QAC5BC,OAAO,EAAE,IAAI,CAAC7B,MAAM,CAAC6B;MACvB,CAAC,EACDR,IACF,CAAC;MAEH,IAAI,CAACE,oBAAoB,EAAE;QACzB;MACF;MAEA,MAAMO,UAAU,GAAGnB,iBAAI,CAACC,IAAI,CAACU,UAAU,EAAED,IAAI,CAAC;MAC9C,MAAMU,aAAa,GAAG,GAAGD,UAAU,MAAM;MACzC,MAAME,aAAa,GAAG,MAAMC,eAAE,CAACC,QAAQ,CACpCC,MAAM,CAACJ,aAAa,CAAC,CACrBK,IAAI,CAAC,MAAM,IAAI,CAAC,CAChBC,KAAK,CAAC,MAAM,KAAK,CAAC;MAErBlC,MAAM,CAACG,KAAK,CAAC,0CAA0CwB,UAAU,EAAE,CAAC;MAEpE,MAAM;QAAEQ,SAAS,EAAEC;MAAoB,CAAC,GACtC,MAAM,IAAAC,sCAA+B,EAAC;QACpC1B,aAAa;QACbkB,aAAa;QACbF;MACF,CAAC,CAAC;MAEJ3B,MAAM,CAACsC,IAAI,CAAC,sBAAsBpB,IAAI,EAAE,CAAC;MAEzC,IAAIW,aAAa,EAAE;QACjB,MAAM,IAAAU,wBAAiB,EAAC;UACtBhC,eAAe;UACfiC,eAAe,EAAEZ,aAAa;UAC9Ba,eAAe,EAAEL;QACnB,CAAC,CAAC;QAEFpC,MAAM,CAACsC,IAAI,CAAC,gCAAgCpB,IAAI,MAAM,CAAC;MACzD;IACF,CACF,CAAC;EACH;AACF;AAACwB,OAAA,CAAA/C,oBAAA,GAAAA,oBAAA","ignoreList":[]}