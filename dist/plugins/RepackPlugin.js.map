{"version":3,"file":"RepackPlugin.js","names":["_DevelopmentPlugin","require","_LoggerPlugin","_NativeEntryPlugin","_OutputPlugin","_RepackTargetPlugin","RepackPlugin","constructor","config","sourceMaps","logger","apply","compiler","entryName","options","entry","webpack","DefinePlugin","__DEV__","JSON","stringify","mode","__E2E__","process","env","E2E","OutputPlugin","platform","enabled","devServer","context","output","extraChunks","NativeEntryPlugin","initializeCoreLocation","initializeCore","RepackTargetPlugin","hmr","DevelopmentPlugin","listenerIP","SourceMapDevToolPlugin","test","filename","append","module","columns","noSources","LoggerPlugin","devServerEnabled","Boolean","console","exports"],"sources":["../../src/plugins/RepackPlugin.ts"],"sourcesContent":["import type { Compiler, RspackPluginInstance } from '@rspack/core';\nimport type { DevServerOptions } from '../types';\nimport { DevelopmentPlugin } from './DevelopmentPlugin';\nimport { LoggerPlugin, type LoggerPluginConfig } from './LoggerPlugin';\nimport { NativeEntryPlugin } from './NativeEntryPlugin';\nimport { OutputPlugin, type OutputPluginConfig } from './OutputPlugin';\nimport { RepackTargetPlugin } from './RepackTargetPlugin';\n\n/**\n * {@link RepackPlugin} configuration options.\n */\nexport interface RepackPluginConfig {\n  /** Context in which all resolution happens. Usually it's project root directory. */\n  context: string;\n\n  /** Compilation mode. */\n  mode: 'development' | 'production';\n\n  /** Target application platform. */\n  platform: string;\n\n  /**\n   * Development server configuration options.\n   * Used to configure `@callstack/repack-dev-server`.\n   *\n   * If `undefined`, then development server will not be used.\n   */\n  devServer?: DevServerOptions;\n\n  /**\n   * Whether source maps should be generated. Defaults to `true`.\n   *\n   * Setting this to `false`, disables any source map generation.\n   */\n  sourceMaps?: boolean;\n\n  /**\n   * Output options specifying where to save generated bundle, source map and assets.\n   *\n   * Refer to {@link OutputPluginConfig.output} for more details.\n   */\n  output: OutputPluginConfig['output'];\n\n  /** The entry chunk name, `main` by default. */\n  entryName?: string;\n\n  /**\n   * Absolute location to JS file with initialization logic for React Native.\n   * Useful if you want to built for out-of-tree platforms.\n   */\n  initializeCore?: string;\n\n  /**\n   * Options specifying how to deal with extra chunks generated in the compilation,\n   * usually by using dynamic `import(...)` function.\n   *\n   * Refer to {@link OutputPluginConfig.extraChunks} for more details.\n   */\n  extraChunks?: OutputPluginConfig['extraChunks'];\n\n  /**\n   * Options to configure {@link LoggerPlugin}'s `output`.\n   *\n   * Setting this to `false` disables {@link LoggerPlugin}.\n   */\n  logger?: LoggerPluginConfig['output'] | boolean;\n\n  listenerIP?: string;\n}\n\n/**\n * Webpack plugin, which abstracts configuration of other Re.Pack's plugin\n * to make Webpack config more readable.\n *\n * @example Usage in Webpack config (ESM):\n * ```ts\n * import * as Repack from '@callstack/repack';\n *\n * export default (env) => {\n *   const {\n *     mode = 'development',\n *     platform,\n *     devServer = undefined,\n *   } = env;\n *\n *   return {\n *     plugins: [\n *       new Repack.RepackPlugin({\n *         mode,\n *         platform,\n *         devServer,\n *       }),\n *     ],\n *   };\n * };\n * ```\n *\n * Internally, `RepackPlugin` configures the following plugins:\n * - `webpack.DefinePlugin` with `__DEV__` global\n * - {@link AssetsResolverPlugin}\n * - {@link OutputPlugin}\n * - {@link DevelopmentPlugin}\n * - {@link RepackTargetPlugin}\n * - `webpack.SourceMapDevToolPlugin`\n * - {@link LoggerPlugin}\n *\n * `RepackPlugin` provides a sensible defaults, but can be customized to some extent.\n * If you need more control, it's recommended to remove `RepackPlugin` and use other plugins\n * directly, eg:\n * ```ts\n * import * as Repack from '@callstack/repack';\n *\n * new Repack.plugins.AssetsResolverPlugin();\n * ```\n *\n * @category Webpack Plugin\n */\nexport class RepackPlugin implements RspackPluginInstance {\n  /**\n   * Constructs new `RepackPlugin`.\n   *\n   * @param config Plugin configuration options.\n   */\n  constructor(private config: RepackPluginConfig) {\n    this.config.sourceMaps = this.config.sourceMaps ?? true;\n    this.config.logger = this.config.logger ?? true;\n  }\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: Compiler) {\n    let entryName = this.config.entryName;\n    if (!entryName && typeof compiler.options.entry !== 'function') {\n      // 'main' is the default name for the entry chunk\n      if ('main' in compiler.options.entry) {\n        entryName = 'main';\n      }\n    }\n\n    new compiler.webpack.DefinePlugin({\n      __DEV__: JSON.stringify(this.config.mode === 'development'),\n      __E2E__: JSON.stringify(process.env.E2E),\n    }).apply(compiler);\n\n    new OutputPlugin({\n      platform: this.config.platform,\n      enabled: !this.config.devServer && !!entryName,\n      context: this.config.context,\n      output: this.config.output,\n      entryName: this.config.entryName,\n      extraChunks: this.config.extraChunks,\n    }).apply(compiler);\n\n    if (entryName) {\n      new NativeEntryPlugin({\n        entryName,\n        initializeCoreLocation: this.config.initializeCore,\n      }).apply(compiler);\n    }\n\n    new RepackTargetPlugin({\n      hmr: this.config.devServer?.hmr,\n    }).apply(compiler);\n\n    new DevelopmentPlugin({\n      platform: this.config.platform,\n      devServer: this.config.devServer,\n      listenerIP: this.config?.listenerIP,\n    }).apply(compiler);\n\n    if (this.config.sourceMaps) {\n      new compiler.webpack.SourceMapDevToolPlugin({\n        test: /\\.(js)?bundle$/,\n        filename: '[file].map',\n        append: `//# sourceMappingURL=[url]?platform=${this.config.platform}`,\n        module: true,\n        columns: true,\n        noSources: false,\n      }).apply(compiler);\n    }\n\n    if (this.config.logger) {\n      new LoggerPlugin({\n        platform: this.config.platform,\n        devServerEnabled: Boolean(this.config.devServer),\n        output: {\n          console: true,\n          ...(typeof this.config.logger === 'object' ? this.config.logger : {}),\n        },\n      }).apply(compiler);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}