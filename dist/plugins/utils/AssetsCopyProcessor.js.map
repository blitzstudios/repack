{"version":3,"file":"AssetsCopyProcessor.js","names":["_nodeFs","_interopRequireDefault","require","_nodePath","e","__esModule","default","AssetsCopyProcessor","queue","constructor","config","filesystem","fs","copyAsset","from","to","logger","debug","promises","mkdir","path","dirname","recursive","copyFile","enqueueChunk","chunk","isEntry","sourceMapFile","outputPath","bundleOutput","sourcemapOutput","bundleOutputDir","assetsDest","platform","sourcemapOutputDir","chunkFile","files","bundleDestination","join","sourceMapDestination","shouldOverrideMappingInfo","chunkSource","push","bundleContent","readFile","writeFile","replace","basename","sourceMapSource","sourceMapContent","mediaAssets","auxiliaryFiles","filter","file","test","map","asset","manifest","manifestSource","manifestDestination","manifestContent","execute","work","exports"],"sources":["../../../src/plugins/utils/AssetsCopyProcessor.ts"],"sourcesContent":["import fs from 'node:fs';\nimport path from 'node:path';\nimport type { StatsChunk } from '@rspack/core';\n\nexport class AssetsCopyProcessor {\n  queue: Array<() => Promise<void>> = [];\n\n  constructor(\n    public readonly config: {\n      platform: string;\n      outputPath: string;\n      bundleOutput: string;\n      bundleOutputDir: string;\n      sourcemapOutput: string;\n      assetsDest: string;\n      logger: {\n        debug: (...args: string[]) => void;\n      };\n    },\n    private filesystem = fs\n  ) {}\n\n  private async copyAsset(from: string, to: string) {\n    this.config.logger.debug('Copying asset:', from, 'to:', to);\n    await this.filesystem.promises.mkdir(path.dirname(to), { recursive: true });\n    await this.filesystem.promises.copyFile(from, to);\n  }\n\n  enqueueChunk(\n    chunk: StatsChunk,\n    { isEntry, sourceMapFile }: { isEntry: boolean; sourceMapFile?: string }\n  ) {\n    const {\n      outputPath,\n      bundleOutput,\n      sourcemapOutput,\n      bundleOutputDir,\n      assetsDest,\n      platform,\n    } = this.config;\n    const sourcemapOutputDir = sourcemapOutput\n      ? path.dirname(sourcemapOutput)\n      : bundleOutputDir;\n\n    // Chunk bundle e.g: `index.bundle`, `src_App_js.chunk.bundle`\n    // There might be more than 1 file associated with the chunk -\n    // this happens e.g. on web when importing CSS files into JS.\n    // TBD whether this can ever occur in React Native.\n    const chunkFile = chunk.files?.[0];\n\n    // Sometimes there are no files associated with the chunk and the OutputPlugin fails\n    // Skipping such chunks is a temporary workaround resulting in proper behaviour\n    // This can happen when Module Federation is used and some chunks are not emitted\n    // and are only used as temporary during compilation.\n    if (!chunkFile) {\n      return;\n    }\n\n    // Target file path where to save the bundle.\n    const bundleDestination = isEntry\n      ? bundleOutput\n      : path.join(platform === 'ios' ? assetsDest : bundleOutputDir, chunkFile);\n\n    // Target file path where to save the source map file.\n    const sourceMapDestination = isEntry\n      ? sourcemapOutput\n      : path.join(\n          platform === 'ios' ? assetsDest : sourcemapOutputDir,\n          sourceMapFile ?? ''\n        );\n\n    // Entry chunks (main/index bundle) need to be processed differently to\n    // adjust file name and the content of source mapping info to match values provided by:\n    // - `--bundle-output` -> `bundleOutput`\n    // - `--sourcemap-output` -> `sourcemapOutput`\n    const shouldOverrideMappingInfo = isEntry && sourceMapFile;\n\n    // Absolute path to chunk bundle file saved in `output.path`\n    const chunkSource = path.join(outputPath, chunkFile);\n\n    // If chunk is an entry chunk, meaning it's a main/index bundle,\n    // save it based on `bundleDestination` and overwrite `sourceMappingURL`\n    // to point to correct file name (e.g: `index.bundle.map` -> `main.jsbundle.map`).\n    // Otherwise, simply copy the file to it's target `bundleDestination`.\n    if (shouldOverrideMappingInfo) {\n      this.queue.push(async () => {\n        const bundleContent = await this.filesystem.promises.readFile(\n          chunkSource,\n          'utf-8'\n        );\n        await this.filesystem.promises.mkdir(path.dirname(bundleDestination), {\n          recursive: true,\n        });\n        await this.filesystem.promises.writeFile(\n          bundleDestination,\n          bundleContent.replace(\n            /\\/\\/# sourceMappingURL=.*$/,\n            `//# sourceMappingURL=${path.basename(sourceMapDestination)}`\n          )\n        );\n      });\n    } else {\n      this.queue.push(() => this.copyAsset(chunkSource, bundleDestination));\n    }\n\n    if (sourceMapFile) {\n      const sourceMapSource = path.join(outputPath, sourceMapFile);\n\n      // If chunk is an entry chunk, meaning it's a main/index bundle,\n      // save the source map file for it based on `sourceMapDestination` and values inside it,\n      // to point to a correct bundle file name (e.g: `index.bundle` -> `main.jsbundle`).\n      // Otherwise, simply copy the file to it's target `sourceMapDestination`.\n      if (isEntry) {\n        this.queue.push(async () => {\n          const sourceMapContent = await this.filesystem.promises.readFile(\n            sourceMapSource,\n            'utf-8'\n          );\n          await this.filesystem.promises.mkdir(\n            path.dirname(sourceMapDestination),\n            { recursive: true }\n          );\n          await this.filesystem.promises.writeFile(\n            sourceMapDestination,\n            sourceMapContent.replace(\n              chunkFile,\n              path.basename(bundleDestination)\n            )\n          );\n        });\n      } else {\n        this.queue.push(() =>\n          this.copyAsset(sourceMapSource, sourceMapDestination)\n        );\n      }\n    }\n\n    // Copy regular assets\n    const mediaAssets = [...chunk.auxiliaryFiles!]\n      .filter((file) => !/\\.(map|bundle\\.json)$/.test(file))\n      .filter((file) => !/^remote-assets/.test(file));\n\n    this.queue.push(\n      ...mediaAssets.map(\n        (asset) => () =>\n          this.copyAsset(\n            path.join(outputPath, asset),\n            path.join(assetsDest, asset)\n          )\n      )\n    );\n\n    // Manifest file name e.g: `index.bundle.json`, src_App_js.chunk.bundle.json`\n    const [manifest] = [...chunk.auxiliaryFiles!].filter((file) =>\n      /\\.bundle\\.json$/.test(file)\n    );\n    if (manifest) {\n      const manifestSource = path.join(outputPath, manifest);\n      const manifestDestination = path.join(\n        platform === 'ios' ? assetsDest : bundleOutputDir,\n        isEntry ? `${path.basename(bundleDestination)}.json` : manifest\n      );\n\n      // If chunk is an entry chunk, meaning it's a main bundle,\n      // adjust chunk and source map names inside the manifest (e.g: `index.bundle` -> `main.jsbundle`,\n      // `index.bundle.map` -> `main.jsbundle.map`).\n      // Otherwise, simply copy the manifest.\n      if (isEntry) {\n        this.queue.push(async () => {\n          const manifestContent = await this.filesystem.promises.readFile(\n            manifestSource,\n            'utf-8'\n          );\n          await this.filesystem.promises.mkdir(\n            path.dirname(manifestDestination),\n            { recursive: true }\n          );\n          await this.filesystem.promises.writeFile(\n            manifestDestination,\n            manifestContent\n              .replace(chunkFile, path.basename(bundleDestination))\n              .replace(\n                sourceMapFile ?? /.^/,\n                path.basename(sourceMapDestination)\n              )\n          );\n        });\n      } else {\n        this.queue.push(() =>\n          this.copyAsset(manifestSource, manifestDestination)\n        );\n      }\n    }\n  }\n\n  execute() {\n    const queue = this.queue;\n    this.queue = [];\n    return queue.map((work) => work());\n  }\n}\n"],"mappings":"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","ignoreList":[]}