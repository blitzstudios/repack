{"version":3,"file":"OutputPlugin.js","names":["_nodeAssert","_interopRequireDefault","require","_nodePath","_env","_AssetsCopyProcessor","_AuxiliaryAssetsCopyProcessor","_config","e","__esModule","default","OutputPlugin","localSpecs","remoteSpecs","constructor","config","validateConfig","enabled","extraChunks","include","type","outputPath","path","join","context","platform","bundleFilename","process","env","BUNDLE_FILENAME_ENV_KEY","assetsPath","ASSETS_DEST_ENV_KEY","sourceMapFilename","SOURCEMAP_FILENAME_ENV_KEY","forEach","spec","push","createChunkMatcher","matchObject","chunk","specs","chunkIds","names","id","flat","filter","test","exclude","some","toString","getRelatedSourceMap","auxiliaryFiles","find","file","ensureAbsolutePath","filePath","isAbsolute","classifyChunks","chunks","chunkMatcher","entryOptions","localChunks","Set","remoteChunks","chunksById","Map","map","initial","entry","add","has","flatMap","siblings","chunkId","get","length","addParentsOfLocalChunks","parents","size","apply","compiler","assert","options","output","hooks","beforeCompile","tap","deprecationMessages","getDeprecationMessages","message","logger","warn","getInfrastructureLogger","webpack","ModuleFilenameHelpers","matchChunkToSpecs","auxiliaryAssets","entryChunkNames","entryOption","_","entryNormalized","Error","Object","keys","entryName","entryChunkName","runtime","done","tapPromise","stats","compilationStats","toJson","all","assets","chunkRelations","ids","asset","name","localAssetsCopyProcessor","bundlePath","dirname","debug","JSON","stringify","AssetsCopyProcessor","bundleOutput","bundleOutputDir","sourcemapOutput","assetsDest","remoteAssetsCopyProcessors","enqueueChunk","isEntry","sourceMapFile","specOutputPath","auxiliaryAssetsCopyProcessor","auxiliaryAssetsPath","AuxiliaryAssetsCopyProcessor","enqueueAsset","Promise","execute","values","reduce","acc","processor","concat","exports"],"sources":["../../../src/plugins/OutputPlugin/OutputPlugin.ts"],"sourcesContent":["import assert from 'node:assert';\nimport path from 'node:path';\nimport type {\n  Compiler,\n  EntryNormalized,\n  ModuleFilenameHelpers,\n  RspackPluginInstance,\n  StatsChunk,\n} from '@rspack/core';\nimport {\n  ASSETS_DEST_ENV_KEY,\n  BUNDLE_FILENAME_ENV_KEY,\n  SOURCEMAP_FILENAME_ENV_KEY,\n} from '../../env.js';\nimport { AssetsCopyProcessor } from '../utils/AssetsCopyProcessor.js';\nimport { AuxiliaryAssetsCopyProcessor } from '../utils/AuxiliaryAssetsCopyProcessor.js';\nimport { getDeprecationMessages, validateConfig } from './config.js';\nimport type { DestinationSpec, OutputPluginConfig } from './types.js';\n\n/**\n * Plugin for copying generated files (bundle, chunks, assets) from Webpack's built location to the\n * React Native application directory, so that the files can be packed together into the `ipa`/`apk`.\n *\n * @category Webpack Plugin\n */\nexport class OutputPlugin implements RspackPluginInstance {\n  localSpecs: DestinationSpec[] = [];\n  remoteSpecs: DestinationSpec[] = [];\n\n  private bundleFilename: string | undefined;\n  private assetsPath: string | undefined;\n  private sourceMapFilename: string | undefined;\n\n  constructor(private config: OutputPluginConfig) {\n    validateConfig(config);\n\n    this.config.enabled = this.config.enabled ?? true;\n    this.config.extraChunks = this.config.extraChunks ?? [\n      {\n        include: /.*/,\n        type: 'remote',\n        outputPath: path.join(\n          this.config.context,\n          'build/outputs',\n          this.config.platform,\n          'remotes'\n        ),\n      },\n    ];\n\n    this.bundleFilename = process.env[BUNDLE_FILENAME_ENV_KEY];\n    this.assetsPath = process.env[ASSETS_DEST_ENV_KEY];\n    this.sourceMapFilename = process.env[SOURCEMAP_FILENAME_ENV_KEY];\n\n    this.config.extraChunks?.forEach((spec) => {\n      if (spec.type === 'local') this.localSpecs.push(spec);\n      if (spec.type === 'remote') this.remoteSpecs.push(spec);\n    });\n  }\n\n  createChunkMatcher(matchObject: typeof ModuleFilenameHelpers.matchObject) {\n    return (chunk: StatsChunk, specs: DestinationSpec[]) => {\n      const chunkIds = [chunk.names ?? [], chunk.id!].flat();\n      return specs.filter((spec) => {\n        const { test, include, exclude } = spec;\n        const config = { test, include, exclude };\n        return chunkIds.some((id) => matchObject(config, id.toString()));\n      });\n    };\n  }\n\n  getRelatedSourceMap(chunk: StatsChunk) {\n    return chunk.auxiliaryFiles?.find((file) => /\\.map$/.test(file));\n  }\n\n  ensureAbsolutePath(filePath: string) {\n    if (path.isAbsolute(filePath)) return filePath;\n    return path.join(this.config.context, filePath);\n  }\n\n  classifyChunks({\n    chunks,\n    chunkMatcher,\n    entryOptions,\n  }: {\n    chunks: StatsChunk[];\n    chunkMatcher: (\n      chunk: StatsChunk,\n      specs: DestinationSpec[]\n    ) => DestinationSpec[];\n    entryOptions: EntryNormalized;\n  }) {\n    const localChunks = new Set<StatsChunk>();\n    const remoteChunks = new Set<StatsChunk>();\n\n    const chunksById = new Map(chunks.map((chunk) => [chunk.id!, chunk]));\n\n    // Add explicitly known initial chunks as local chunks\n    chunks\n      .filter((chunk) => chunk.initial && chunk.entry)\n      .filter((chunk) => chunk.id! in entryOptions)\n      .forEach((chunk) => localChunks.add(chunk));\n\n    // Add siblings of known initial chunks as local chunks\n    chunks\n      .filter((chunk) => localChunks.has(chunk))\n      .flatMap((chunk) => chunk.siblings!)\n      .map((chunkId) => chunksById.get(chunkId))\n      .forEach((chunk) => localChunks.add(chunk!));\n\n    // Add chunks matching local specs as local chunks\n    chunks\n      .filter((chunk) => chunkMatcher(chunk, this.localSpecs).length)\n      .forEach((chunk) => localChunks.add(chunk));\n\n    // Add parents of local chunks as local chunks\n    const addParentsOfLocalChunks = () => {\n      chunks\n        .filter((chunk) => localChunks.has(chunk))\n        .flatMap((chunk) => chunk.parents!)\n        .map((chunkId) => chunksById.get(chunkId))\n        .forEach((chunk) => localChunks.add(chunk!));\n      return localChunks.size;\n    };\n\n    // Iterate until no new chunks are added\n    while (localChunks.size - addParentsOfLocalChunks());\n\n    // Add all other chunks as remote chunks\n    chunks\n      .filter((chunk) => !localChunks.has(chunk))\n      .forEach((chunk) => remoteChunks.add(chunk));\n\n    return { localChunks, remoteChunks };\n  }\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: Compiler) {\n    if (!this.config.enabled) return;\n\n    assert(compiler.options.output.path, \"Can't infer output path from config\");\n\n    compiler.hooks.beforeCompile.tap('RepackOutputPlugin', () => {\n      const deprecationMessages = getDeprecationMessages(this.config);\n      deprecationMessages.forEach((message) => logger.warn(message));\n    });\n\n    const logger = compiler.getInfrastructureLogger('RepackOutputPlugin');\n    const outputPath = compiler.options.output.path as string;\n\n    // use ModuleFilenameHelpers.matchObject from compiler.webpack for compatibility\n    const matchObject = compiler.webpack.ModuleFilenameHelpers.matchObject;\n    const matchChunkToSpecs = this.createChunkMatcher(matchObject);\n\n    const auxiliaryAssets = new Set<string>();\n    const entryChunkNames = new Set<string>();\n\n    compiler.hooks.entryOption.tap(\n      'RepackOutputPlugin',\n      (_, entryNormalized) => {\n        if (typeof entryNormalized === 'function') {\n          throw new Error(\n            '[RepackOutputPlugin] Dynamic entry (function) is not supported.'\n          );\n        }\n\n        Object.keys(entryNormalized).forEach((entryName) => {\n          const entryChunkName =\n            entryNormalized[entryName].runtime || entryName;\n          entryChunkNames.add(entryChunkName);\n        });\n\n        if (entryChunkNames.size > 1) {\n          throw new Error(\n            '[RepackOutputPlugin] Multiple entry chunks found. ' +\n              'Only one entry chunk is allowed as a native entrypoint.'\n          );\n        }\n      }\n    );\n\n    compiler.hooks.done.tapPromise('RepackOutputPlugin', async (stats) => {\n      const compilationStats = stats.toJson({\n        all: false,\n        assets: true,\n        chunks: true,\n        chunkRelations: true,\n        ids: true,\n      });\n\n      const assets = compilationStats.assets!;\n\n      const { localChunks, remoteChunks } = this.classifyChunks({\n        chunks: compilationStats.chunks!,\n        chunkMatcher: matchChunkToSpecs,\n        entryOptions: compiler.options.entry,\n      });\n\n      // Collect auxiliary assets (only remote-assets for now)\n      assets\n        .filter((asset) => /^remote-assets/.test(asset.name))\n        .forEach((asset) => auxiliaryAssets.add(asset.name));\n\n      let localAssetsCopyProcessor: AssetsCopyProcessor | undefined;\n\n      if (this.bundleFilename) {\n        this.bundleFilename = this.ensureAbsolutePath(this.bundleFilename);\n\n        const bundlePath = path.dirname(this.bundleFilename);\n\n        this.sourceMapFilename = this.ensureAbsolutePath(\n          this.sourceMapFilename || `${this.bundleFilename}.map`\n        );\n\n        this.assetsPath = this.assetsPath || bundlePath;\n\n        logger.debug(\n          'Detected output paths:',\n          JSON.stringify({\n            bundleFilename: this.bundleFilename,\n            bundlePath,\n            sourceMapFilename: this.sourceMapFilename,\n            assetsPath: this.assetsPath,\n          })\n        );\n\n        localAssetsCopyProcessor = new AssetsCopyProcessor({\n          platform: this.config.platform,\n          outputPath,\n          bundleOutput: this.bundleFilename,\n          bundleOutputDir: bundlePath,\n          sourcemapOutput: this.sourceMapFilename,\n          assetsDest: this.assetsPath,\n          logger,\n        });\n      }\n\n      const remoteAssetsCopyProcessors: Record<string, AssetsCopyProcessor> =\n        {};\n\n      for (const chunk of localChunks) {\n        // Process entry chunk - only one entry chunk is allowed here\n        localAssetsCopyProcessor?.enqueueChunk(chunk, {\n          isEntry: entryChunkNames.has(chunk.id!.toString()),\n          sourceMapFile: this.getRelatedSourceMap(chunk),\n        });\n      }\n\n      for (const chunk of remoteChunks) {\n        const specs = matchChunkToSpecs(chunk, this.remoteSpecs);\n\n        if (specs.length === 0) {\n          throw new Error(`No spec found for chunk ${chunk.id}`);\n        }\n        if (specs.length > 1) {\n          logger.warn(`Multiple specs found for chunk ${chunk.id}`);\n        }\n\n        const spec = specs[0] as { outputPath: string };\n        const specOutputPath = this.ensureAbsolutePath(spec.outputPath);\n\n        if (!remoteAssetsCopyProcessors[specOutputPath]) {\n          remoteAssetsCopyProcessors[specOutputPath] = new AssetsCopyProcessor({\n            platform: this.config.platform,\n            outputPath,\n            bundleOutput: '',\n            bundleOutputDir: specOutputPath,\n            sourcemapOutput: '',\n            assetsDest: specOutputPath,\n            logger,\n          });\n        }\n\n        remoteAssetsCopyProcessors[specOutputPath].enqueueChunk(chunk, {\n          isEntry: false,\n          sourceMapFile: this.getRelatedSourceMap(chunk),\n        });\n      }\n\n      let auxiliaryAssetsCopyProcessor:\n        | AuxiliaryAssetsCopyProcessor\n        | undefined;\n      const auxiliaryAssetsPath = this.config.output.auxiliaryAssetsPath;\n      if (auxiliaryAssetsPath) {\n        auxiliaryAssetsCopyProcessor = new AuxiliaryAssetsCopyProcessor({\n          platform: this.config.platform,\n          outputPath,\n          assetsDest: this.ensureAbsolutePath(auxiliaryAssetsPath),\n          logger,\n        });\n\n        for (const asset of auxiliaryAssets) {\n          auxiliaryAssetsCopyProcessor.enqueueAsset(asset);\n        }\n      }\n\n      await Promise.all([\n        ...(localAssetsCopyProcessor?.execute() ?? []),\n        ...Object.values(remoteAssetsCopyProcessors).reduce(\n          (acc, processor) => acc.concat(...processor.execute()),\n          [] as Promise<void>[]\n        ),\n        ...(auxiliaryAssetsCopyProcessor?.execute() ?? []),\n      ]);\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}