{"version":3,"file":"ModuleFederationPluginV2.js","names":["_isRspackCompiler","require","ModuleFederationPluginV2","constructor","pluginConfig","reactNativeDeepImports","config","deepImports","ensureModuleFederationPackageInstalled","context","resolve","paths","Error","adaptRuntimePlugins","runtimePlugins","repackRuntimePlugin","plugins","map","pluginPath","undefined","filter","includes","getModuleFederationPlugin","compiler","isRspackCompiler","ModuleFederationPlugin","getDefaultSharedDependencies","react","singleton","eager","adaptSharedDependencies","shared","sharedDependencyConfig","requiredVersion","findSharedDependency","name","dependencies","Array","isArray","find","item","Boolean","sharedReactNative","reactNativeEager","adjustedSharedDependencies","push","Object","assign","apply","options","ignoreWarnings","warning","libraryConfig","exposes","type","library","sharedConfig","shareStrategyConfig","shareStrategy","runtimePluginsConfig","exports"],"sources":["../../src/plugins/ModuleFederationPluginV2.ts"],"sourcesContent":["import type { moduleFederationPlugin as MF } from '@module-federation/sdk';\nimport type { Compiler, RspackPluginInstance } from '@rspack/core';\nimport { isRspackCompiler } from './utils/isRspackCompiler';\n\n/**\n * {@link ModuleFederationPlugin} configuration options.\n *\n * The fields and types are exactly the same as in the official `ModuleFederationPlugin`.\n *\n * You can check documentation for all supported options here: https://module-federation.io/configure/\n */\nexport interface ModuleFederationPluginV2Config\n  extends MF.ModuleFederationPluginOptions {\n  /** Enable or disable adding React Native deep imports to shared dependencies. Defaults to true */\n  reactNativeDeepImports?: boolean;\n}\n\n/**\n * Webpack plugin to configure Module Federation with platform differences\n * handled under the hood.\n *\n * Usually, you should use `Repack.plugin.ModuleFederationPlugin`\n * instead of `webpack.container.ModuleFederationPlugin`.\n *\n * `Repack.plugin.ModuleFederationPlugin` creates:\n * - default for `filename` option when `exposes` is defined\n * - default for `library` option when `exposes` is defined\n * - default for `shared` option with `react` and `react-native` dependencies\n * - converts `remotes` into `ScriptManager`-powered `promise new Promise` loaders\n *\n * You can overwrite all defaults by passing respective options.\n *\n * `remotes` will always be converted to ScriptManager`-powered `promise new Promise` loaders\n * using {@link Federated.createRemote}.\n *\n * @example Host example.\n * ```js\n * import * as Repack from '@callstack/repack';\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'host,\n * });\n * ```\n *\n * @example Host example with additional `shared` dependencies.\n * ```js\n * import * as Repack from '@callstack/repack';\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'host,\n *   shared: {\n *     react: Repack.Federated.SHARED_REACT,\n *     'react-native': Repack.Federated.SHARED_REACT,\n *     'react-native-reanimated': {\n *       singleton: true,\n *     },\n *   },\n * });\n * ```\n *\n * @example Container examples.\n * ```js\n * import * as Repack from '@callstack/repack';\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'app1',\n *   remotes: {\n *     module1: 'module1@https://example.com/module1.container.bundle',\n *   },\n * });\n *\n * new Repack.plugins.ModuleFederationPlugin({\n *   name: 'app2',\n *   remotes: {\n *     module1: 'module1@https://example.com/module1.container.bundle',\n *     module2: 'module1@dynamic',\n *   },\n * });\n * ```\n *\n * @category Webpack Plugin\n */\nexport class ModuleFederationPluginV2 implements RspackPluginInstance {\n  private config: MF.ModuleFederationPluginOptions;\n  private deepImports: boolean;\n\n  constructor(pluginConfig: ModuleFederationPluginV2Config) {\n    const { reactNativeDeepImports, ...config } = pluginConfig;\n    this.config = config;\n    this.deepImports = reactNativeDeepImports ?? true;\n  }\n\n  private ensureModuleFederationPackageInstalled(context: string) {\n    try {\n      require.resolve('@module-federation/enhanced', { paths: [context] });\n    } catch {\n      throw new Error(\n        \"ModuleFederationPlugin requires '@module-federation/enhanced' to be present in your project. \" +\n          'Did you forget to install it?'\n      );\n    }\n  }\n\n  private adaptRuntimePlugins(\n    context: string,\n    runtimePlugins: string[] | undefined = []\n  ) {\n    const repackRuntimePlugin = require.resolve(\n      '../modules/FederationRuntimePlugin'\n    );\n\n    const plugins = runtimePlugins\n      .map((pluginPath) => {\n        try {\n          // resolve the paths to compare against absolute paths\n          return require.resolve(pluginPath, { paths: [context] });\n        } catch {\n          // ignore invalid paths\n          return undefined;\n        }\n      })\n      .filter((pluginPath) => !!pluginPath) as string[];\n\n    if (!plugins.includes(repackRuntimePlugin)) {\n      return [repackRuntimePlugin, ...runtimePlugins];\n    }\n\n    return runtimePlugins;\n  }\n\n  private getModuleFederationPlugin(compiler: Compiler) {\n    if (isRspackCompiler(compiler)) {\n      return require('@module-federation/enhanced/rspack')\n        .ModuleFederationPlugin;\n    }\n    return require('@module-federation/enhanced/webpack')\n      .ModuleFederationPlugin;\n  }\n\n  private getDefaultSharedDependencies() {\n    return {\n      react: { singleton: true, eager: true },\n      'react-native': { singleton: true, eager: true },\n    };\n  }\n\n  /**\n   * As including 'react-native' as a shared dependency is not enough to support\n   * deep imports from 'react-native' (e.g. 'react-native/Libraries/Utilities/PixelRatio'),\n   * we need to add deep imports using an undocumented feature of ModuleFederationPlugin.\n   *\n   * When a dependency has a trailing slash, deep imports of that dependency will be correctly\n   * resolved by reaching out to the shared scope. This also ensures single instances of things\n   * like 'assetsRegistry'. Additionally, we mark every package from '@react-native' group as shared\n   * as well, as these are used by React Native too.\n   *\n   * Reference: https://stackoverflow.com/questions/65636979/wp5-module-federation-sharing-deep-imports\n   * Reference: https://github.com/webpack/webpack/blob/main/lib/sharing/resolveMatchedConfigs.js#L77-L79\n   *\n   * @param shared shared dependencies configuration from ModuleFederationPlugin\n   * @returns adjusted shared dependencies configuration\n   *\n   * @internal\n   */\n  private adaptSharedDependencies(shared: MF.Shared): MF.Shared {\n    const sharedDependencyConfig = (eager?: boolean) => ({\n      singleton: true,\n      eager: eager ?? true,\n      requiredVersion: '*',\n    });\n\n    const findSharedDependency = (\n      name: string,\n      dependencies: MF.Shared\n    ): MF.SharedConfig | string | undefined => {\n      if (Array.isArray(dependencies)) {\n        return dependencies.find((item) =>\n          typeof item === 'string' ? item === name : Boolean(item[name])\n        );\n      }\n      return dependencies[name];\n    };\n\n    const sharedReactNative = findSharedDependency('react-native', shared);\n    const reactNativeEager =\n      typeof sharedReactNative === 'object'\n        ? sharedReactNative.eager\n        : undefined;\n\n    if (!this.deepImports || !sharedReactNative) {\n      return shared;\n    }\n\n    if (Array.isArray(shared)) {\n      const adjustedSharedDependencies = [...shared];\n      if (!findSharedDependency('react-native/', shared)) {\n        adjustedSharedDependencies.push({\n          'react-native/': sharedDependencyConfig(reactNativeEager),\n        });\n      }\n      if (!findSharedDependency('@react-native/', shared)) {\n        adjustedSharedDependencies.push({\n          '@react-native/': sharedDependencyConfig(reactNativeEager),\n        });\n      }\n      return adjustedSharedDependencies;\n    }\n    const adjustedSharedDependencies = { ...shared };\n    if (!findSharedDependency('react-native/', shared)) {\n      Object.assign(adjustedSharedDependencies, {\n        'react-native/': sharedDependencyConfig(reactNativeEager),\n      });\n    }\n    if (!findSharedDependency('@react-native/', shared)) {\n      Object.assign(adjustedSharedDependencies, {\n        '@react-native/': sharedDependencyConfig(reactNativeEager),\n      });\n    }\n    return adjustedSharedDependencies;\n  }\n\n  apply(compiler: Compiler) {\n    this.ensureModuleFederationPackageInstalled(compiler.context);\n\n    // MF2 produces warning about not supporting async await\n    // we can silence this warning since it works just fine\n    compiler.options.ignoreWarnings = compiler.options.ignoreWarnings ?? [];\n    compiler.options.ignoreWarnings.push(\n      (warning) => warning.name === 'EnvironmentNotSupportAsyncWarning'\n    );\n\n    const ModuleFederationPlugin = this.getModuleFederationPlugin(compiler);\n\n    const libraryConfig = this.config.exposes\n      ? {\n          name: this.config.name,\n          type: 'self',\n          ...this.config.library,\n        }\n      : undefined;\n\n    const sharedConfig = this.adaptSharedDependencies(\n      this.config.shared ?? this.getDefaultSharedDependencies()\n    );\n\n    const shareStrategyConfig = this.config.shareStrategy ?? 'loaded-first';\n\n    const runtimePluginsConfig = this.adaptRuntimePlugins(\n      compiler.context,\n      this.config.runtimePlugins\n    );\n\n    const config: MF.ModuleFederationPluginOptions = {\n      ...this.config,\n      library: libraryConfig,\n      shared: sharedConfig,\n      shareStrategy: shareStrategyConfig,\n      runtimePlugins: runtimePluginsConfig,\n    };\n\n    new ModuleFederationPlugin(config).apply(compiler);\n  }\n}\n"],"mappings":"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","ignoreList":[]}