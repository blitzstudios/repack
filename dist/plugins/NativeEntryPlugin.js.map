{"version":3,"file":"NativeEntryPlugin.js","names":["_nodePath","_interopRequireDefault","require","_isRspackCompiler","e","__esModule","default","NativeEntryPlugin","constructor","config","getReactNativePath","candidate","reactNativePath","candidates","filter","Boolean","resolve","path","extname","dirname","apply","compiler","options","alias","getReactNativePolyfills","join","initializeCorePath","initializeCoreLocation","initializeScriptManagerPath","entries","webpack","EntryPlugin","context","name","undefined","isRspackCompiler","hooks","initialize","tap","stage","entry","prependEntries","entryConfig","entryName","Error","import","dynamicEntry","then","exports"],"sources":["../../src/plugins/NativeEntryPlugin.ts"],"sourcesContent":["import path from 'node:path';\nimport type {\n  Compiler,\n  EntryStaticNormalized,\n  ResolveAlias,\n  RspackPluginInstance,\n} from '@rspack/core';\nimport { isRspackCompiler } from './utils/isRspackCompiler';\n\nexport interface NativeEntryPluginConfig {\n  /**\n   * Name of the chunk that is the first to load on the device.\n   */\n  entryName: string;\n  /**\n   * Absolute location to JS file with initialization logic for React Native.\n   * Useful if you want to built for out-of-tree platforms.\n   */\n  initializeCoreLocation?: string;\n}\n\nexport class NativeEntryPlugin implements RspackPluginInstance {\n  constructor(private config: NativeEntryPluginConfig) {}\n  private getReactNativePath(candidate: ResolveAlias[string] | undefined) {\n    let reactNativePath: string | undefined;\n    if (typeof candidate === 'string') {\n      reactNativePath = candidate;\n    }\n    if (typeof candidate === 'object') {\n      const candidates = candidate.filter(Boolean) as string[];\n      reactNativePath = candidates[0];\n    }\n    if (!reactNativePath) {\n      reactNativePath = require.resolve('react-native');\n    }\n\n    return path.extname(reactNativePath)\n      ? path.dirname(reactNativePath)\n      : reactNativePath;\n  }\n\n  apply(compiler: Compiler) {\n    const reactNativePath = this.getReactNativePath(\n      compiler.options.resolve.alias?.['react-native']\n    );\n\n    const getReactNativePolyfills: () => string[] = require(\n      path.join(reactNativePath, 'rn-get-polyfills.js')\n    );\n\n    const initializeCorePath =\n      this.config?.initializeCoreLocation ??\n      path.join(reactNativePath, 'Libraries/Core/InitializeCore.js');\n\n    const initializeScriptManagerPath = require.resolve(\n      '../modules/InitializeScriptManager'\n    );\n\n    const entries = [\n      ...getReactNativePolyfills(),\n      initializeCorePath,\n      initializeScriptManagerPath,\n    ];\n\n    // Initialization of MF entry requires setImmediate to be defined\n    // but in React Native it happens during InitializeCore so we need\n    // to shim it here to prevent ReferenceError\n    // TBD if this has any sort of impact\n    new compiler.webpack.EntryPlugin(\n      compiler.context,\n      'data:text/javascript,globalThis.setImmediate = globalThis.setImmediate || function(){ /* noop */ };',\n      { name: undefined }\n    ).apply(compiler);\n\n    // TODO (jbroma): refactor this to be more maintainable\n    // This is a very hacky way to reorder entrypoints, and needs to be done differently\n    // depending on the compiler type (rspack/webpack)\n    if (isRspackCompiler(compiler)) {\n      // Add entries after the rspack MF entry is added during `hook.afterPlugins` stage\n      compiler.hooks.initialize.tap(\n        { name: 'NativeEntryPlugin', stage: 100 },\n        () => {\n          for (const entry of entries) {\n            new compiler.webpack.EntryPlugin(compiler.context, entry, {\n              name: undefined,\n            }).apply(compiler);\n          }\n        }\n      );\n    } else {\n      const prependEntries = (entryConfig: EntryStaticNormalized) => {\n        if (!(this.config.entryName in entryConfig)) {\n          throw new Error(\n            `Entry '${this.config.entryName}' does not exist in the entry configuration`\n          );\n        }\n        entryConfig[this.config.entryName].import = [\n          ...entries,\n          ...(entryConfig[this.config.entryName].import ?? []),\n        ];\n        return entryConfig;\n      };\n\n      if (typeof compiler.options.entry === 'function') {\n        const dynamicEntry = compiler.options.entry;\n        compiler.options.entry = () => dynamicEntry().then(prependEntries);\n      } else {\n        compiler.options.entry = prependEntries(compiler.options.entry);\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}