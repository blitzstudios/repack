{"version":3,"file":"compilerPlugin.js","names":["fastifyPlugin","compilerPlugin","instance","delegate","route","method","url","schema","querystring","type","properties","platform","handler","request","reply","console","log","file","params","query","error","notFound","compiler","inferPlatform","badRequest","startsWith","replace","multipart","asMultipart","sendProgress","completed","total","writeChunk","JSON","stringify","done","asset","getAsset","mimeType","getMimeType","buffer","Buffer","isBuffer","from","setHeader","String","byteLength","header","headers","range","parts","split","start","parseInt","end","length","chunk","slice","code","send","message","name","dependencies"],"sources":["../../../src/plugins/compiler/compilerPlugin.ts"],"sourcesContent":["import type { FastifyInstance } from 'fastify';\nimport fastifyPlugin from 'fastify-plugin';\nimport type { Server } from '../../types';\nimport type { SendProgress } from '../../types';\n\nasync function compilerPlugin(\n  instance: FastifyInstance,\n  { delegate }: { delegate: Server.Delegate }\n) {\n  instance.route({\n    method: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'HEAD'],\n    url: '/*',\n    schema: {\n      querystring: {\n        type: 'object',\n        properties: {\n          platform: {\n            type: 'string',\n          },\n        },\n      },\n    },\n    handler: async (request, reply) => {\n      console.log('[CompilerPlugin] compile:', request?.url);\n      let file = (request.params as { '*'?: string })['*'];\n      let { platform } = request.query as { platform?: string };\n\n      if (!file) {\n        // This technically should never happen - this route should not be called if file is missing.\n        request.log.error(`File was not provided`);\n        return reply.notFound();\n      }\n\n      // Let consumer infer the platform. If function is not provided fallback\n      // to platform query param.\n      platform = delegate.compiler.inferPlatform?.(request.url) ?? platform;\n\n      if (!platform || (platform !== 'ios' && platform !== 'android')) {\n        request.log.error('Cannot detect platform');\n        return reply.badRequest('Cannot detect platform');\n      }\n\n      // If platform happens to be in front of an asset remove it.\n      if (file.startsWith(`${platform}/`)) {\n        file = file.replace(`${platform}/`, '');\n      }\n\n      const multipart = reply.asMultipart();\n\n      const sendProgress: SendProgress = ({ completed, total }) => {\n        multipart?.writeChunk(\n          { 'Content-Type': 'application/json' },\n          JSON.stringify({\n            done: completed,\n            total,\n          })\n        );\n      };\n\n      try {\n        const asset = await delegate.compiler.getAsset(\n          file,\n          platform,\n          sendProgress\n        );\n        const mimeType = delegate.compiler.getMimeType(file, platform, asset);\n        const buffer = Buffer.isBuffer(asset) ? asset : Buffer.from(asset);\n\n        if (multipart) {\n          multipart.setHeader('Content-Type', `${mimeType}; charset=UTF-8`);\n          multipart.setHeader(\n            'Content-Length',\n            String(Buffer.byteLength(buffer))\n          );\n        } else {\n          reply.header('Content-Type', `${mimeType}; charset=UTF-8`);\n          reply.header('Content-Length', String(Buffer.byteLength(buffer)));\n        }\n\n        if (request.headers.range) {\n          // Parse the range header to get the start and end bytes\n          const parts = request.headers.range.replace(/bytes=/, '').split('-');\n          const start = parseInt(parts[0], 10);\n          const end = parts[1] ? parseInt(parts[1], 10) : buffer.length - 1;\n\n          // Create a new buffer that only includes the part of the file requested\n          const chunk = buffer.slice(start, end + 1);\n\n          // Set the necessary headers\n          reply.header(\n            'Content-Range',\n            `bytes ${start}-${end}/${buffer.length}`\n          );\n          reply.header('Accept-Ranges', 'bytes');\n\n          if (multipart) {\n            multipart.setHeader('Content-Length', String(chunk.length));\n            multipart.end(chunk);\n          } else {\n            // Send the chunk with a 206 status code\n            return reply.code(206).send(chunk);\n          }\n        } else {\n          // If no range header is present, send the whole file like before\n          if (multipart) {\n            multipart.end(buffer);\n          } else {\n            return reply.code(200).send(asset);\n          }\n        }\n      } catch (error) {\n        request.log.error(error);\n        return reply.notFound((error as Error).message);\n      }\n    },\n  });\n}\n\nexport default fastifyPlugin(compilerPlugin, {\n  name: 'compiler-plugin',\n  dependencies: ['fastify-sensible', 'multipart-plugin'],\n});\n"],"mappings":"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"}