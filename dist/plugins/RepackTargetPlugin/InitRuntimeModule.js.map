{"version":3,"file":"InitRuntimeModule.js","names":["makeInitRuntimeModule","compiler","moduleConfig","Template","webpack","RuntimeModule","InitRuntimeModule","constructor","config","STAGE_NORMAL","generate","asString","getFunctionContent","require","replaceAll","globalObject","exports"],"sources":["../../../src/plugins/RepackTargetPlugin/InitRuntimeModule.ts"],"sourcesContent":["import type {\n  Compiler,\n  RuntimeModule as RuntimeModuleType,\n} from '@rspack/core';\n\ninterface InitRuntimeModuleConfig {\n  globalObject: string;\n}\n\n// runtime module class is generated dynamically based on the compiler instance\n// this way it's compatible with both webpack and rspack\nexport const makeInitRuntimeModule = (\n  compiler: Compiler,\n  moduleConfig: InitRuntimeModuleConfig\n): RuntimeModuleType => {\n  const Template = compiler.webpack.Template;\n  const RuntimeModule = compiler.webpack.RuntimeModule;\n\n  const InitRuntimeModule = class extends RuntimeModule {\n    constructor(private config: InitRuntimeModuleConfig) {\n      super('repack/init', RuntimeModule.STAGE_NORMAL);\n    }\n\n    generate() {\n      return Template.asString([\n        Template.getFunctionContent(\n          require('./implementation/init.js')\n        ).replaceAll('$globalObject$', this.config.globalObject),\n      ]);\n    }\n  };\n\n  return new InitRuntimeModule(moduleConfig);\n};\n"],"mappings":";;;;;;AASA;AACA;AACO,MAAMA,qBAAqB,GAAGA,CACnCC,QAAkB,EAClBC,YAAqC,KACf;EACtB,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,OAAO,CAACD,QAAQ;EAC1C,MAAME,aAAa,GAAGJ,QAAQ,CAACG,OAAO,CAACC,aAAa;EAEpD,MAAMC,iBAAiB,GAAG,cAAcD,aAAa,CAAC;IACpDE,WAAWA,CAASC,MAA+B,EAAE;MACnD,KAAK,CAAC,aAAa,EAAEH,aAAa,CAACI,YAAY,CAAC;MAAC,KAD/BD,MAA+B,GAA/BA,MAA+B;IAEnD;IAEAE,QAAQA,CAAA,EAAG;MACT,OAAOP,QAAQ,CAACQ,QAAQ,CAAC,CACvBR,QAAQ,CAACS,kBAAkB,CACzBC,OAAO,CAAC,0BAA0B,CACpC,CAAC,CAACC,UAAU,CAAC,gBAAgB,EAAE,IAAI,CAACN,MAAM,CAACO,YAAY,CAAC,CACzD,CAAC;IACJ;EACF,CAAC;EAED,OAAO,IAAIT,iBAAiB,CAACJ,YAAY,CAAC;AAC5C,CAAC;AAACc,OAAA,CAAAhB,qBAAA,GAAAA,qBAAA","ignoreList":[]}