{"version":3,"file":"createServer.js","names":["Writable","middie","fastifySensible","debuggerUIMiddleware","openStackFrameInEditorMiddleware","openURLMiddleware","createDevMiddleware","Fastify","apiPlugin","compilerPlugin","devtoolsPlugin","faviconPlugin","multipartPlugin","symbolicatePlugin","wssPlugin","Internal","createServer","config","delegate","instance","disableRequestLogging","options","logRequests","logger","level","stream","write","chunk","_encoding","callback","log","JSON","parse","toString","onMessage","wss","apiServer","send","https","undefined","notifyBuildStart","platform","event","EventTypes","BuildStart","notifyBuildEnd","BuildEnd","broadcastToHmrClients","clientIds","hmrServer","broadcastToMessageClients","method","params","messageServer","broadcast","devMiddleware","projectRoot","rootDir","serverBaseUrl","host","port","unstable_experiments","enableNewDebugger","experiments","experimentalDebugger","register","endpoints","websocketEndpoints","prefix","use","watchFolders","addHook","request","reply","payload","header","pathname","url","split","endsWith","middleware","get","messages","getHello","getStatus","start","listen","stop","close"],"sources":["../src/createServer.ts"],"sourcesContent":["import { Writable } from 'node:stream';\nimport middie from '@fastify/middie';\nimport fastifySensible from '@fastify/sensible';\nimport { debuggerUIMiddleware } from '@react-native-community/cli-debugger-ui';\nimport {\n  openStackFrameInEditorMiddleware,\n  openURLMiddleware,\n} from '@react-native-community/cli-server-api';\nimport { createDevMiddleware } from '@react-native/dev-middleware';\nimport Fastify from 'fastify';\nimport apiPlugin from './plugins/api';\nimport compilerPlugin from './plugins/compiler';\nimport devtoolsPlugin from './plugins/devtools';\nimport faviconPlugin from './plugins/favicon';\nimport multipartPlugin from './plugins/multipart';\nimport symbolicatePlugin from './plugins/symbolicate';\nimport wssPlugin from './plugins/wss';\nimport { Internal, type Server } from './types';\n\n/**\n * Create instance of development server, powered by Fastify.\n *\n * @param config Server configuration.\n * @returns `start` and `stop` functions as well as an underlying Fastify `instance`.\n */\nexport async function createServer(config: Server.Config) {\n  // biome-ignore lint/style/useConst: needed in fastify constructor\n  let delegate: Server.Delegate;\n\n  /** Fastify instance powering the development server. */\n  const instance = Fastify({\n    disableRequestLogging: !config.options.logRequests,\n    logger: {\n      level: 'trace',\n      stream: new Writable({\n        write: (chunk, _encoding, callback) => {\n          const log = JSON.parse(chunk.toString());\n          delegate?.logger.onMessage(log);\n          instance.wss?.apiServer.send(log);\n          callback();\n        },\n      }),\n    },\n    ...(config.options.https ? { https: config.options.https } : undefined),\n  });\n\n  delegate = await config.delegate({\n    log: instance.log,\n    notifyBuildStart: (platform) => {\n      instance.wss.apiServer.send({\n        event: Internal.EventTypes.BuildStart,\n        platform,\n      });\n    },\n    notifyBuildEnd: (platform) => {\n      instance.wss.apiServer.send({\n        event: Internal.EventTypes.BuildEnd,\n        platform,\n      });\n    },\n    broadcastToHmrClients: (event, platform, clientIds) => {\n      instance.wss.hmrServer.send(event, platform, clientIds);\n    },\n    broadcastToMessageClients: ({ method, params }) => {\n      instance.wss.messageServer.broadcast(method, params);\n    },\n  });\n\n  const devMiddleware = createDevMiddleware({\n    projectRoot: config.options.rootDir,\n    serverBaseUrl: `http://${config.options.host}:${config.options.port}`,\n    logger: instance.log,\n    unstable_experiments: {\n      enableNewDebugger: config.experiments?.experimentalDebugger,\n    },\n  });\n\n  // Register plugins\n  await instance.register(fastifySensible);\n  await instance.register(middie);\n  await instance.register(wssPlugin, {\n    options: {\n      ...config.options,\n      endpoints: devMiddleware.websocketEndpoints,\n    },\n    delegate,\n  });\n  await instance.register(multipartPlugin);\n  await instance.register(apiPlugin, {\n    delegate,\n    prefix: '/api',\n  });\n  await instance.register(compilerPlugin, {\n    delegate,\n  });\n\n  // TODO: devtoolsPlugin and the following deprecated remote debugger middlewares should be removed after\n  //  the new (experimental) debugger is stable AND the remote debugger is finally removed from the React Native core.\n  //  When that happens remember to remove @react-native-community/cli-server-api & @react-native-community/cli-debugger-ui\n  //  from the dependencies.\n  await instance.register(devtoolsPlugin, {\n    options: config.options,\n  });\n  instance.use('/debugger-ui', debuggerUIMiddleware());\n  instance.use('/open-url', openURLMiddleware);\n  instance.use(\n    '/open-stack-frame',\n    openStackFrameInEditorMiddleware({\n      watchFolders: [config.options.rootDir],\n    })\n  );\n\n  await instance.register(symbolicatePlugin, {\n    delegate,\n  });\n\n  // below is to prevent showing `GET 400 /favicon.ico`\n  // errors in console when requesting the bundle via browser\n  await instance.register(faviconPlugin);\n\n  instance.addHook('onSend', async (request, reply, payload) => {\n    reply.header('X-Content-Type-Options', 'nosniff');\n    reply.header('X-React-Native-Project-Root', config.options.rootDir);\n\n    const [pathname] = request.url.split('?');\n    if (pathname.endsWith('.map')) {\n      reply.header('Access-Control-Allow-Origin', 'devtools://devtools');\n    }\n\n    return payload;\n  });\n\n  // Register dev middleware\n  instance.use(devMiddleware.middleware);\n\n  // Register routes\n  instance.get('/', async () => delegate.messages.getHello());\n  instance.get('/status', async () => delegate.messages.getStatus());\n\n  /** Start the development server. */\n  async function start() {\n    await instance.listen({\n      port: config.options.port,\n      host: config.options.host,\n    });\n  }\n\n  /** Stop the development server. */\n  async function stop() {\n    await instance.close();\n  }\n\n  return {\n    start,\n    stop,\n    instance,\n  };\n}\n"],"mappings":"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","ignoreList":[]}