{"version":3,"sources":["../../../../src/webpack/plugins/AssetsResolverPlugin/AssetsResolverPlugin.ts"],"names":["AssetsResolverPlugin","constructor","config","extensions","ASSET_EXTENSIONS","scalableExtensions","SCALABLE_ASSETS","apply","compiler","assetResolver","AssetResolver","options","resolve","plugins","concat"],"mappings":";;;;;;;AAEA;;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,oBAAN,CAAoD;AACzD;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAASC,MAAT,EAA6C;AAAA;;AAAA,SAApCA,MAAoC,GAApCA,MAAoC;AACtD,SAAKA,MAAL,CAAYC,UAAZ,4BAAyB,KAAKD,MAAL,CAAYC,UAArC,yEAAmDC,iCAAnD;AACA,SAAKF,MAAL,CAAYG,kBAAZ,4BACE,KAAKH,MAAL,CAAYG,kBADd,yEACoCC,gCADpC;AAED;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,KAAK,CAACC,QAAD,EAA6B;AAChC,UAAMC,aAAa,GAAG,IAAIC,4BAAJ,CAAkB,KAAKR,MAAvB,EAA+BM,QAA/B,CAAtB;AAEAA,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,OAAjB,CAAyBC,OAAzB,GAAmC,CACjCL,QAAQ,CAACG,OAAT,CAAiBC,OAAjB,CAAyBC,OAAzB,IAAoC,EADH,EAEjCC,MAFiC,CAE1BL,aAF0B,CAAnC;AAGD;;AAvBwD","sourcesContent":["import webpack from 'webpack';\nimport { WebpackPlugin } from '../../../types';\nimport { ASSET_EXTENSIONS, SCALABLE_ASSETS } from '../../utils/assetExtensions';\nimport { AssetResolver, AssetResolverConfig } from './AssetResolver';\n\n/**\n * {@link AssetsResolverPlugin} configuration options.\n */\nexport interface AssetsResolverPluginConfig extends AssetResolverConfig {}\n\n/**\n * Plugin for resolving assets (images, audio, video etc) for React Native applications.\n *\n * Assets processing in React Native differs from Web, Node.js or other targets.\n * This plugin in combination with `@callstack/repack/assets-loader` allows\n * you to use assets in the same way as you would do when using Metro.\n *\n * @category Webpack Plugin\n */\nexport class AssetsResolverPlugin implements WebpackPlugin {\n  /**\n   * Constructs new `AssetsResolverPlugin`.\n   *\n   * @param config Plugin configuration options.\n   */\n  constructor(private config: AssetsResolverPluginConfig) {\n    this.config.extensions = this.config.extensions ?? ASSET_EXTENSIONS;\n    this.config.scalableExtensions =\n      this.config.scalableExtensions ?? SCALABLE_ASSETS;\n  }\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: webpack.Compiler) {\n    const assetResolver = new AssetResolver(this.config, compiler);\n\n    compiler.options.resolve.plugins = (\n      compiler.options.resolve.plugins || []\n    ).concat(assetResolver);\n  }\n}\n"],"file":"AssetsResolverPlugin.js"}