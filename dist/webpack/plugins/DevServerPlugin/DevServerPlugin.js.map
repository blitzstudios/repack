{"version":3,"sources":["../../../../src/webpack/plugins/DevServerPlugin/DevServerPlugin.ts"],"names":["DevServerPlugin","constructor","config","hmr","enabled","apply","compiler","logger","getInfrastructureLogger","platform","runAdbReverse","webpack","DefinePlugin","__PUBLIC_PORT__","JSON","stringify","port","HotModuleReplacementPlugin","ReactRefreshPlugin","overlay","getAdjustedEntry","entry","key","import","entryImports","refreshEntryIndex","findIndex","value","test","refreshEntry","splice","hmrClientIndex","options","getEntry","server","context","hooks","watchRun","tapPromise","DevServer","run","adbPath","process","env","ANDROID_HOME","command","error","message","split","warn","trim","info"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,eAAN,CAA+C;AACpD;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAASC,MAAT,EAAwC;AAAA;;AAAA,SAA/BA,MAA+B,GAA/BA,MAA+B;AACjD,SAAKA,MAAL,CAAYC,GAAZ,uCAAkB,KAAKD,MAAvB,iDAAkB,aAAaC,GAA/B,+DAAsC,IAAtC;AACA,SAAKD,MAAL,CAAYE,OAAZ,2BAAsB,KAAKF,MAAL,CAAYE,OAAlC,uEAA6C,IAA7C;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,KAAK,CAACC,QAAD,EAA6B;AAAA;;AAChC,UAAMC,MAAM,GAAGD,QAAQ,CAACE,uBAAT,CAAiC,iBAAjC,CAAf;;AACA,QAAI,KAAKN,MAAL,CAAYE,OAAZ,IAAuB,KAAKF,MAAL,CAAYO,QAAZ,KAAyB,SAApD,EAA+D;AAC7D,WAAKC,aAAL,CAAmBH,MAAnB;AACD;;AAED,QAAII,iBAAQC,YAAZ,CAAyB;AACvBC,MAAAA,eAAe,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKb,MAAL,CAAYc,IAA3B;AADM,KAAzB,EAEGX,KAFH,CAESC,QAFT;;AAIA,yBAAI,KAAKJ,MAAT,0CAAI,cAAaC,GAAjB,EAAsB;AACpB,UAAIQ,iBAAQM,0BAAZ,GAAyCZ,KAAzC,CAA+CC,QAA/C;AACA,UAAIY,kCAAJ,CAAuB;AACrBC,QAAAA,OAAO,EAAE;AADY,OAAvB,EAEGd,KAFH,CAESC,QAFT,EAFoB,CAMpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAMc,gBAAgB,GAAIC,KAAD,IAAkC;AACzD,aAAK,MAAMC,GAAX,IAAkBD,KAAlB,EAAyB;AACvB,gBAAM;AAAEE,YAAAA,MAAM,EAAEC,YAAY,GAAG;AAAzB,cAAgCH,KAAK,CAACC,GAAD,CAA3C;AACA,gBAAMG,iBAAiB,GAAGD,YAAY,CAACE,SAAb,CAAwBC,KAAD,IAC/C,wBAAwBC,IAAxB,CAA6BD,KAA7B,CADwB,CAA1B;;AAGA,cAAIF,iBAAiB,IAAI,CAAzB,EAA4B;AAC1B,kBAAMI,YAAY,GAAGL,YAAY,CAACC,iBAAD,CAAjC;AACAD,YAAAA,YAAY,CAACM,MAAb,CAAoBL,iBAApB,EAAuC,CAAvC;AAEA,kBAAMM,cAAc,GAAGP,YAAY,CAACE,SAAb,CAAwBC,KAAD,IAC5C,uBAAuBC,IAAvB,CAA4BD,KAA5B,CADqB,CAAvB;AAGAH,YAAAA,YAAY,CAACM,MAAb,CAAoBC,cAApB,EAAoC,CAApC,EAAuCF,YAAvC;AACD;;AACDR,UAAAA,KAAK,CAACC,GAAD,CAAL,CAAWC,MAAX,GAAoBC,YAApB;AACD;;AAED,eAAOH,KAAP;AACD,OAnBD;;AAqBA,UAAI,OAAOf,QAAQ,CAAC0B,OAAT,CAAiBX,KAAxB,KAAkC,UAAtC,EAAkD;AAChDf,QAAAA,QAAQ,CAAC0B,OAAT,CAAiBX,KAAjB,GAAyBD,gBAAgB,CAACd,QAAQ,CAAC0B,OAAT,CAAiBX,KAAlB,CAAzC;AACD,OAFD,MAEO;AACL,cAAMY,QAAQ,GAAG3B,QAAQ,CAAC0B,OAAT,CAAiBX,KAAlC;;AACAf,QAAAA,QAAQ,CAAC0B,OAAT,CAAiBX,KAAjB,GAAyB,YAAY;AACnC,gBAAMA,KAAK,GAAG,MAAMY,QAAQ,EAA5B;AACA,iBAAOb,gBAAgB,CAACC,KAAD,CAAvB;AACD,SAHD;AAID;AACF;;AAED,QAAIa,MAAJ;AACA,UAAMC,OAAO,GAAG7B,QAAQ,CAAC6B,OAAzB;AAEA7B,IAAAA,QAAQ,CAAC8B,KAAT,CAAeC,QAAf,CAAwBC,UAAxB,CAAmC,iBAAnC,EAAsD,YAAY;AAChE,UAAI,CAACJ,MAAD,IAAW,KAAKhC,MAAL,CAAYE,OAA3B,EAAoC;AAClC8B,QAAAA,MAAM,GAAG,IAAIK,iBAAJ,CAAc,EAAE,GAAG,KAAKrC,MAAV;AAAkBiC,UAAAA;AAAlB,SAAd,EAA2C7B,QAA3C,CAAT;AACA,cAAM4B,MAAM,CAACM,GAAP,EAAN;AACD;AACF,KALD;AAMD;;AAEO9B,EAAAA,aAAa,CAACH,MAAD,EAAwB;AAC3C;AACA,UAAMkC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAZ,GACX,GAAEF,OAAO,CAACC,GAAR,CAAYC,YAAa,qBADhB,GAEZ,KAFJ;AAGA,UAAMC,OAAO,GAAI,GAAEJ,OAAQ,gBAAe,KAAKvC,MAAL,CAAYc,IAAK,QAAO,KAAKd,MAAL,CAAYc,IAAK,EAAnF;AACA,6BAAK6B,OAAL,EAAeC,KAAD,IAAW;AACvB,UAAIA,KAAJ,EAAW;AACT;AACA,cAAMC,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoB,QAApB,EAA8B,CAA9B,KAAoCF,KAAK,CAACC,OAA1D;AACAxC,QAAAA,MAAM,CAAC0C,IAAP,CAAa,kBAAiBJ,OAAQ,MAAKE,OAAO,CAACG,IAAR,EAAe,EAA1D;AACD,OAJD,MAIO;AACL3C,QAAAA,MAAM,CAAC4C,IAAP,CAAa,qBAAoBN,OAAQ,EAAzC;AACD;AACF,KARD;AASD;;AAlGmD","sourcesContent":["import { exec } from 'child_process';\nimport webpack from 'webpack';\nimport ReactRefreshPlugin from '@pmmmwh/react-refresh-webpack-plugin';\nimport { WebpackLogger, WebpackPlugin } from '../../../types';\nimport { DevServer, DevServerConfig } from '../../../server';\n\ntype ExtractEntryStaticNormalized<E> = E extends () => Promise<infer U>\n  ? U\n  : E extends { [key: string]: any }\n  ? E\n  : never;\n\ntype EntryStaticNormalized =\n  ExtractEntryStaticNormalized<webpack.EntryNormalized>;\n\n/**\n * {@link DevServerPlugin} configuration options.\n */\nexport interface DevServerPluginConfig\n  extends Omit<DevServerConfig, 'context'> {\n  /** Whether to run development server or not. */\n  enabled?: boolean;\n  /**\n   * Whether Hot Module Replacement / React Refresh should be enabled. Defaults to `true`.\n   */\n  hmr?: boolean;\n}\n\n/**\n * Class for running development server that handles serving the built bundle, all assets as well as\n * providing Hot Module Replacement functionality.\n *\n * @category Webpack Plugin\n */\nexport class DevServerPlugin implements WebpackPlugin {\n  /**\n   * Constructs new `DevServerPlugin`.\n   *\n   * @param config Plugin configuration options.\n   */\n  constructor(private config: DevServerPluginConfig) {\n    this.config.hmr = this.config?.hmr ?? true;\n    this.config.enabled = this.config.enabled ?? true;\n  }\n\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: webpack.Compiler) {\n    const logger = compiler.getInfrastructureLogger('DevServerPlugin');\n    if (this.config.enabled && this.config.platform === 'android') {\n      this.runAdbReverse(logger);\n    }\n\n    new webpack.DefinePlugin({\n      __PUBLIC_PORT__: JSON.stringify(this.config.port),\n    }).apply(compiler);\n\n    if (this.config?.hmr) {\n      new webpack.HotModuleReplacementPlugin().apply(compiler);\n      new ReactRefreshPlugin({\n        overlay: false,\n      }).apply(compiler);\n\n      // To avoid the problem from https://github.com/facebook/react/issues/20377\n      // we need to move React Refresh entry that `ReactRefreshPlugin` injects to evaluate right\n      // before the `WebpackHMRClient` and after `InitializeCore` which sets up React DevTools.\n      // Thanks to that the initialization order is correct:\n      // 0. Polyfills\n      // 1. `InitilizeCore` -> React DevTools\n      // 2. Rect Refresh Entry\n      // 3. `WebpackHMRClient`\n      const getAdjustedEntry = (entry: EntryStaticNormalized) => {\n        for (const key in entry) {\n          const { import: entryImports = [] } = entry[key];\n          const refreshEntryIndex = entryImports.findIndex((value) =>\n            /ReactRefreshEntry\\.js/.test(value)\n          );\n          if (refreshEntryIndex >= 0) {\n            const refreshEntry = entryImports[refreshEntryIndex];\n            entryImports.splice(refreshEntryIndex, 1);\n\n            const hmrClientIndex = entryImports.findIndex((value) =>\n              /WebpackHMRClient\\.js/.test(value)\n            );\n            entryImports.splice(hmrClientIndex, 0, refreshEntry);\n          }\n          entry[key].import = entryImports;\n        }\n\n        return entry;\n      };\n\n      if (typeof compiler.options.entry !== 'function') {\n        compiler.options.entry = getAdjustedEntry(compiler.options.entry);\n      } else {\n        const getEntry = compiler.options.entry;\n        compiler.options.entry = async () => {\n          const entry = await getEntry();\n          return getAdjustedEntry(entry);\n        };\n      }\n    }\n\n    let server: DevServer | undefined;\n    const context = compiler.context;\n\n    compiler.hooks.watchRun.tapPromise('DevServerPlugin', async () => {\n      if (!server && this.config.enabled) {\n        server = new DevServer({ ...this.config, context }, compiler);\n        await server.run();\n      }\n    });\n  }\n\n  private runAdbReverse(logger: WebpackLogger) {\n    // TODO: add support for multiple devices\n    const adbPath = process.env.ANDROID_HOME\n      ? `${process.env.ANDROID_HOME}/platform-tools/adb`\n      : 'adb';\n    const command = `${adbPath} reverse tcp:${this.config.port} tcp:${this.config.port}`;\n    exec(command, (error) => {\n      if (error) {\n        // Get just the error message\n        const message = error.message.split('error:')[1] || error.message;\n        logger.warn(`Failed to run: ${command} - ${message.trim()}`);\n      } else {\n        logger.info(`Successfully run: ${command}`);\n      }\n    });\n  }\n}\n"],"file":"DevServerPlugin.js"}