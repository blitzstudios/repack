{"version":3,"sources":["../../../src/webpack/plugins/TargetPlugin.ts"],"names":["TargetPlugin","apply","compiler","options","target","output","chunkLoading","chunkFormat","globalObject","webpack","NormalModuleReplacementPlugin","resource","request","require","resolve","context","path","dirname","createData","runtime","LoadScriptRuntimeModule","prototype","generate","Template","asString","RuntimeGlobals","loadScript","indent","chunk","id","renderBootstrap","javascript","JavascriptModulesPlugin","args","result","call","afterStartup","push","hooks","environment","tap","BannerPlugin","raw","entryOnly","banner","chunkLoadingGlobal","compilation","afterProcessAssets","chunks","manifest","name","files","auxiliaryFiles","length","manifestFile","add","emitAsset","sources","RawSource","JSON","stringify"],"mappings":"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","sourcesContent":["import path from 'path';\nimport webpack from 'webpack';\nimport { getRepackBootstrap } from '../../client/setup/inline/getRepackBootstrap';\nimport { WebpackPlugin } from '../../types';\n\n/**\n * Plugin for tweaking the JavaScript runtime code to account for React Native environment.\n *\n * Globally available APIs differ with React Native and other target's like Web, so there are some\n * tweaks necessary to make the final bundle runnable inside React Native's JavaScript VM.\n *\n * @category Webpack Plugin\n */\nexport class TargetPlugin implements WebpackPlugin {\n  /**\n   * Apply the plugin.\n   *\n   * @param compiler Webpack compiler instance.\n   */\n  apply(compiler: webpack.Compiler) {\n    compiler.options.target = false;\n    compiler.options.output.chunkLoading = 'jsonp';\n    compiler.options.output.chunkFormat = 'array-push';\n    compiler.options.output.globalObject = 'self';\n\n    new webpack.NormalModuleReplacementPlugin(\n      /react-native([/\\\\]+)Libraries([/\\\\]+)Utilities([/\\\\]+)HMRClient\\.js$/,\n      function (resource) {\n        const request = require.resolve(\n          '../../client/setup/modules/DevServerClient'\n        );\n        const context = path.dirname(request);\n        resource.request = request;\n        resource.context = context;\n        resource.createData.resource = request;\n        resource.createData.context = context;\n      }\n    ).apply(compiler);\n\n    // Overwrite `LoadScriptRuntimeModule.generate` to avoid shipping DOM specific\n    // code in the bundle. `__webpack_require__.l` implementation is provided\n    // in `../../../runtime/setupChunkLoader.ts`.\n    webpack.runtime.LoadScriptRuntimeModule.prototype.generate = function () {\n      return webpack.Template.asString([\n        `${webpack.RuntimeGlobals.loadScript} = function(u, c, n, i) {`,\n        webpack.Template.indent(\n          `return __repack__.loadChunk.call(this, u, c, n, i, \"${this.chunk.id}\");`\n        ),\n        '};',\n      ]);\n    };\n\n    const renderBootstrap =\n      webpack.javascript.JavascriptModulesPlugin.prototype.renderBootstrap;\n    webpack.javascript.JavascriptModulesPlugin.prototype.renderBootstrap =\n      function (...args) {\n        const result = renderBootstrap.call(this, ...args);\n        result.afterStartup.push('');\n        result.afterStartup.push('// Re.Pack after startup');\n        result.afterStartup.push(\n          `__repack__.loadChunkCallback.push(\"${args[0].chunk.id}\")`\n        );\n        return result;\n      };\n\n    compiler.hooks.environment.tap('TargetPlugin', () => {\n      new webpack.BannerPlugin({\n        raw: true,\n        entryOnly: true,\n        banner: getRepackBootstrap({\n          chunkLoadingGlobal: compiler.options.output.chunkLoadingGlobal!,\n        }),\n      }).apply(compiler);\n    });\n\n    compiler.hooks.compilation.tap('TargetPlugin', (compilation) => {\n      compilation.hooks.afterProcessAssets.tap('TargetPlugin', () => {\n        for (const chunk of compilation.chunks) {\n          const manifest = {\n            id: chunk.id,\n            name: chunk.name,\n            files: [...chunk.files],\n            auxiliaryFiles: [...chunk.auxiliaryFiles],\n          };\n\n          if (manifest.files.length) {\n            const manifestFile = `${manifest.files[0]}.json`;\n            chunk.auxiliaryFiles.add(manifestFile);\n            compilation.emitAsset(\n              manifestFile,\n              new webpack.sources.RawSource(JSON.stringify(manifest))\n            );\n          }\n        }\n      });\n    });\n  }\n}\n"],"file":"TargetPlugin.js"}