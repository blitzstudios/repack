{"version":3,"sources":["../../../../src/webpack/utils/env/getDevServerOptions.ts"],"names":["DEFAULT_PORT","getDevServerOptions","options","fallback","port","cliOptions","arguments","enabled","host","https","cert","key","start","hmr"],"mappings":";;;;;;;;AACA;;AACA;;AAEA;AACO,MAAMA,YAAY,GAAG,IAArB;;;AAQA,SAASC,mBAAT,CACLC,OAAiD,GAAG;AAClDC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAEJ;AAAR;AADwC,CAD/C,EAIa;AAClB,QAAMK,UAAU,GAAG,uCAAnB;;AACA,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO;AACLD,MAAAA,IAAI,EAAEJ,YADD;AAEL,SAAG,oDAAuBE,OAAvB;AAFE,KAAP;AAID;;AAED,MAAI,YAAYG,UAAU,CAACC,SAA3B,EAAsC;AACpC,WAAO;AACLF,MAAAA,IAAI,EAAEJ,YADD;AAELO,MAAAA,OAAO,EAAE,KAFJ;AAGL,SAAG,oDAAuBL,OAAvB;AAHE,KAAP;AAKD,GAND,MAMO;AAAA;;AACL,UAAM;AAAEM,MAAAA,IAAF;AAAQJ,MAAAA,IAAR;AAAcK,MAAAA,KAAd;AAAqBC,MAAAA,IAArB;AAA2BC,MAAAA;AAA3B,QAAmCN,UAAU,CAACC,SAAX,CAAqBM,KAA9D;AACA,WAAO;AACLL,MAAAA,OAAO,EAAE,IADJ;AAELM,MAAAA,GAAG,2BAAE,oDAAuBX,OAAvB,EAAgCW,GAAlC,yEAAyC,IAFvC;AAGLL,MAAAA,IAAI,EAAEA,IAAI,IAAI,oDAAuBN,OAAvB,EAAgCM,IAHzC;AAILJ,MAAAA,IAAI,UAAEA,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAU,oDAAuBF,OAAvB,EAAgCE,IAA1C,uCAAkDJ,YAJjD;AAKLS,MAAAA,KALK;AAMLC,MAAAA,IANK;AAOLC,MAAAA;AAPK,KAAP;AASD;AACF","sourcesContent":["import { DevServerOptions, Fallback } from '../../../types';\nimport { getFallbackFromOptions } from './internal/getFallbackFromOptions';\nimport { parseCliOptions } from './internal/parseCliOptions';\n\n/** Default development server (proxy) port. */\nexport const DEFAULT_PORT = 8081;\n\ntype DeepOptional<T> = T extends { [key: string]: any }\n  ? {\n      [K in keyof T]?: DeepOptional<T[K]>;\n    }\n  : T | undefined;\n\nexport function getDevServerOptions(\n  options: Fallback<DeepOptional<DevServerOptions>> = {\n    fallback: { port: DEFAULT_PORT },\n  }\n): DevServerOptions {\n  const cliOptions = parseCliOptions();\n  if (!cliOptions) {\n    return {\n      port: DEFAULT_PORT,\n      ...getFallbackFromOptions(options),\n    };\n  }\n\n  if ('bundle' in cliOptions.arguments) {\n    return {\n      port: DEFAULT_PORT,\n      enabled: false,\n      ...getFallbackFromOptions(options),\n    };\n  } else {\n    const { host, port, https, cert, key } = cliOptions.arguments.start;\n    return {\n      enabled: true,\n      hmr: getFallbackFromOptions(options).hmr ?? true,\n      host: host || getFallbackFromOptions(options).host,\n      port: port ?? getFallbackFromOptions(options).port ?? DEFAULT_PORT,\n      https,\n      cert,\n      key,\n    };\n  }\n}\n"],"file":"getDevServerOptions.js"}