{"version":3,"sources":["../../../../src/webpack/utils/env/getEntry.ts"],"names":["getEntry","options","fallback","cliOptions","arguments","entryFile","bundle","path","isAbsolute","startsWith"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;AAEO,SAASA,QAAT,CACLC,OAAyB,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CADvB,EAEG;AACR,QAAMC,UAAU,GAAG,uCAAnB;;AACA,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,oDAAuBF,OAAvB,CAAP;AACD;;AAED,MAAI,YAAYE,UAAU,CAACC,SAA3B,EAAsC;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAAgBF,UAAU,CAACC,SAAX,CAAqBE,MAA3C;AACA,WAAOC,cAAKC,UAAL,CAAgBH,SAAhB,KAA8BA,SAAS,CAACI,UAAV,CAAqB,IAArB,CAA9B,GACHJ,SADG,GAEF,KAAIA,SAAU,EAFnB;AAGD,GALD,MAKO;AACL,WAAO,oDAAuBJ,OAAvB,CAAP;AACD;AACF","sourcesContent":["import path from 'path';\nimport { Fallback } from '../../../types';\nimport { getFallbackFromOptions } from './internal/getFallbackFromOptions';\nimport { parseCliOptions } from './internal/parseCliOptions';\n\nexport function getEntry(\n  options: Fallback<string> = { fallback: './index.js' }\n): string {\n  const cliOptions = parseCliOptions();\n  if (!cliOptions) {\n    return getFallbackFromOptions(options);\n  }\n\n  if ('bundle' in cliOptions.arguments) {\n    const { entryFile } = cliOptions.arguments.bundle;\n    return path.isAbsolute(entryFile) || entryFile.startsWith('./')\n      ? entryFile\n      : `./${entryFile}`;\n  } else {\n    return getFallbackFromOptions(options);\n  }\n}\n"],"file":"getEntry.js"}