{"version":3,"sources":["../../../../src/webpack/utils/env/getMode.ts"],"names":["getMode","options","fallback","cliOptions","arguments","bundle","dev"],"mappings":";;;;;;;AACA;;AACA;;AAIO,SAASA,OAAT,CACLC,OAAuB,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CADrB,EAEC;AACN,QAAMC,UAAU,GAAG,uCAAnB;;AACA,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,oDAAuBF,OAAvB,CAAP;AACD;;AAED,MAAI,YAAYE,UAAU,CAACC,SAA3B,EAAsC;AACpC,WAAOD,UAAU,CAACC,SAAX,CAAqBC,MAArB,CAA4BC,GAA5B,GAAkC,aAAlC,GAAkD,YAAzD;AACD,GAFD,MAEO;AACL,WAAO,aAAP;AACD;AACF","sourcesContent":["import { Fallback } from '../../../types';\nimport { getFallbackFromOptions } from './internal/getFallbackFromOptions';\nimport { parseCliOptions } from './internal/parseCliOptions';\n\nexport type Mode = 'production' | 'development';\n\nexport function getMode(\n  options: Fallback<Mode> = { fallback: 'production' }\n): Mode {\n  const cliOptions = parseCliOptions();\n  if (!cliOptions) {\n    return getFallbackFromOptions(options);\n  }\n\n  if ('bundle' in cliOptions.arguments) {\n    return cliOptions.arguments.bundle.dev ? 'development' : 'production';\n  } else {\n    return 'development';\n  }\n}\n"],"file":"getMode.js"}