{"version":3,"sources":["../../../src/webpack/utils/getResolveOptions.ts"],"names":["getResolveOptions","platform","mainFields","aliasFields","extensions"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CAA2BC,QAA3B,EAA6C;AAClD,SAAO;AACL;AACJ;AACA;AACA;AACIC,IAAAA,UAAU,EAAE,CAAC,cAAD,EAAiB,SAAjB,EAA4B,MAA5B,CALP;AAMLC,IAAAA,WAAW,EAAE,CAAC,cAAD,EAAiB,SAAjB,EAA4B,MAA5B,CANR;AAOLC,IAAAA,UAAU,EAAE,CACT,IAAGH,QAAS,KADH,EAET,IAAGA,QAAS,KAFH,EAGT,IAAGA,QAAS,MAHH,EAIT,IAAGA,QAAS,MAJH,EAKV,YALU,EAMV,YANU,EAOV,aAPU,EAQV,aARU,EASV,KATU,EAUV,KAVU,EAWV,MAXU,EAYV,MAZU,EAaV,OAbU;AAPP,GAAP;AAuBD","sourcesContent":["/**\n * Get Webpack's resolve options to properly resolve JavaScript files\n * that contain `<platform>` or `native` (eg `file.ios.js`) suffixes as well as `react-native` field\n * in dependencies' `package.json`.\n *\n * @param platform Target application platform.\n * @returns Webpack's resolve options.\n *\n * @category Webpack util\n */\nexport function getResolveOptions(platform: string) {\n  return {\n    /**\n     * Match what React Native packager supports.\n     * First entry takes precedence.\n     */\n    mainFields: ['react-native', 'browser', 'main'],\n    aliasFields: ['react-native', 'browser', 'main'],\n    extensions: [\n      `.${platform}.ts`,\n      `.${platform}.js`,\n      `.${platform}.tsx`,\n      `.${platform}.jsx`,\n      '.native.ts',\n      '.native.js',\n      '.native.tsx',\n      '.native.jsx',\n      '.ts',\n      '.js',\n      '.tsx',\n      '.jsx',\n      '.json',\n    ],\n  };\n}\n"],"file":"getResolveOptions.js"}