{"version":3,"sources":["../../../src/webpack/loaders/assetsLoader.ts"],"names":["URIRegEx","getOptions","loaderContext","options","utils","type","required","properties","platform","scalableAssetExtensions","inline","devServerEnabled","publicPath","name","raw","reactNativeAssetsLoader","cacheable","callback","async","logger","getLogger","rootContext","debug","resourcePath","pathSeparatorPattern","RegExp","path","sep","dirname","relativeDirname","relative","replace","extname","assetsPath","suffix","filename","basename","normalizedName","length","toLowerCase","files","Promise","resolve","reject","fs","readdir","error","results","filter","result","scales","AssetResolver","collectScales","scaleKeys","Object","keys","sort","a","b","parseFloat","scaleNumbers","map","scale","assets","all","scaleFilePath","join","addDependency","readFile","destination","testXml","testMP4","testImages","testFonts","test","indexOf","Error","content","forEach","asset","emitFile","JSON","stringify","inlineAssetLoader","hashes","hasha","toString","algorithm","info","match","Number","isFinite","width","height","e","decodeDataUriContent","encoding","isBase64","Buffer","from","decodeURIComponent","resource","ext","exec","resultMimeType","mimeType","parameters","encodedContent","undefined","mimeTypes","lookup","finalEncodedContent","equals","encodedSource","uri"],"mappings":"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","sourcesContent":["import path from 'path';\nimport utils, { LoaderContext } from 'loader-utils';\nimport { validate as validateSchema } from 'schema-utils';\nimport { imageSize } from 'image-size';\nimport dedent from 'dedent';\nimport hasha from 'hasha';\nimport mimeTypes from 'mime-types';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport { ISizeCalculationResult } from 'image-size/dist/types/interface';\nimport { AssetResolver } from '../plugins/AssetsResolverPlugin/AssetResolver';\n\nconst URIRegEx = /^data:([^;,]+)?((?:;[^;,]+)*?)(?:;(base64))?,(.*)$/i;\n\ninterface Options {\n  platform: string;\n  scalableAssetExtensions: string[];\n  devServerEnabled?: boolean;\n  inline?: boolean;\n  publicPath?: string;\n}\n\nfunction getOptions(loaderContext: LoaderContext): Options {\n  const options = utils.getOptions(loaderContext) || {};\n\n  validateSchema(\n    {\n      type: 'object',\n      required: ['platform', 'scalableAssetExtensions'],\n      properties: {\n        platform: {\n          type: 'string',\n        },\n        scalableAssetExtensions: {\n          type: 'array',\n        },\n        inline: { type: 'boolean' },\n        devServerEnabled: { type: 'boolean' },\n        publicPath: { type: 'string' },\n      },\n    },\n    options,\n    { name: 'reactNativeAssetsLoader' }\n  );\n\n  return options as unknown as Options;\n}\n\nexport const raw = true;\n\nexport default async function reactNativeAssetsLoader(this: LoaderContext) {\n  this.cacheable();\n\n  const callback = this.async();\n  const logger = this.getLogger('reactNativeAssetsLoader');\n  const rootContext = this.rootContext;\n\n  logger.debug('Processing:', this.resourcePath);\n\n  try {\n    const options = getOptions(this);\n    const pathSeparatorPattern = new RegExp(`\\\\${path.sep}`, 'g');\n    const resourcePath = this.resourcePath;\n    const dirname = path.dirname(resourcePath);\n    // Relative path to rootContext without any ../ due to https://github.com/callstack/haul/issues/474\n    // Assets from from outside of rootContext, should still be placed inside bundle output directory.\n    // Example:\n    //   resourcePath    = monorepo/node_modules/my-module/image.png\n    //   dirname         = monorepo/node_modules/my-module\n    //   rootContext     = monorepo/packages/my-app/\n    //   relativeDirname = ../../node_modules/my-module (original)\n    // So when we calculate destination for the asset for iOS ('assets' + relativeDirname + filename),\n    // it will end up outside of `assets` directory, so we have to make sure it's:\n    //   relativeDirname = node_modules/my-module (tweaked)\n    const relativeDirname = path\n      .relative(rootContext, dirname)\n      .replace(new RegExp(`^[\\\\.\\\\${path.sep}]+`), '');\n    const type = path.extname(resourcePath).replace(/^\\./, '');\n    const assetsPath = 'assets';\n    const suffix = `(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${options.platform}|native))?\\\\.${type}$`;\n    const filename = path\n      .basename(resourcePath)\n      .replace(new RegExp(suffix), '');\n    // Name with embedded relative dirname eg `node_modules_reactnative_libraries_newappscreen_components_logo.png`\n    const normalizedName = `${(relativeDirname.length === 0\n      ? filename\n      : `${relativeDirname.replace(pathSeparatorPattern, '_')}_${filename}`\n    )\n      .toLowerCase()\n      .replace(/[^a-z0-9_]/g, '')}.${type}`;\n\n    const files = await new Promise<string[]>((resolve, reject) =>\n      this.fs.readdir(dirname, (error, results) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(\n            (results as Array<any> | undefined)?.filter(\n              (result) => typeof result === 'string'\n            ) ?? []\n          );\n        }\n      })\n    );\n    const scales = AssetResolver.collectScales(\n      options.scalableAssetExtensions,\n      files,\n      {\n        name: filename,\n        type,\n        platform: options.platform,\n      }\n    );\n\n    const scaleKeys = Object.keys(scales).sort(\n      (a, b) =>\n        parseFloat(a.replace(/[^\\d.]/g, '')) -\n        parseFloat(b.replace(/[^\\d.]/g, ''))\n    );\n\n    const scaleNumbers = scaleKeys.map((scale) =>\n      parseFloat(scale.replace(/[^\\d.]/g, ''))\n    );\n    const assets = await Promise.all(\n      scaleKeys.map(\n        (\n          scale\n        ): Promise<{\n          destination: string;\n          content: string | Buffer | undefined;\n        }> => {\n          const scaleFilePath = path.join(dirname, scales[scale].name);\n          this.addDependency(scaleFilePath);\n\n          return new Promise((resolve, reject) =>\n            this.fs.readFile(scaleFilePath, (error, results) => {\n              if (error) {\n                reject(error);\n              } else {\n                let destination;\n\n                if (\n                  !options.devServerEnabled &&\n                  options.platform === 'android'\n                ) {\n                  const testXml = /\\.(xml)$/;\n                  const testMP4 = /\\.(mp4)$/;\n                  const testImages = /\\.(png|jpg|gif|webp)$/;\n                  const testFonts = /\\.(ttf|otf|ttc)$/;\n\n                  // found font family\n                  if (\n                    testXml.test(normalizedName) &&\n                    results?.indexOf('font-family') !== -1\n                  ) {\n                    destination = 'font';\n                  } else if (testFonts.test(normalizedName)) {\n                    // font extensions\n                    destination = 'font';\n                  } else if (testMP4.test(normalizedName)) {\n                    // video files extensions\n                    destination = 'raw';\n                  } else if (\n                    testImages.test(normalizedName) ||\n                    testXml.test(normalizedName)\n                  ) {\n                    // images extensions\n                    switch (scale) {\n                      case '@0.75x':\n                        destination = 'drawable-ldpi';\n                        break;\n                      case '@1x':\n                        destination = 'drawable-mdpi';\n                        break;\n                      case '@1.5x':\n                        destination = 'drawable-hdpi';\n                        break;\n                      case '@2x':\n                        destination = 'drawable-xhdpi';\n                        break;\n                      case '@3x':\n                        destination = 'drawable-xxhdpi';\n                        break;\n                      case '@4x':\n                        destination = 'drawable-xxxhdpi';\n                        break;\n                      default:\n                        throw new Error(\n                          `Unknown scale ${scale} for ${scaleFilePath}`\n                        );\n                    }\n                  } else {\n                    // everything else is going to RAW\n                    destination = 'raw';\n                  }\n\n                  destination = path.join(destination, normalizedName);\n                } else {\n                  const name = `${filename}${\n                    scale === '@1x' ? '' : scale\n                  }.${type}`;\n                  destination = path.join(assetsPath, relativeDirname, name);\n                }\n\n                resolve({\n                  destination,\n                  content: results,\n                });\n              }\n            })\n          );\n        }\n      )\n    );\n\n    assets.forEach((asset) => {\n      if (options.inline) {\n        return;\n      }\n      const { destination, content } = asset;\n\n      logger.debug('Asset emitted:', destination);\n      // Assets are emitted relatively to `output.path`.\n      this.emitFile(destination, content ?? '');\n    });\n\n    if (options.inline) {\n      const { content } = assets[assets.length - 1];\n      if (content) {\n        callback?.(\n          null,\n          dedent`\n        module.exports = ${JSON.stringify(\n          inlineAssetLoader(content, resourcePath)\n        )}\n      `\n        );\n      }\n      return;\n    }\n\n    let publicPath = path\n      .join(assetsPath, relativeDirname)\n      .replace(pathSeparatorPattern, '/');\n\n    if (options.publicPath) {\n      publicPath = path.join(options.publicPath, publicPath);\n    }\n\n    const hashes = await Promise.all(\n      assets.map((asset) =>\n        hasha.async(asset.content?.toString() ?? asset.destination, {\n          algorithm: 'md5',\n        })\n      )\n    );\n\n    let info: ISizeCalculationResult | undefined;\n\n    try {\n      info = imageSize(this.resourcePath);\n\n      const match = path\n        .basename(this.resourcePath)\n        .match(new RegExp(`^${escapeStringRegexp(filename)}${suffix}`));\n\n      if (match?.[1]) {\n        const scale = Number(match[1].replace(/[^\\d.]/g, ''));\n\n        if (typeof scale === 'number' && Number.isFinite(scale)) {\n          info.width && (info.width /= scale);\n          info.height && (info.height /= scale);\n        }\n      }\n    } catch (e) {\n      // Asset is not an image\n    }\n\n    logger.debug('Asset processed:', {\n      resourcePath,\n      platform: options.platform,\n      rootContext,\n      relativeDirname,\n      type,\n      assetsPath,\n      filename,\n      normalizedName,\n      scales,\n      assets: assets.map((asset) => asset.destination),\n      publicPath,\n      width: info?.width,\n      height: info?.height,\n    });\n\n    callback?.(\n      null,\n      dedent`\n      var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\n      module.exports = AssetRegistry.registerAsset({\n        __packager_asset: true,\n        scales: ${JSON.stringify(scaleNumbers)},\n        name: ${JSON.stringify(filename)},\n        type: ${JSON.stringify(type)},\n        hash: ${JSON.stringify(hashes.join())},\n        httpServerLocation: ${JSON.stringify(publicPath)},\n        ${\n          options.devServerEnabled\n            ? `fileSystemLocation: ${JSON.stringify(dirname)},`\n            : ''\n        }\n        ${info ? `height: ${info.height},` : ''}\n        ${info ? `width: ${info.width},` : ''}\n      });\n      `\n    );\n  } catch (error) {\n    callback?.(error as Error);\n  }\n}\n\nconst decodeDataUriContent = (encoding: string, content: string) => {\n  const isBase64 = encoding === 'base64';\n  return isBase64\n    ? Buffer.from(content, 'base64')\n    : Buffer.from(decodeURIComponent(content), 'ascii');\n};\n\nfunction inlineAssetLoader(content: string | Buffer, resource: string) {\n  const ext = path.extname(resource);\n  const match = URIRegEx.exec(resource);\n  let resultMimeType: string | boolean;\n  let mimeType: string;\n  let parameters: string;\n  let encodedContent: string;\n  let encoding: boolean | string;\n  if (match) {\n    mimeType = match[1] || '';\n    parameters = match[2] || '';\n    encoding = match[3] || false;\n    encodedContent = match[4] || '';\n  }\n\n  if (mimeType! !== undefined) {\n    resultMimeType = mimeType + parameters!;\n  } else if (ext) {\n    resultMimeType = mimeTypes.lookup(ext);\n  }\n\n  if (typeof resultMimeType! !== 'string') {\n    throw new Error(\n      \"DataUrl can't be generated automatically, \" +\n        `because there is no mimetype for \"${ext}\" in mimetype database. ` +\n        'Either pass a mimetype via \"generator.mimetype\" or ' +\n        'use type: \"asset/resource\" to create a resource file instead of a DataUrl'\n    );\n  }\n\n  let finalEncodedContent: string;\n  if (\n    encoding! === 'base64' &&\n    decodeDataUriContent(encoding, encodedContent!).equals(\n      content instanceof Buffer\n        ? content\n        : decodeDataUriContent(encoding, content)\n    )\n  ) {\n    finalEncodedContent = encodedContent!;\n  } else {\n    finalEncodedContent =\n      content instanceof Buffer ? content.toString('base64') : content;\n  }\n\n  const encodedSource = `data:${resultMimeType};base64,${finalEncodedContent}`;\n  return {\n    uri: encodedSource,\n  };\n}\n"],"file":"assetsLoader.js"}