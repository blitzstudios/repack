{"version":3,"file":"assetsLoader.js","names":["_path","_interopRequireDefault","require","_AssetResolver","_options","_extractAssets","_inlineAssets","_convertToRemoteAssets","_utils","obj","__esModule","default","raw","exports","testXml","testMP4","testImages","testFonts","repackAssetsLoader","cacheable","callback","async","logger","getLogger","rootContext","debug","resourcePath","options","getOptions","pathSeparatorRegexp","RegExp","path","sep","resourceAbsoluteDirname","dirname","resourceDirname","relative","replace","resourceExtensionType","extname","suffixPattern","platform","resourceFilename","basename","resourceNormalizedFilename","length","toLowerCase","assetsDirname","remoteAssetsDirname","files","getFilesInDirectory","fs","scales","AssetResolver","collectScales","scalableAssetExtensions","name","type","scaleKeys","Object","keys","sort","a","b","getScaleNumber","scaleKey","filenameWithScale","join","addDependency","assets","Promise","all","map","content","readFile","destination","devServerEnabled","remote","enabled","test","indexOf","Error","filename","scale","asset","inline","inlineAssets","emitFile","convertToRemoteAssets","remotePublicPath","publicPath","extractAssets","error"],"sources":["../../../../src/webpack/loaders/assetsLoader/assetsLoader.ts"],"sourcesContent":["import path from 'path';\nimport { LoaderContext } from 'webpack';\nimport { AssetResolver } from '../../plugins/AssetsResolverPlugin/AssetResolver';\nimport { getOptions, Options } from './options';\nimport { extractAssets } from './extractAssets';\nimport { inlineAssets } from './inlineAssets';\nimport { convertToRemoteAssets } from './convertToRemoteAssets';\nimport { getFilesInDirectory, getScaleNumber, readFile } from './utils';\nimport type { Asset } from './types';\n\nexport const raw = true;\n\nconst testXml = /\\.(xml)$/;\nconst testMP4 = /\\.(mp4)$/;\nconst testImages = /\\.(png|jpg|gif|webp)$/;\nconst testFonts = /\\.(ttf|otf|ttc)$/;\n\nexport default async function repackAssetsLoader(this: LoaderContext<Options>) {\n  this.cacheable();\n\n  const callback = this.async();\n  const logger = this.getLogger('repackAssetsLoader');\n  const rootContext = this.rootContext;\n\n  logger.debug(`Processing asset ${this.resourcePath}`);\n\n  try {\n    const options = getOptions(this);\n    const pathSeparatorRegexp = new RegExp(`\\\\${path.sep}`, 'g');\n    const resourcePath = this.resourcePath;\n    const resourceAbsoluteDirname = path.dirname(resourcePath);\n    // Relative path to rootContext without any ../ due to https://github.com/callstack/haul/issues/474\n    // Assets from from outside of rootContext, should still be placed inside bundle output directory.\n    // Example:\n    //   resourcePath    = <abs>/monorepo/node_modules/my-module/image.png\n    //   dirname         = <abs>/monorepo/node_modules/my-module\n    //   rootContext     = <abs>/monorepo/packages/my-app/\n    //   resourceDirname = ../../node_modules/my-module (original)\n    // So when we calculate destination for the asset for iOS (assetsDirname + resourceDirname + filename),\n    // it will end up outside of `assets` directory, so we have to make sure it's:\n    //   resourceDirname = node_modules/my-module (tweaked)\n    const resourceDirname = path\n      .relative(rootContext, resourceAbsoluteDirname)\n      .replace(new RegExp(`^[\\\\.\\\\${path.sep}]+`), '');\n    const resourceExtensionType = path.extname(resourcePath).replace(/^\\./, '');\n    const suffixPattern = `(@\\\\d+(\\\\.\\\\d+)?x)?(\\\\.(${options.platform}|native))?\\\\.${resourceExtensionType}$`;\n    const resourceFilename = path\n      .basename(resourcePath)\n      .replace(new RegExp(suffixPattern), '');\n    // Name with embedded resourceDirname eg `node_modules_reactnative_libraries_newappscreen_components_logo.png`\n    const resourceNormalizedFilename = `${(resourceDirname.length === 0\n      ? resourceFilename\n      : `${resourceDirname.replace(\n          pathSeparatorRegexp,\n          '_'\n        )}_${resourceFilename}`\n    )\n      .toLowerCase()\n      .replace(/[^a-z0-9_]/g, '')}.${resourceExtensionType}`;\n\n    const assetsDirname = 'assets';\n    const remoteAssetsDirname = 'remote-assets';\n\n    const files = await getFilesInDirectory(resourceAbsoluteDirname, this.fs);\n    const scales = AssetResolver.collectScales(\n      options.scalableAssetExtensions,\n      files,\n      {\n        name: resourceFilename,\n        type: resourceExtensionType,\n        platform: options.platform,\n      }\n    );\n\n    const scaleKeys = Object.keys(scales).sort(\n      (a, b) => getScaleNumber(a) - getScaleNumber(b)\n    );\n\n    for (const scaleKey of scaleKeys) {\n      const filenameWithScale = path.join(\n        resourceAbsoluteDirname,\n        scales[scaleKey].name\n      );\n      this.addDependency(filenameWithScale);\n    }\n\n    const assets = await Promise.all<Asset>(\n      scaleKeys.map(async (scaleKey) => {\n        const filenameWithScale = path.join(\n          resourceAbsoluteDirname,\n          scales[scaleKey].name\n        );\n\n        const content = await readFile(filenameWithScale, this.fs);\n\n        let destination;\n\n        if (\n          !options.devServerEnabled &&\n          !options.remote?.enabled &&\n          options.platform === 'android'\n        ) {\n          // found font family\n          if (\n            testXml.test(resourceNormalizedFilename) &&\n            content?.indexOf('font-family') !== -1\n          ) {\n            destination = 'font';\n          } else if (testFonts.test(resourceNormalizedFilename)) {\n            // font extensions\n            destination = 'font';\n          } else if (testMP4.test(resourceNormalizedFilename)) {\n            // video files extensions\n            destination = 'raw';\n          } else if (\n            testImages.test(resourceNormalizedFilename) ||\n            testXml.test(resourceNormalizedFilename)\n          ) {\n            // images extensions\n            switch (scaleKey) {\n              case '@0.75x':\n                destination = 'drawable-ldpi';\n                break;\n              case '@1x':\n                destination = 'drawable-mdpi';\n                break;\n              case '@1.5x':\n                destination = 'drawable-hdpi';\n                break;\n              case '@2x':\n                destination = 'drawable-xhdpi';\n                break;\n              case '@3x':\n                destination = 'drawable-xxhdpi';\n                break;\n              case '@4x':\n                destination = 'drawable-xxxhdpi';\n                break;\n              default:\n                throw new Error(\n                  `Unknown scale ${scaleKey} for ${filenameWithScale}`\n                );\n            }\n          } else {\n            // everything else is going to RAW\n            destination = 'raw';\n          }\n\n          destination = path.join(destination, resourceNormalizedFilename);\n        } else {\n          const name = `${resourceFilename}${\n            scaleKey === '@1x' ? '' : scaleKey\n          }.${resourceExtensionType}`;\n          destination = path.join(\n            options.remote?.enabled ? remoteAssetsDirname : '',\n            assetsDirname,\n            resourceDirname,\n            name\n          );\n        }\n\n        return {\n          filename: destination,\n          content,\n          scaleKey,\n          scale: getScaleNumber(scaleKey),\n        };\n      })\n    );\n\n    logger.debug(`Resolved request ${this.resourcePath}`, {\n      platform: options.platform,\n      rootContext,\n      resourceNormalizedFilename,\n      resourceFilename,\n      resourceDirname,\n      resourceAbsoluteDirname,\n      resourceExtensionType,\n      scales,\n      assets: assets.map((asset) => ({\n        ...asset,\n        content: `size=${asset.content?.length} type=${typeof asset.content}`,\n      })),\n    });\n\n    if (options.inline) {\n      logger.debug(`Inlining assets for request ${resourcePath}`);\n      callback?.(\n        null,\n        inlineAssets({ assets, resourcePath, resourceFilename, suffixPattern })\n      );\n    } else {\n      for (const asset of assets) {\n        const { filename, content } = asset;\n        logger.debug(`Emitting asset ${filename} for request ${resourcePath}`);\n\n        // Assets are emitted relatively to `output.path`.\n        this.emitFile(filename, content ?? '');\n      }\n\n      if (options.remote?.enabled) {\n        callback?.(\n          null,\n          convertToRemoteAssets({\n            assets,\n            assetsDirname,\n            remotePublicPath: options.remote.publicPath,\n            resourceDirname,\n            resourceExtensionType,\n            resourceFilename,\n            resourcePath,\n            suffixPattern,\n            pathSeparatorRegexp,\n          })\n        );\n      } else {\n        callback?.(\n          null,\n          await extractAssets(\n            {\n              resourcePath,\n              resourceDirname,\n              resourceFilename,\n              resourceExtensionType,\n              assets,\n              suffixPattern,\n              assetsDirname,\n              pathSeparatorRegexp,\n              publicPath: options.publicPath,\n              devServerEnabled: options.devServerEnabled,\n            },\n            logger\n          )\n        );\n      }\n    }\n  } catch (error) {\n    callback?.(error as Error);\n  }\n}\n"],"mappings":"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","ignoreList":[]}