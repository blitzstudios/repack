{"version":3,"sources":["../../../src/server/hermes/InspectorProxy.ts"],"names":["WS_DEVICE_URL","WS_DEBUGGER_URL","InspectorProxy","WebSocketServer","constructor","fastify","config","Map","serverHost","host","port","setup","onSend","_request","reply","_payload","done","headers","Connection","get","Browser","pageListHandler","pages","deviceId","device","devices","devicePages","getPagesList","page","push","buildPageDescription","debuggerUrl","id","webSocketDebuggerUrl","devtoolsFrontendUrl","encodeURIComponent","description","app","title","faviconUrl","type","vm","onConnection","socket","request","url","searchParams","URL","startsWith","deviceName","appName","deviceCounter","set","Device","context","log","info","msg","onClose","delete","addEventListener","undefined","pageId","Error","parseInt","handleDebuggerConnection","error","message","close","toString"],"mappings":"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","sourcesContent":["import { IncomingMessage } from 'http';\nimport { URL } from 'url';\nimport WebSocket from 'ws';\n// @ts-ignore\nimport Device from 'metro-inspector-proxy/src/Device';\nimport { BaseDevServerConfig } from '../BaseDevServer';\nimport { FastifyDevServer, OnSendHookHandler } from '../types';\nimport { WebSocketServer } from '../ws';\n\nconst WS_DEVICE_URL = '/inspector/device';\nconst WS_DEBUGGER_URL = '/inspector/debug';\n\ninterface PageDescription {\n  id: string;\n  description: string;\n  title: string;\n  faviconUrl: string;\n  devtoolsFrontendUrl: string;\n  type: string;\n  webSocketDebuggerUrl: string;\n  vm?: string;\n}\n\ninterface Page {\n  id: string;\n  title: string;\n  app: string;\n  vm?: string;\n}\n\nexport interface InspectorProxyConfig extends BaseDevServerConfig {}\n\nexport class InspectorProxy extends WebSocketServer {\n  private devices = new Map<number, Device>();\n  private deviceCounter = 0;\n  public readonly serverHost: string;\n\n  constructor(fastify: FastifyDevServer, private config: InspectorProxyConfig) {\n    super(fastify, [WS_DEVICE_URL, WS_DEBUGGER_URL]);\n    this.serverHost = `${this.config.host || 'localhost'}:${this.config.port}`;\n    this.setup();\n  }\n\n  private setup() {\n    const onSend: OnSendHookHandler<any> = (\n      _request,\n      reply,\n      _payload,\n      done\n    ) => {\n      reply.headers({\n        'Content-Type': 'application/json; charset=UTF-8',\n        'Cache-Control': 'no-cache',\n        Connection: 'close',\n      });\n      done();\n    };\n\n    this.fastify.get('/json/version', { onSend }, async () => {\n      return {\n        Browser: 'Mobile JavaScript',\n        'Protocol-Version': '1.1',\n      };\n    });\n\n    const pageListHandler = async () => {\n      const pages: PageDescription[] = [];\n      for (const [deviceId, device] of this.devices) {\n        const devicePages = device.getPagesList();\n        for (const page of devicePages) {\n          pages.push(this.buildPageDescription(deviceId, page));\n        }\n      }\n\n      return pages;\n    };\n\n    this.fastify.get('/json/list', { onSend }, pageListHandler);\n    this.fastify.get('/json', { onSend }, pageListHandler);\n  }\n\n  private buildPageDescription(deviceId: number, page: Page) {\n    const debuggerUrl = `${this.serverHost}${WS_DEBUGGER_URL}?device=${deviceId}&page=${page.id}`;\n    const webSocketDebuggerUrl = 'ws://' + debuggerUrl;\n    const devtoolsFrontendUrl =\n      'chrome-devtools://devtools/bundled/inspector.html?experiments=true&v8only=true&ws=' +\n      encodeURIComponent(debuggerUrl);\n    return {\n      id: `${deviceId}-${page.id}`,\n      description: page.app,\n      title: page.title,\n      faviconUrl: 'https://reactjs.org/favicon.ico',\n      devtoolsFrontendUrl,\n      type: 'node',\n      webSocketDebuggerUrl,\n      vm: page.vm,\n    };\n  }\n\n  /**\n   * Process new WebSocket connection from device.\n   *\n   * @param socket Incoming device's WebSocket connection.\n   * @param request Upgrade request for the connection.\n   */\n  onConnection(socket: WebSocket, request: IncomingMessage) {\n    try {\n      const { url = '' } = request;\n      const { searchParams } = new URL(url, 'http://localhost');\n\n      if (url.startsWith('/inspector/device')) {\n        const deviceName = searchParams.get('name') ?? 'Unknown';\n        const appName = searchParams.get('app') ?? 'Unknown';\n        const deviceId = this.deviceCounter++;\n\n        this.devices.set(\n          deviceId,\n          new Device(deviceId, deviceName, appName, socket, this.config.context)\n        );\n\n        this.fastify.log.info({ msg: 'Hermes device connected', deviceId });\n\n        const onClose = () => {\n          this.fastify.log.info({\n            msg: 'Hermes device disconnected',\n            deviceId,\n          });\n          this.devices.delete(deviceId);\n        };\n\n        socket.addEventListener('error', onClose);\n        socket.addEventListener('close', onClose);\n      } else {\n        const deviceId = searchParams.get('device') ?? undefined;\n        const pageId = searchParams.get('page') ?? undefined;\n\n        if (deviceId === undefined || pageId === undefined) {\n          throw new Error('Incorrect URL - must provide device and page IDs');\n        }\n\n        const device = this.devices.get(parseInt(deviceId, 10));\n        if (!device) {\n          throw new Error('Unknown device with ID ' + deviceId);\n        }\n\n        device.handleDebuggerConnection(socket, pageId);\n      }\n    } catch (error) {\n      this.fastify.log.error({\n        msg: 'Failed to establish connection with Hermes device',\n        error: (error as Error).message,\n      });\n      socket.close(1011, (error as Error).toString());\n    }\n  }\n}\n"],"file":"InspectorProxy.js"}