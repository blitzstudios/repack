{"version":3,"sources":["../../src/server/BaseDevServer.ts"],"names":["BaseDevServer","constructor","config","loggerOptions","fastify","wsRouter","WebSocketRouter","wsDebuggerServer","registerServer","WebSocketDebuggerServer","wsMessageServer","WebSocketMessageServer","wsEventsServer","WebSocketEventsServer","webSocketMessageServer","wsClientServer","WebSocketDevClientServer","addHook","request","reply","header","pathname","url","split","endsWith","InspectorProxy","setup","register","fastifyStatic","root","path","join","__dirname","prefix","prefixAvoidTrailingSlash","get","route","method","handler","_request","broadcast","send","customDebugger","process","env","REACT_DEBUGGER","isDebuggerConnected","https","host","port","log","info","msg","error","file","lineNumber","column","JSON","parse","body","context","replace","message","code","logLevel","run","listen"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fastifyStatic from 'fastify-static';\nimport open from 'open';\nimport openEditor from 'open-editor';\nimport { DevServerOptions } from '../types';\nimport { DevServerLoggerOptions, FastifyDevServer } from './types';\nimport { getFastifyInstance } from './utils/getFastifyInstance';\nimport {\n  WebSocketDebuggerServer,\n  WebSocketMessageServer,\n  WebSocketEventsServer,\n  WebSocketDevClientServer,\n} from './ws';\nimport { InspectorProxy } from './hermes/InspectorProxy';\nimport { WebSocketRouter } from './ws/WebSocketRouter';\n\n/**\n * {@link BaseDevServer} configuration options.\n */\nexport interface BaseDevServerConfig extends DevServerOptions {\n  /** Context in which all resolution happens. Usually it's project root directory. */\n  context: string;\n  /** Target application platform. */\n  platform: string;\n}\n\n/**\n * Base class for all Fastify-based servers.\n * It handles creation of a Fastify instance, creation of all WebSocket servers and running Fastify.\n *\n * @category Development server\n */\nexport class BaseDevServer {\n  /** Configuration options. */\n  protected config: BaseDevServerConfig;\n\n  /** Fastify instance. */\n  fastify: FastifyDevServer;\n  /** WebSocket router instance. */\n  wsRouter: WebSocketRouter;\n  /** Debugger server instance. */\n  wsDebuggerServer: WebSocketDebuggerServer;\n  /** Message server instance. */\n  wsMessageServer: WebSocketMessageServer;\n  /** Events server instance. */\n  wsEventsServer: WebSocketEventsServer;\n  /** Server instance for React Native clients. */\n  wsClientServer: WebSocketDevClientServer;\n\n  /**\n   * Constructs new `BaseDevServer` instance.\n   *\n   * @param config Configuration options.\n   * @param loggerOptions Logger options.\n   */\n  constructor(\n    config: BaseDevServerConfig,\n    loggerOptions?: DevServerLoggerOptions\n  ) {\n    this.config = config;\n    this.fastify = getFastifyInstance(this.config, loggerOptions);\n\n    this.wsRouter = new WebSocketRouter(this.fastify);\n    this.wsDebuggerServer = this.wsRouter.registerServer(\n      new WebSocketDebuggerServer(this.fastify)\n    );\n    this.wsMessageServer = this.wsRouter.registerServer(\n      new WebSocketMessageServer(this.fastify)\n    );\n    this.wsEventsServer = this.wsRouter.registerServer(\n      new WebSocketEventsServer(this.fastify, {\n        webSocketMessageServer: this.wsMessageServer,\n      })\n    );\n    this.wsClientServer = this.wsRouter.registerServer(\n      new WebSocketDevClientServer(this.fastify)\n    );\n\n    // Use onRequest hook to add additional headers. We cannot use onSend\n    // because WDM doesn't use typical Fastify lifecycle and onSend does not get called.\n    this.fastify.addHook('onRequest', async (request, reply) => {\n      reply.header('X-Content-Type-Options', 'nosniff');\n\n      const [pathname] = request.url.split('?');\n      if (pathname.endsWith('.map')) {\n        reply.header('Access-Control-Allow-Origin', 'devtools://devtools');\n      }\n    });\n\n    this.wsRouter.registerServer(new InspectorProxy(this.fastify, this.config));\n  }\n\n  /**\n   * Sets up common routes.\n   *\n   * All classes that implements {@link BaseDevServer} should call this method before\n   * calling {@link run}.\n   */\n  async setup() {\n    await this.fastify.register(fastifyStatic, {\n      root: path.join(__dirname, '../../first-party/debugger-ui'),\n      prefix: '/debugger-ui',\n      prefixAvoidTrailingSlash: true,\n    });\n\n    this.fastify.get('/', async () => {\n      return 'React Native packager is running';\n    });\n\n    this.fastify.get('/status', async () => 'packager-status:running');\n\n    this.fastify.route({\n      method: ['GET', 'POST', 'PUT'],\n      url: '/reload',\n      handler: (_request, reply) => {\n        this.wsMessageServer.broadcast('reload');\n        reply.send('OK');\n      },\n    });\n\n    this.fastify.route({\n      method: ['GET', 'POST', 'PUT'],\n      url: '/launch-js-devtools',\n      handler: async (request, reply) => {\n        const customDebugger = process.env.REACT_DEBUGGER;\n        if (customDebugger) {\n          // NOOP for now\n        } else if (!this.wsDebuggerServer.isDebuggerConnected()) {\n          const url = `${this.config.https ? 'https' : 'http'}://${\n            this.config.host || 'localhost'\n          }:${this.config.port}/debugger-ui`;\n          try {\n            this.fastify.log.info({ msg: 'Opening debugger UI', url });\n            await open(url);\n          } catch (error) {\n            if (error) {\n              this.fastify.log.error({\n                msg: 'Cannot open debugger UI',\n                url,\n                error,\n              });\n            }\n          }\n        }\n        reply.send('OK');\n      },\n    });\n\n    this.fastify.route({\n      method: ['GET', 'POST', 'PUT'],\n      url: '/open-stack-frame',\n      handler: async (request, reply) => {\n        try {\n          const { file, lineNumber, column } = JSON.parse(\n            request.body as string\n          ) as {\n            file: string;\n            lineNumber: number;\n            column?: number;\n          };\n          const url = `${path.join(\n            this.config.context,\n            file.replace('webpack://', '')\n          )}:${lineNumber}:${column ?? 1}`;\n\n          this.fastify.log.info({ msg: 'Opening stack frame in editor', url });\n          openEditor([url]);\n          reply.send('OK');\n        } catch (error) {\n          this.fastify.log.error({\n            msg: 'Failed to open stack frame in editor',\n            error: (error as Error).message,\n          });\n          reply.code(400).send();\n        }\n      },\n    });\n\n    this.fastify.route({\n      method: ['GET', 'POST', 'PUT'],\n      url: '/open-url',\n      handler: async (request, reply) => {\n        try {\n          const { url } = JSON.parse(request.body as string) as { url: string };\n          this.fastify.log.info({ msg: 'Opening URL', url });\n          await open(url);\n          reply.send('OK');\n        } catch (error) {\n          this.fastify.log.error({ msg: 'Failed to open URL', error });\n          reply.code(400).send();\n        }\n      },\n    });\n\n    // Silence this route\n    this.fastify.get(\n      '/inspector/device',\n      { logLevel: 'silent' as any },\n      (_request, reply) => {\n        reply.code(404).send();\n      }\n    );\n  }\n\n  /**\n   * Runs Fastify and listens on port and host specified in constructor.\n   */\n  async run() {\n    await this.fastify.listen({\n      port: this.config.port,\n      host: this.config.host,\n    });\n  }\n}\n"],"file":"BaseDevServer.js"}