{"version":3,"sources":["../../src/server/compilerWorker.ts"],"names":["webpackConfigPath","process","argv","webpackConfig","require","watchOptions","compiler","hooks","watchRun","tap","send","event","watch","error","console","exit"],"mappings":";;AAAA;;;;;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAACC,IAAR,CAAa,CAAb,CAA1B;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAACJ,iBAAD,CAA7B;;AACA,MAAMK,YAAY,4BAAGF,aAAa,CAACE,YAAjB,yEAAiC,EAAnD;AACA,MAAMC,QAAQ,GAAG,sBAAQH,aAAR,CAAjB;AAEAG,QAAQ,CAACC,KAAT,CAAeC,QAAf,CAAwBC,GAAxB,CAA4B,gBAA5B,EAA8C,MAAM;AAAA;;AAClD,+BAAAR,OAAO,EAACS,IAAR,+EAAe;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAf;AACD,CAFD;AAIAL,QAAQ,CAACM,KAAT,CAAeP,YAAf,EAA8BQ,KAAD,IAAW;AACtC,MAAIA,KAAJ,EAAW;AACTC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAZ,IAAAA,OAAO,CAACc,IAAR,CAAa,CAAb;AACD;AACF,CALD","sourcesContent":["import webpack from 'webpack';\n\nconst webpackConfigPath = process.argv[2];\nconst webpackConfig = require(webpackConfigPath) as webpack.Configuration;\nconst watchOptions = webpackConfig.watchOptions ?? {};\nconst compiler = webpack(webpackConfig);\n\ncompiler.hooks.watchRun.tap('compilerWorker', () => {\n  process.send?.({ event: 'watchRun' });\n});\n\ncompiler.watch(watchOptions, (error) => {\n  if (error) {\n    console.error(error);\n    process.exit(2);\n  }\n});\n"],"file":"compilerWorker.js"}