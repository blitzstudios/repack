{"version":3,"file":"ConsoleReporter.js","names":["_nodeUtil","_interopRequireDefault","require","colorette","_interopRequireWildcard","_throttleit","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ConsoleReporter","constructor","config","internalReporter","isWorker","asJson","JsonConsoleReporter","InteractiveConsoleReporter","process","log","flush","stop","exports","console","JSON","stringify","IS_SYMBOL_SUPPORTED","platform","env","CI","TERM","SYMBOLS","debug","gray","info","blue","warn","yellow","error","red","success","green","progress","FALLBACK_SYMBOLS","requestBuffer","level","type","firstMessage","message","processProgress","normalizedLog","normalizeLog","stdout","write","prettifyLog","issuer","value","push","msg","reqId","req","res","rest","bufferedReq","request","statusCode","method","url","Array","isArray","keys","length","issuerOverride","undefined","timestamp","throttle","label","percentage","Math","floor","concat","body","colorizeText","toString","statusText","status","util","inspect","colors","depth","Date","toISOString","split","bold","logType","text"],"sources":["../../../src/logging/reporters/ConsoleReporter.ts"],"sourcesContent":["import util from 'node:util';\nimport * as colorette from 'colorette';\nimport throttle from 'throttleit';\nimport type { LogEntry, LogType, Reporter } from '../types';\n\nexport interface ConsoleReporterConfig {\n  asJson?: boolean;\n  level?: 'silent' | 'normal' | 'verbose';\n  isWorker?: boolean;\n}\n\nexport class ConsoleReporter implements Reporter {\n  private internalReporter: Reporter;\n\n  constructor(private config: ConsoleReporterConfig) {\n    this.internalReporter =\n      this.config.isWorker || this.config.asJson\n        ? new JsonConsoleReporter(this.config)\n        : new InteractiveConsoleReporter(this.config);\n  }\n\n  process(log: LogEntry) {\n    this.internalReporter.process(log);\n  }\n\n  flush() {\n    this.internalReporter.flush();\n  }\n\n  stop() {\n    this.internalReporter.stop();\n  }\n}\n\nclass JsonConsoleReporter implements Reporter {\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    console.log(JSON.stringify(log));\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\nconst IS_SYMBOL_SUPPORTED =\n  process.platform !== 'win32' ||\n  process.env.CI ||\n  process.env.TERM === 'xterm-256color';\n\nconst SYMBOLS: Record<LogType, string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('ℹ'),\n  warn: colorette.yellow('⚠'),\n  error: colorette.red('✖'),\n  success: colorette.green('✔'),\n  progress: colorette.green('⇢'),\n};\n\nconst FALLBACK_SYMBOLS: Record<LogType, string> = {\n  debug: colorette.gray('?'),\n  info: colorette.blue('i'),\n  warn: colorette.yellow('!'),\n  error: colorette.red('x'),\n  success: colorette.green('✓'),\n  progress: colorette.green('->'),\n};\n\nclass InteractiveConsoleReporter implements Reporter {\n  private requestBuffer: Record<string, Object> = {};\n\n  constructor(private config: ConsoleReporterConfig) {}\n\n  process(log: LogEntry) {\n    // Do not log anything in silent mode\n    if (this.config.level === 'silent') {\n      return;\n    }\n\n    // Do not log debug messages in non-verbose mode\n    if (log.type === 'debug' && this.config.level !== 'verbose') {\n      return;\n    }\n\n    const [firstMessage] = log.message;\n    if (typeof firstMessage === 'object' && 'progress' in firstMessage) {\n      this.processProgress(log);\n      return;\n    }\n\n    const normalizedLog = this.normalizeLog(log);\n    if (normalizedLog) {\n      process.stdout.write(\n        `${\n          IS_SYMBOL_SUPPORTED ? SYMBOLS[log.type] : FALLBACK_SYMBOLS[log.type]\n        } ${this.prettifyLog(normalizedLog)}\\n`\n      );\n    }\n  }\n\n  private normalizeLog(log: LogEntry): LogEntry | undefined {\n    const message = [];\n    let issuer = log.issuer;\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        message.push(value);\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'incoming request'\n      ) {\n        // Incoming dev server request\n        const { reqId, req } = value as unknown as {\n          reqId: string;\n          req: Object;\n        };\n        // Save req object, so that we can extract data when request gets completed\n        this.requestBuffer[reqId] = req;\n      } else if (\n        'msg' in value &&\n        (value as { msg: string }).msg === 'request completed'\n      ) {\n        // Dev server response\n        const { reqId, res, msg, ...rest } = value as {\n          reqId: string;\n          res: Object;\n          msg: string | string[];\n        };\n        const bufferedReq = this.requestBuffer[reqId];\n        if (bufferedReq) {\n          message.push({\n            request: {\n              statusCode: (res as any).statusCode,\n              method: (bufferedReq as any).method,\n              url: (bufferedReq as any).url,\n            },\n          });\n        }\n\n        if (msg) {\n          message.push(...(Array.isArray(msg) ? msg : [msg]));\n        }\n\n        if (Object.keys(rest).length) {\n          message.push(rest);\n        }\n      } else if ('msg' in value) {\n        const {\n          msg,\n          issuer: issuerOverride,\n          ...rest\n        } = value as { msg: string | string[]; issuer?: string };\n        issuer = issuerOverride || issuer;\n        message.push(...(Array.isArray(msg) ? msg : [msg]), rest);\n      } else {\n        message.push(value);\n      }\n    }\n\n    // Ignore empty logs\n    if (!message.length) {\n      return undefined;\n    }\n\n    return {\n      timestamp: log.timestamp,\n      type: log.type,\n      issuer,\n      message,\n    };\n  }\n\n  private processProgress = throttle((log: LogEntry) => {\n    const {\n      progress: { value, label, message, platform },\n    } = log.message[0] as {\n      progress: {\n        value: number;\n        label: string;\n        message: string;\n        platform: string;\n      };\n    };\n\n    const percentage = Math.floor(value * 100);\n\n    process.stdout.write(\n      `${\n        IS_SYMBOL_SUPPORTED ? SYMBOLS.progress : FALLBACK_SYMBOLS.progress\n      } ${this.prettifyLog({\n        timestamp: log.timestamp,\n        issuer: log.issuer,\n        type: 'info',\n        message: [`Compiling ${platform}: ${percentage}% ${label}`].concat(\n          ...(message ? [`(${message})`] : [])\n        ),\n      })}\\n`\n    );\n  }, 1000);\n\n  private prettifyLog(log: LogEntry) {\n    let body = '';\n\n    for (const value of log.message) {\n      if (\n        typeof value === 'string' ||\n        typeof value === 'boolean' ||\n        typeof value === 'number'\n      ) {\n        // Colorize and concat primitive values\n        body += colorizeText(log.type, value.toString());\n        body += ' ';\n      } else if ('request' in value) {\n        // Colorize and concat dev server req/res object\n        const { request } = value as {\n          request: { method: string; statusCode: number; url: string };\n        };\n        const statusText = `${request.method} ${request.statusCode}`;\n\n        let status = colorette.green(statusText);\n        if (request.statusCode >= 500) {\n          status = colorette.red(statusText);\n        } else if (request.statusCode >= 400) {\n          status = colorette.yellow(statusText);\n        }\n\n        body += `${status} ${colorette.gray(request.url)}`;\n        body += ' ';\n      } else if (Object.keys(value).length) {\n        // Colorize and concat generic object\n        body +=\n          util.inspect(value, {\n            colors: true,\n            depth: 3,\n          }) + ' ';\n      }\n    }\n\n    return (\n      colorette.gray(\n        `[${new Date(log.timestamp).toISOString().split('T')[1]}]`\n      ) +\n      colorette.bold(`[${log.issuer}]`) +\n      ` ${body}`\n    );\n  }\n\n  flush() {\n    // NOOP\n  }\n\n  stop() {\n    // NOOP\n  }\n}\n\n/**\n * Apply ANSI colors to given text.\n *\n * @param logType Log type for the text, based on which different colors will be applied.\n * @param text Text to apply the color onto.\n * @returns Text wrapped in ANSI color sequences.\n *\n * @internal\n */\nfunction colorizeText(logType: LogType, text: string) {\n  if (logType === 'warn') {\n    return colorette.yellow(text);\n  }\n  if (logType === 'error') {\n    return colorette.red(text);\n  }\n\n  return text;\n}\n"],"mappings":"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","ignoreList":[]}