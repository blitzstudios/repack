{"version":3,"file":"ScriptManager.js","names":["EventEmitter","getWebpackContext","Script","NativeScriptManager","CACHE_KEY","__DEV__","ScriptManager","shared","__webpack_require__","repack","scriptManager","cache","cacheInitialized","resolvers","constructor","nativeScriptManager","Error","loadScriptCallback","push","parentPush","data","scriptId","caller","emit","bind","__destroy","undefined","Array","prototype","setStorage","storage","addResolver","resolver","priority","concat","sort","a","b","removeResolver","index","findIndex","item","splice","removeAllResolvers","initCache","JSON","parse","getItem","saveCache","setItem","stringify","handleError","error","message","args","console","originalError","resolveScript","webpackContext","length","locator","resolve","url","script","from","cacheKey","shouldUpdateScript","fetch","shouldUpdateCache","getCacheData","toObject","shouldRefetch","Promise","loadScript","reject","onLoaded","on","code","removeListener","catch","prefetchScript","invalidateScripts","scriptIds","ids","Object","keys"],"sources":["../../../src/modules/ScriptManager/ScriptManager.ts"],"sourcesContent":["/* globals __DEV__, __webpack_require__ */\nimport EventEmitter from 'events';\nimport { getWebpackContext } from './getWebpackContext';\nimport { Script } from './Script';\nimport type {\n  NormalizedScriptLocator,\n  ScriptLocatorResolver,\n  StorageApi,\n} from './types';\nimport NativeScriptManager from './NativeScriptManager';\n\ntype Cache = Record<\n  string,\n  Pick<NormalizedScriptLocator, 'method' | 'url' | 'query' | 'headers' | 'body'>\n>;\n\nconst CACHE_KEY = `Repack.ScriptManager.Cache.v3.${\n  __DEV__ ? 'debug' : 'release'\n}`;\n\n/* Options for resolver when adding it to a `ScriptManager`. */\nexport interface ResolverOptions {\n  /**\n   * Priority of the resolver. Defaults to `2`.\n   * Resolvers are called based on the highest priority,\n   * so higher the number, the higher priority the resolver gets.\n   */\n  priority?: number;\n}\n\n/**\n * A manager to ease resolution, downloading and executing additional code from:\n * - arbitrary JavaScript scripts\n * - Webpack chunks\n * - Webpack bundles\n * - Webpack MF containers\n *\n * ScriptManager is globally available under `ScriptManager.shared` in main bundle, chunks and containers.\n *\n * Use `ScriptManager.shared` instead of creating new instance of `ScriptManager`.\n *\n * This API is mainly useful, if you are working with any form of Code Splitting.\n *\n * `ScriptManager` is also an `EventEmitter` and emits the following events:\n * - `resolving` with `{ scriptId, caller }`\n * - `resolved` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `prefetching` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loading` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loaded` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `error` with `error: Error`\n *\n * Example of using this API with async Webpack chunk:\n * ```js\n * import * as React from 'react';\n * import { ScriptManager, Script } from '@callstack/repack/client';\n *\n * ScriptManager.shared.addResolver(async (scriptId) => {\n *   if (__DEV__) {\n *     return {\n *       url: Script.getDevServerURL(scriptId);\n *       cache: false,\n *     };\n *   }\n *\n *   return {\n *     url: Script.getRemoteURL(`http://domain.exaple/apps/${scriptId}`),\n *   };\n * });\n *\n * // ScriptManager.shared.loadScript is called internally when running `import()`\n * const TeacherModule = React.lazy(() => import('./Teacher.js'));\n * const StudentModule = React.lazy(() => import('./Student.js'));\n *\n * export function App({ role }) {\n *   if (role === 'teacher') {\n *     return <TeacherModule />;\n *   }\n *\n *   return <StudentModule />\n * }\n * ```\n */\nexport class ScriptManager extends EventEmitter {\n  static get shared(): ScriptManager {\n    if (!__webpack_require__.repack.shared.scriptManager) {\n      __webpack_require__.repack.shared.scriptManager = new ScriptManager();\n    }\n    return __webpack_require__.repack.shared.scriptManager;\n  }\n\n  protected cache: Cache = {};\n  protected cacheInitialized = false;\n  protected resolvers: [number, ScriptLocatorResolver][] = [];\n  protected storage?: StorageApi;\n\n  /**\n   * Constructs instance of `ScriptManager`.\n   *\n   * __Should not be called directly__ - use `ScriptManager.shared`.\n   *\n   * @internal\n   */\n  protected constructor(private nativeScriptManager = NativeScriptManager) {\n    super();\n\n    if (!nativeScriptManager) {\n      throw new Error(\n        'repack react-native module was not found.' +\n          (__DEV__ ? ' Did you forget to update native dependencies?' : '')\n      );\n    }\n\n    if (__webpack_require__.repack.shared.scriptManager) {\n      throw new Error(\n        'ScriptManager was already instantiated. Use ScriptManager.shared instead.'\n      );\n    }\n\n    __webpack_require__.repack.shared.loadScriptCallback.push = ((\n      parentPush: typeof Array.prototype.push,\n      ...data: string[][]\n    ) => {\n      const [[scriptId, caller]] = data;\n      this.emit('__loaded__', { scriptId, caller });\n      return parentPush(...data);\n    }).bind(\n      null,\n      __webpack_require__.repack.shared.loadScriptCallback.push.bind(\n        __webpack_require__.repack.shared.loadScriptCallback\n      )\n    );\n\n    __webpack_require__.repack.shared.scriptManager = this;\n  }\n\n  __destroy() {\n    __webpack_require__.repack.shared.scriptManager = undefined;\n    __webpack_require__.repack.shared.loadScriptCallback.push =\n      Array.prototype.push.bind(\n        __webpack_require__.repack.shared.loadScriptCallback\n      );\n  }\n\n  /**\n   * Sets a storage backend to cache resolved scripts locator data.\n   *\n   * The stored data is used to detect if scripts locator data of previously downloaded\n   * script hasn't changed to avoid over-fetching the script.\n   *\n   * @param storage Implementation of storage functions.\n   */\n  setStorage(storage?: StorageApi) {\n    this.storage = storage;\n  }\n\n  /**\n   * Adds new script locator resolver.\n   *\n   * Resolver is an async function to resolve script locator data - in other words, it's a function to\n   * tell the {@link ScriptManager} how to fetch the script.\n   *\n   * There's no limitation on what logic you can run inside this function - it can include:\n   * - fetching/loading remote config\n   * - fetching/loading feature flags\n   * - fetching/loading A/B testing data\n   * - calling native modules\n   * - running arbitrary logic\n   *\n   * @param resolver Resolver function to add.\n   * @param options Resolver options.\n   */\n  addResolver(\n    resolver: ScriptLocatorResolver,\n    { priority = 2 }: ResolverOptions = {}\n  ) {\n    this.resolvers = this.resolvers\n      .concat([[priority, resolver]])\n      .sort(([a], [b]) => b - a);\n  }\n\n  /**\n   * Removes previously added resolver.\n   *\n   * @param resolver Resolver function to remove.\n   * @returns `true` if resolver was found and removed, `false` otherwise.\n   */\n  removeResolver(resolver: ScriptLocatorResolver): boolean {\n    const index = this.resolvers.findIndex(([, item]) => item === resolver);\n    if (index > -1) {\n      this.resolvers.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes all previously added resolvers.\n   */\n  removeAllResolvers() {\n    this.resolvers = [];\n  }\n\n  protected async initCache() {\n    if (!this.cacheInitialized) {\n      const cache: Cache | null | undefined = JSON.parse(\n        (await this.storage?.getItem(CACHE_KEY)) ?? '{}'\n      );\n      this.cache = cache ?? {};\n      this.cacheInitialized = true;\n    }\n  }\n\n  protected async saveCache() {\n    await this.storage?.setItem(CACHE_KEY, JSON.stringify(this.cache));\n  }\n\n  protected handleError(error: any, message: string, ...args: any[]) {\n    console.error(message, ...args, { originalError: error });\n    // this.emit('error', { message, args, originalError: error });\n    // throw error;\n  }\n\n  /**\n   * Resolves a {@link Script} instance with normalized locator data.\n   *\n   * Resolution will use previously added (via `ScriptManager.shared.addResolver(...)`) resolvers\n   * in series, util one returns a locator data or will throw if no resolver handled the request.\n   *\n   * Use `ScriptManager.shared.on('resolving', ({ scriptId, caller }) => { })` to listen for when\n   * the script resolution begins.\n   *\n   * Use `ScriptManager.shared.on('resolved', (script) => { })` to listen for when\n   * the script's locator data is resolved.\n   *\n   * @param scriptId Id of the script to resolve.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async resolveScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ): Promise<any> {\n    await this.initCache();\n    try {\n      if (!this.resolvers.length) {\n        throw new Error(\n          'No script resolvers were added. Did you forget to call `ScriptManager.shared.addResolver(...)`?'\n        );\n      }\n\n      this.emit('resolving', { scriptId, caller });\n\n      let locator;\n      for (const [, resolve] of this.resolvers) {\n        locator = await resolve(scriptId, caller);\n        if (locator) {\n          break;\n        }\n      }\n\n      if (!locator) {\n        throw new Error(`No resolver was able to resolve script ${scriptId}`);\n      }\n\n      if (typeof locator.url === 'function') {\n        locator.url = locator.url(webpackContext);\n      }\n\n      const script = Script.from({ scriptId, caller }, locator, false);\n      const cacheKey = `${scriptId}_${caller ?? 'unknown'}`;\n\n      // Check if user provided a custom shouldUpdateScript function\n      if (locator.shouldUpdateScript) {\n        // If so, we need to wait for it to resolve\n        const fetch = await locator.shouldUpdateScript(\n          scriptId,\n          caller,\n          script.shouldUpdateCache(this.cache[cacheKey])\n        );\n\n        // If it returns true, we need to fetch the script\n        if (fetch) {\n          script.locator.fetch = true;\n          this.cache[cacheKey] = script.getCacheData();\n          await this.saveCache();\n        }\n\n        this.emit('resolved', script.toObject());\n\n        // if it returns false, we don't need to fetch the script\n        return script;\n      }\n\n      // If no custom shouldUpdateScript function was provided, we use the default behaviour\n      if (!this.cache[cacheKey]) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      } else if (script.shouldRefetch(this.cache[cacheKey])) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      }\n\n      this.emit('resolved', script.toObject());\n\n      return script;\n    } catch (error) {\n      this.handleError(\n        error,\n        '[ScriptManager] Failed while resolving script locator:',\n        { scriptId, caller }\n      );\n      return new Promise((resolve) => {\n        resolve(null);\n      });\n    }\n  }\n\n  /**\n   * Resolves given script's location, downloads and executes it.\n   * The execution of the code is handled internally by threading in React Native.\n   *\n   * Use `ScriptManager.shared.on('loading', (script) => { })` to listen for when\n   * the script is about to be loaded.\n   *\n   * Use `ScriptManager.shared.on('loaded', (script) => { })` to listen for when\n   * the script is loaded.\n   *\n   * @param scriptId Id of the script to load.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async loadScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    let script = await this.resolveScript(scriptId, caller, webpackContext);\n    if (!script) {\n      return;\n    }\n    return await new Promise<void>((resolve, reject) => {\n      (async () => {\n        const onLoaded = (data: { scriptId: string; caller?: string }) => {\n          if (data.scriptId === scriptId && data.caller === caller) {\n            this.emit('loaded', script.toObject());\n            resolve();\n          }\n        };\n\n        try {\n          this.emit('loading', script.toObject());\n          this.on('__loaded__', onLoaded);\n          await this.nativeScriptManager.loadScript(scriptId, script.locator);\n        } catch (error) {\n          const { code } = error as Error & { code: string };\n          this.handleError(\n            error,\n            '[ScriptManager] Failed to load script:',\n            code ? `[${code}]` : '',\n            script.toObject()\n          );\n        } finally {\n          this.removeListener('__loaded__', onLoaded);\n        }\n      })().catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Resolves given script's location and downloads it without executing.\n   * This function can be awaited to detect if the script was downloaded and for error handling.\n   *\n   * Use `ScriptManager.shared.on('prefetching', (script) => { })` to listen for when\n   * the script's prefetch beings.\n   *\n   * @param scriptId Id of the script to prefetch.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async prefetchScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    let script = await this.resolveScript(scriptId, caller, webpackContext);\n    if (!script) {\n      return;\n    }\n    try {\n      this.emit('prefetching', script.toObject());\n      await this.nativeScriptManager.prefetchScript(scriptId, script.locator);\n    } catch (error) {\n      const { code } = error as Error & { code: string };\n      this.handleError(\n        error,\n        '[ScriptManager] Failed to prefetch script:',\n        code ? `[${code}]` : '',\n        script.toObject()\n      );\n    }\n  }\n\n  /**\n   * Clears the cache (if configured in {@link ScriptManager.setStorage}) and removes downloaded\n   * files for given scripts from the filesystem. This function can be awaited to detect if the\n   * scripts were invalidated and for error handling.\n   *\n   * Use `ScriptManager.shared.on('invalidated', (scriptIds) => { })` to listen for when\n   * the invalidation completes.\n   *\n   * @param scriptIds Array of script ids to clear from cache and remove from filesystem.\n   */\n  async invalidateScripts(scriptIds: string[]) {\n    try {\n      await this.initCache();\n      const ids = scriptIds ?? Object.keys(this.cache);\n\n      if (scriptIds) {\n        for (const scriptId of ids) {\n          delete this.cache[scriptId];\n        }\n      } else {\n        this.cache = {};\n      }\n\n      await this.saveCache();\n      await this.nativeScriptManager.invalidateScripts(ids);\n      this.emit('invalidated', ids);\n    } catch (error) {\n      const { code } = error as Error & { code: string };\n      this.handleError(\n        error,\n        '[ScriptManager] Failed to invalidate scripts:',\n        code ? `[${code}]` : ''\n      );\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}