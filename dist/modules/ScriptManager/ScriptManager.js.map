{"version":3,"file":"ScriptManager.js","names":["EventEmitter","NativeScriptManager","Script","getWebpackContext","CACHE_NAME","CACHE_VERSION","CACHE_ENV","__DEV__","CACHE_KEY","join","LOADING_ERROR_CODES","ScriptManager","init","__webpack_require__","repack","shared","scriptManager","cache","scriptsPromises","cacheInitialized","resolvers","constructor","nativeScriptManager","Error","setStorage","storage","addResolver","resolver","priority","concat","sort","a","b","removeResolver","index","findIndex","item","splice","removeAllResolvers","initCache","cacheEntry","getItem","JSON","parse","saveCache","setItem","stringify","handleError","error","message","args","console","originalError","resolveScript","scriptId","caller","webpackContext","length","emit","locator","resolve","url","script","from","cacheKey","uniqueId","shouldUpdateScript","fetch","shouldUpdateCache","getCacheData","toObject","shouldRefetch","Promise","loadScript","getScriptUniqueId","isPrefetch","loadProcess","loadScriptWithRetry","code","retry","retryDelay","attempts","includes","setTimeout","prefetchScript","invalidateScripts","scriptIds","ids","Object","keys","forEach","unstable_evaluateScript","scriptSource","scriptSourceUrl"],"sources":["../../../src/modules/ScriptManager/ScriptManager.ts"],"sourcesContent":["// biome-ignore lint/style/useNodejsImportProtocol: use 'events' module instead of node builtin\nimport EventEmitter from 'events';\nimport NativeScriptManager, {\n  type NormalizedScriptLocator,\n} from './NativeScriptManager';\nimport { Script } from './Script';\nimport { getWebpackContext } from './getWebpackContext';\nimport type { ScriptLocator, ScriptLocatorResolver, StorageApi } from './types';\n\ntype Cache = Record<\n  string,\n  Pick<NormalizedScriptLocator, 'method' | 'url' | 'query' | 'headers' | 'body'>\n>;\n\ntype ScriptsPromises = Record<\n  string,\n  (Promise<void> & { isPrefetch?: true }) | undefined\n>;\n\nconst CACHE_NAME = 'Repack.ScriptManager.Cache';\nconst CACHE_VERSION = 'v4';\nconst CACHE_ENV = __DEV__ ? 'debug' : 'release';\n\nconst CACHE_KEY = [CACHE_NAME, CACHE_VERSION, CACHE_ENV].join('.');\n\nconst LOADING_ERROR_CODES = [\n  // android\n  'NetworkFailure',\n  'RequestFailure',\n  // ios\n  'ScriptDownloadFailure',\n];\n\n/* Options for resolver when adding it to a `ScriptManager`. */\nexport interface ResolverOptions {\n  /**\n   * Priority of the resolver. Defaults to `2`.\n   * Resolvers are called based on the highest priority,\n   * so higher the number, the higher priority the resolver gets.\n   */\n  priority?: number;\n}\n\n/**\n * A manager to ease resolution, downloading and executing additional code from:\n * - arbitrary JavaScript scripts\n * - Webpack chunks\n * - Webpack bundles\n * - Webpack MF containers\n *\n * ScriptManager is globally available under `ScriptManager.shared` in main bundle, chunks and containers.\n *\n * Use `ScriptManager.shared` instead of creating new instance of `ScriptManager`.\n *\n * This API is mainly useful, if you are working with any form of Code Splitting.\n *\n * `ScriptManager` is also an `EventEmitter` and emits the following events:\n * - `resolving` with `{ scriptId, caller }`\n * - `resolved` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `prefetching` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loading` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `loaded` with `scriptId: string, caller?: string, locator: NormalizedScriptLocator, cache: boolean`\n * - `error` with `error: Error`\n *\n * Example of using this API with async Webpack chunk:\n * ```js\n * import * as React from 'react';\n * import { ScriptManager, Script } from '@callstack/repack/client';\n *\n * ScriptManager.shared.addResolver(async (scriptId) => {\n *   if (__DEV__) {\n *     return {\n *       url: Script.getDevServerURL(scriptId);\n *       cache: false,\n *     };\n *   }\n *\n *   return {\n *     url: Script.getRemoteURL(`http://domain.exaple/apps/${scriptId}`),\n *   };\n * });\n *\n * // ScriptManager.shared.loadScript is called internally when running `import()`\n * const TeacherModule = React.lazy(() => import('./Teacher.js'));\n * const StudentModule = React.lazy(() => import('./Student.js'));\n *\n * export function App({ role }) {\n *   if (role === 'teacher') {\n *     return <TeacherModule />;\n *   }\n *\n *   return <StudentModule />\n * }\n * ```\n */\nexport class ScriptManager extends EventEmitter {\n  static init() {\n    if (!__webpack_require__.repack.shared.scriptManager) {\n      __webpack_require__.repack.shared.scriptManager = new ScriptManager();\n    }\n  }\n\n  static get shared(): ScriptManager {\n    return __webpack_require__.repack.shared.scriptManager!;\n  }\n\n  protected cache: Cache = {};\n  protected scriptsPromises: ScriptsPromises = {};\n  protected cacheInitialized = false;\n  protected resolvers: [number, ScriptLocatorResolver][] = [];\n  protected storage?: StorageApi;\n\n  /**\n   * Constructs instance of `ScriptManager`.\n   *\n   * __Should not be called directly__ - use `ScriptManager.shared`.\n   *\n   * @internal\n   */\n  protected constructor(private nativeScriptManager = NativeScriptManager) {\n    super();\n\n    if (!nativeScriptManager) {\n      throw new Error(\n        'repack react-native module was not found.' +\n          (__DEV__ ? ' Did you forget to update native dependencies?' : '')\n      );\n    }\n\n    if (__webpack_require__.repack.shared.scriptManager) {\n      throw new Error(\n        'ScriptManager was already instantiated. Use ScriptManager.shared instead.'\n      );\n    }\n\n    __webpack_require__.repack.shared.scriptManager = this;\n  }\n\n  /**\n   * Sets a storage backend to cache resolved scripts locator data.\n   *\n   * The stored data is used to detect if scripts locator data of previously downloaded\n   * script hasn't changed to avoid over-fetching the script.\n   *\n   * @param storage Implementation of storage functions.\n   */\n  setStorage(storage?: StorageApi) {\n    this.storage = storage;\n  }\n\n  /**\n   * Adds new script locator resolver.\n   *\n   * Resolver is an async function to resolve script locator data - in other words, it's a function to\n   * tell the {@link ScriptManager} how to fetch the script.\n   *\n   * There's no limitation on what logic you can run inside this function - it can include:\n   * - fetching/loading remote config\n   * - fetching/loading feature flags\n   * - fetching/loading A/B testing data\n   * - calling native modules\n   * - running arbitrary logic\n   *\n   * @param resolver Resolver function to add.\n   * @param options Resolver options.\n   */\n  addResolver(\n    resolver: ScriptLocatorResolver,\n    { priority = 2 }: ResolverOptions = {}\n  ) {\n    this.resolvers = this.resolvers\n      .concat([[priority, resolver]])\n      .sort(([a], [b]) => b - a);\n  }\n\n  /**\n   * Removes previously added resolver.\n   *\n   * @param resolver Resolver function to remove.\n   * @returns `true` if resolver was found and removed, `false` otherwise.\n   */\n  removeResolver(resolver: ScriptLocatorResolver): boolean {\n    const index = this.resolvers.findIndex(([, item]) => item === resolver);\n    if (index > -1) {\n      this.resolvers.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes all previously added resolvers.\n   */\n  removeAllResolvers() {\n    this.resolvers = [];\n  }\n\n  protected async initCache() {\n    if (!this.cacheInitialized) {\n      const cacheEntry = await this.storage?.getItem(CACHE_KEY);\n      this.cache = cacheEntry ? JSON.parse(cacheEntry) : {};\n      this.cacheInitialized = true;\n    }\n  }\n\n  protected async saveCache() {\n    await this.storage?.setItem(CACHE_KEY, JSON.stringify(this.cache));\n  }\n\n  protected handleError(error: any, message: string, ...args: any[]) {\n    console.error(message, ...args, { originalError: error });\n    // this.emit('error', { message, args, originalError: error });\n    // throw error;\n  }\n\n  /**\n   * Resolves a {@link Script} instance with normalized locator data.\n   *\n   * Resolution will use previously added (via `ScriptManager.shared.addResolver(...)`) resolvers\n   * in series, util one returns a locator data or will throw if no resolver handled the request.\n   *\n   * Use `ScriptManager.shared.on('resolving', ({ scriptId, caller }) => { })` to listen for when\n   * the script resolution begins.\n   *\n   * Use `ScriptManager.shared.on('resolved', (script) => { })` to listen for when\n   * the script's locator data is resolved.\n   *\n   * @param scriptId Id of the script to resolve.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async resolveScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ): Promise<any> {\n    await this.initCache();\n    try {\n      if (!this.resolvers.length) {\n        throw new Error(\n          'No script resolvers were added. Did you forget to call `ScriptManager.shared.addResolver(...)`?'\n        );\n      }\n\n      this.emit('resolving', { scriptId, caller });\n\n      let locator: ScriptLocator | undefined;\n      for (const [, resolve] of this.resolvers) {\n        locator = await resolve(scriptId, caller);\n        if (locator) {\n          break;\n        }\n      }\n\n      if (!locator) {\n        throw new Error(`No resolver was able to resolve script ${scriptId}`);\n      }\n\n      if (typeof locator.url === 'function') {\n        locator.url = locator.url(webpackContext);\n      }\n\n      const script = Script.from({ scriptId, caller }, locator, false);\n      const cacheKey = script.locator.uniqueId;\n\n      // Check if user provided a custom shouldUpdateScript function\n      if (locator.shouldUpdateScript) {\n        // If so, we need to wait for it to resolve\n        const fetch = await locator.shouldUpdateScript(\n          scriptId,\n          caller,\n          script.shouldUpdateCache(this.cache[cacheKey])\n        );\n\n        // If it returns true, we need to fetch the script\n        if (fetch) {\n          script.locator.fetch = true;\n          this.cache[cacheKey] = script.getCacheData();\n          await this.saveCache();\n        }\n\n        this.emit('resolved', script.toObject());\n\n        // if it returns false, we don't need to fetch the script\n        return script;\n      }\n\n      // If no custom shouldUpdateScript function was provided, we use the default behaviour\n      if (!this.cache[cacheKey]) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      } else if (script.shouldRefetch(this.cache[cacheKey])) {\n        script.locator.fetch = true;\n        this.cache[cacheKey] = script.getCacheData();\n        await this.saveCache();\n      }\n\n      this.emit('resolved', script.toObject());\n\n      return script;\n    } catch (error) {\n      this.handleError(\n        error,\n        '[ScriptManager] Failed while resolving script locator:',\n        { scriptId, caller }\n      );\n      return new Promise((resolve) => {\n        resolve(null);\n      });\n    }\n  }\n\n  /**\n   * Resolves given script's location, downloads and executes it.\n   * The execution of the code is handled internally by threading in React Native.\n   *\n   * Use `ScriptManager.shared.on('loading', (script) => { })` to listen for when\n   * the script is about to be loaded.\n   *\n   * Use `ScriptManager.shared.on('loaded', (script) => { })` to listen for when\n   * the script is loaded.\n   *\n   * @param scriptId Id of the script to load.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async loadScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    const uniqueId = Script.getScriptUniqueId(scriptId, caller);\n    if (this.scriptsPromises[uniqueId]) {\n      const { isPrefetch } = this.scriptsPromises[uniqueId];\n\n      // prefetch is not execute the script so we need to run loadScript if promise is for prefetch\n      if (isPrefetch) {\n        await this.scriptsPromises[uniqueId];\n      } else {\n        return this.scriptsPromises[uniqueId];\n      }\n    }\n    const loadProcess = async () => {\n      const script = await this.resolveScript(scriptId, caller, webpackContext);\n      if (!script) {\n        return;\n      }\n\n      try {\n        this.emit('loading', script.toObject());\n        await this.loadScriptWithRetry(scriptId, script.locator);\n        this.emit('loaded', script.toObject());\n      } catch (error) {\n        const { code } = error as Error & { code: string };\n        this.handleError(\n          error,\n          '[ScriptManager] Failed to load script:',\n          code ? `[${code}]` : '',\n          script.toObject()\n        );\n      }\n\n      delete this.scriptsPromises[uniqueId];\n    };\n\n    this.scriptsPromises[uniqueId] = loadProcess();\n    return this.scriptsPromises[uniqueId];\n  }\n\n  /**\n   * Loads a script with retry logic.\n   *\n   * This function attempts to load a script using the nativeScriptManager.\n   * If the initial attempt fails, it retries the specified number of times\n   * with an optional delay between retries.\n   *\n   * @param {string} scriptId - The ID of the script to load.\n   * @param {NormalizedScriptLocator} locator - An NormalizedScriptLocator containing retry configuration.\n   * @param {number} [locator.retry=0] - The number of retry attempts.\n   * @param {number} [locator.retryDelay=0] - The delay in milliseconds between retries.\n   * @throws {Error} Throws an error if all retry attempts fail.\n   */\n  protected async loadScriptWithRetry(\n    scriptId: string,\n    locator: NormalizedScriptLocator & { retryDelay?: number; retry?: number }\n  ) {\n    const { retry = 0, retryDelay = 0 } = locator;\n    let attempts = retry + 1; // Include the initial attempt\n\n    while (attempts > 0) {\n      try {\n        await this.nativeScriptManager.loadScript(scriptId, locator);\n        return; // Successfully loaded the script, exit the loop\n      } catch (error) {\n        attempts--;\n        const { code } = error as Error & { code: string };\n        if (attempts > 0 && LOADING_ERROR_CODES.includes(code)) {\n          if (retryDelay > 0) {\n            await new Promise((resolve) => setTimeout(resolve, retryDelay));\n          }\n        } else {\n          throw error; // No more retries, throw the error\n        }\n      }\n    }\n  }\n\n  /**\n   * Resolves given script's location and downloads it without executing.\n   * This function can be awaited to detect if the script was downloaded and for error handling.\n   *\n   * Use `ScriptManager.shared.on('prefetching', (script) => { })` to listen for when\n   * the script's prefetch beings.\n   *\n   * @param scriptId Id of the script to prefetch.\n   * @param caller Name of the calling script - it can be for example: name of the bundle, chunk or container.\n   */\n  async prefetchScript(\n    scriptId: string,\n    caller?: string,\n    webpackContext = getWebpackContext()\n  ) {\n    const uniqueId = Script.getScriptUniqueId(scriptId, caller);\n    if (this.scriptsPromises[uniqueId]) {\n      return this.scriptsPromises[uniqueId];\n    }\n    const loadProcess = async () => {\n      const script = await this.resolveScript(scriptId, caller, webpackContext);\n      if (!script) {\n        return;\n      }\n\n      try {\n        this.emit('prefetching', script.toObject());\n        await this.nativeScriptManager.prefetchScript(scriptId, script.locator);\n      } catch (error) {\n        const { code } = error as Error & { code: string };\n        this.handleError(\n          error,\n          '[ScriptManager] Failed to prefetch script:',\n          code ? `[${code}]` : '',\n          script.toObject()\n        );\n      }\n\n      delete this.scriptsPromises[uniqueId];\n    };\n\n    this.scriptsPromises[uniqueId] = loadProcess();\n    this.scriptsPromises[uniqueId].isPrefetch = true;\n    return this.scriptsPromises[uniqueId];\n  }\n\n  /**\n   * Clears the cache (if configured in {@link ScriptManager.setStorage}) and removes downloaded\n   * files for given scripts from the filesystem. This function can be awaited to detect if the\n   * scripts were invalidated and for error handling.\n   *\n   * Use `ScriptManager.shared.on('invalidated', (scriptIds) => { })` to listen for when\n   * the invalidation completes.\n   *\n   * @param scriptIds Array of script ids to clear from cache and remove from filesystem.\n   * @returns Array of script ids that were invalidated.\n   */\n  async invalidateScripts(scriptIds: string[]) {\n    try {\n      await this.initCache();\n\n      const ids = scriptIds.length ? scriptIds : Object.keys(this.cache);\n      ids.forEach((scriptId) => {\n        delete this.cache[scriptId];\n        delete this.scriptsPromises[scriptId];\n      });\n\n      await this.saveCache();\n      await this.nativeScriptManager.invalidateScripts(scriptIds);\n\n      this.emit('invalidated', ids);\n      return ids;\n    } catch (error) {\n      const { code } = error as Error & { code: string };\n      this.handleError(\n        error,\n        '[ScriptManager] Failed to invalidate scripts:',\n        code ? `[${code}]` : ''\n      );\n    }\n  }\n\n  /**\n   * Evaluates a script synchronously.\n   *\n   * This function sends the script source and its URL to the native script manager for evaluation.\n   * It is functionally identical to `globalEvalWithSourceUrl`.\n   *\n   * @param scriptSource The source code of the script to evaluate.\n   * @param scriptSourceUrl The URL of the script source, used for debugging purposes.\n   */\n  unstable_evaluateScript(scriptSource: string, scriptSourceUrl: string) {\n    this.nativeScriptManager.unstable_evaluateScript(\n      scriptSource,\n      scriptSourceUrl\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}