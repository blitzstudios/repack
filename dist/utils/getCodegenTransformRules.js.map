{"version":3,"file":"getCodegenTransformRules.js","names":["getCodegenTransformRules","type","test","use","loader","options","babelrc","configFile","parserOpts","flow","plugins","overrides","isTSX","allowNamespaces","sourceMaps"],"sources":["../../src/utils/getCodegenTransformRules.ts"],"sourcesContent":["/**\n * Returns `module.rules` configuration for handling React Native codegen transformation.\n * This is required for projects using React Native New Architecture.\n *\n * @returns Array of module rules\n */\nexport function getCodegenTransformRules() {\n  return [\n    {\n      type: 'javascript/auto',\n      test: /(?:^|[\\\\/])(?:Native\\w+|(\\w+)NativeComponent)\\.[jt]sx?$/,\n      // make sure this runs first so that the flow types are intact\n      // since hermes-parser strips all comments\n      use: {\n        loader: 'babel-loader',\n        options: {\n          babelrc: false,\n          configFile: false,\n          parserOpts: {\n            // hermes-parser strips all comments so the information about flow pragma is lost\n            // assume flow when dealing with JS files as a workaround\n            flow: 'all',\n          },\n          plugins: [\n            'babel-plugin-syntax-hermes-parser',\n            ['@babel/plugin-syntax-typescript', false],\n            '@react-native/babel-plugin-codegen',\n          ],\n          // config merging reference: https://babeljs.io/docs/options#pluginpreset-entries\n          overrides: [\n            {\n              test: /\\.ts$/,\n              plugins: [\n                [\n                  '@babel/plugin-syntax-typescript',\n                  { isTSX: false, allowNamespaces: true },\n                ],\n              ],\n            },\n            {\n              test: /\\.tsx$/,\n              plugins: [\n                [\n                  '@babel/plugin-syntax-typescript',\n                  { isTSX: true, allowNamespaces: true },\n                ],\n              ],\n            },\n          ],\n          // source maps are usually set based on the devtool option in config\n          // Re.Pack templates disable the devtool by default and the flag in loader is not set\n          // we need to enable sourcemaps for the loader explicitly here\n          sourceMaps: true,\n        },\n      },\n    },\n  ];\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,wBAAwBA,CAAA,EAAG;EACzC,OAAO,CACL;IACEC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE,yDAAyD;IAC/D;IACA;IACAC,GAAG,EAAE;MACHC,MAAM,EAAE,cAAc;MACtBC,OAAO,EAAE;QACPC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE,KAAK;QACjBC,UAAU,EAAE;UACV;UACA;UACAC,IAAI,EAAE;QACR,CAAC;QACDC,OAAO,EAAE,CACP,mCAAmC,EACnC,CAAC,iCAAiC,EAAE,KAAK,CAAC,EAC1C,oCAAoC,CACrC;QACD;QACAC,SAAS,EAAE,CACT;UACET,IAAI,EAAE,OAAO;UACbQ,OAAO,EAAE,CACP,CACE,iCAAiC,EACjC;YAAEE,KAAK,EAAE,KAAK;YAAEC,eAAe,EAAE;UAAK,CAAC,CACxC;QAEL,CAAC,EACD;UACEX,IAAI,EAAE,QAAQ;UACdQ,OAAO,EAAE,CACP,CACE,iCAAiC,EACjC;YAAEE,KAAK,EAAE,IAAI;YAAEC,eAAe,EAAE;UAAK,CAAC,CACvC;QAEL,CAAC,CACF;QACD;QACA;QACA;QACAC,UAAU,EAAE;MACd;IACF;EACF,CAAC,CACF;AACH","ignoreList":[]}