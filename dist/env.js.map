{"version":3,"sources":["../src/env.ts"],"names":["WORKER_ENV_KEY","VERBOSE_ENV_KEY","CLI_OPTIONS_ENV_KEY","isWorker","Boolean","process","env","isVerbose"],"mappings":";;;;;;;;AAAO,MAAMA,cAAc,GAAG,aAAvB;;AAEA,MAAMC,eAAe,GAAG,cAAxB;;AAEA,MAAMC,mBAAmB,GAAG,kBAA5B;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACO,SAASC,QAAT,GAAoB;AACzB,SAAOC,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYN,cAAZ,CAAD,CAAd;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASO,SAAT,GAAqB;AAC1B,SAAOH,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYL,eAAZ,CAAD,CAAd;AACD","sourcesContent":["export const WORKER_ENV_KEY = 'RNWT_WORKER';\n\nexport const VERBOSE_ENV_KEY = 'RNWT_VERBOSE';\n\nexport const CLI_OPTIONS_ENV_KEY = 'RNWT_CLI_OPTIONS';\n\n/**\n * Checks if code is running as a worker.\n *\n * @returns True if running as a worker.\n *\n * @internal\n */\nexport function isWorker() {\n  return Boolean(process.env[WORKER_ENV_KEY]);\n}\n\n/**\n * Checks if code is running in verbose mode.\n *\n * @returns True if running in verbose mode.\n *\n * @internal\n */\nexport function isVerbose() {\n  return Boolean(process.env[VERBOSE_ENV_KEY]);\n}\n"],"file":"env.js"}